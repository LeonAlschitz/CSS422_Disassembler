00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/8/2021 9:43:28 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ; D3 = OP size. ie. Byte, Word, Long
00000000                            10  ; D4 = Original hex code
00000000                            11  ; D5 = Current Register or Mode being isolated
00000000                            12  
00000000                            13  ; A3 will store starting address
00000000                            14  ; A4 will store ending address
00000000                            15  
00000000                            16  
00000000                            17  ; -------------------------------------
00000000                            18  ; General outline
00000000                            19  
00000000                            20  
00000000                            21  ; Get Source Mode and Registration
00000000                            22  ; Get Destination Mode and Registration
00000000                            23  ; based off of these values, you can determine the Addressing mode, and size
00000000                            24  
00000000                            25  ; Depending on the opcode, the mode can be found in a few different locations
00000000                            26  
00000000                            27  
00000000                            28  ; Print out the rest of the data as you process it
00000000                            29  
00000000                            30  
00000000                            31  ; --------------------------------------
00000000                            32  
00000000                            33  
00000000                            34  
00000000                            35  ; based on the size of the move operation Print out an amount of data as is.
00000000                            36  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00000000                            37  EA_MOVE:
00000000                            38          
00000000                            39  ; A = Size
00000000                            40  ; B = Destination Register
00000000                            41  ; C = Destination Mode
00000000                            42  ; D = Source Mode
00000000                            43  ; E = Source Register
00000000                            44  
00000000                            45  ; 00AA BBBC CCDD DEEE 
00000000                            46          ; SIMHALT
00000000                            47      
00000000  4285                      48          CLR.L   D5
00000002  3A04                      49          MOVE.W  D4, D5
00000004                            50          
00000004  123C 000A                 51          MOVE.B      #10,D1
00000008  E36D                      52          LSL.W       D1,D5       
0000000A  123C 000D                 53          MOVE.B      #13,D1
0000000E  E26D                      54          LSR.W       D1,D5
00000010                            55          ;   Isolating Source Mode
00000010                            56          
00000010  4EB9 00000018             57          JSR         EA_JUMP_TABLE
00000016                            58          
00000016                            59          ; Print Out ", "
00000016                            60          
00000016                            61          ; Isolate Destination Mode and Register
00000016                            62          
00000016                            63          ; JSR EA_JUMP_TABLE
00000016                            64          
00000016                            65          ; Final output Format = MOVE.X D##, D##
00000016                            66      
00000016  4E75                      67          RTS
00000018                            68      
00000018                            69  
00000018                            70  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4
00000018                            71  EA_JUMP_TABLE:
00000018                            72  
00000018  BA3C 0000                 73          CMP.B       #0,D5
0000001C  6700 004A                 74          BEQ         J_TBL_D
00000020  BA3C 0002                 75          CMP.B       #2,D5
00000024  6700 0060                 76          BEQ         J_TBL_A
00000028  BA3C 0003                 77          CMP.B       #3,D5
0000002C  6700 0058                 78          BEQ         J_TBL_A
00000030  BA3C 0004                 79          CMP.B       #4,D5
00000034  6700 00A4                 80          BEQ         J_TBL_A_DECR
00000038                            81          
00000038  4EB9 0000004E             82          JSR         J_TO_IMPLEMENT
0000003E                            83          ;   deal with errors here
0000003E  4E75                      84          RTS
00000040                            85  J_NUM:
00000040  43F9 00000114             86          LEA         NUM_MSG, A1
00000046  103C 000E                 87          MOVE.B      #14, D0
0000004A  4E4F                      88          TRAP        #15
0000004C  4E75                      89          RTS
0000004E                            90  J_TO_IMPLEMENT:
Line 91 ERROR: Undefined symbol
0000004E  43F9 004DBD16             91          LEA         SPACE_MSG, A1
00000054  103C 000E                 92          MOVE.B      #14, D0
00000058  4E4F                      93          TRAP        #15
0000005A                            94  
0000005A  43F9 00000117             95          LEA         TEMP_MSG, A1
00000060  103C 000E                 96          MOVE.B      #14, D0
00000064  4E4F                      97          TRAP        #15
00000066  4E75                      98          RTS
00000068                            99  
00000068                           100  
00000068                           101  J_TBL_D:
Line 102 ERROR: Undefined symbol
00000068  43F9 004DBD16            102          LEA         SPACE_MSG, A1
0000006E  103C 000E                103          MOVE.B      #14, D0
00000072  4E4F                     104          TRAP        #15
00000074  43F9 00000104            105          LEA         MODE_0_MSG, A1 ; D#
0000007A  103C 000E                106          MOVE.B      #14, D0
0000007E  4E4F                     107          TRAP        #15
00000080                           108          ; add code to deal with register
00000080  4EB8 0040                109          JSR         J_NUM
00000084                           110          
00000084                           111  
00000084  4E75                     112          RTS
00000086                           113  
00000086                           114  J_TBL_A:
Line 115 ERROR: Undefined symbol
00000086  43F9 004DBD16            115          LEA         SPACE_MSG, A1
0000008C  103C 000E                116          MOVE.B      #14, D0
00000090  4E4F                     117          TRAP        #15
00000092  43F9 00000108            118          LEA         MODE_A_MSG, A1 ; (A#)
00000098  103C 000E                119          MOVE.B      #14, D0
0000009C  4E4F                     120          TRAP        #15
0000009E                           121          ; add code to deal with register
0000009E  4EB8 0040                122          JSR         J_NUM
000000A2                           123          
000000A2  43F9 0000010B            124          LEA         MODE_A_1_MSG, A1
000000A8  103C 000E                125          MOVE.B      #14, D0
000000AC  4E4F                     126          TRAP        #15
000000AE                           127  
000000AE  4E75                     128          RTS
000000B0                           129      
000000B0                           130  J_TBL_A_INCR:
Line 131 ERROR: Undefined symbol
000000B0  43F9 004DBD16            131          LEA         SPACE_MSG, A1
000000B6  103C 000E                132          MOVE.B      #14, D0
000000BA  4E4F                     133          TRAP        #15
000000BC  43F9 00000108            134          LEA         MODE_A_MSG, A1 ; (A#)+
000000C2  103C 000E                135          MOVE.B      #14, D0
000000C6  4E4F                     136          TRAP        #15
000000C8                           137          ; add code to deal with register
000000C8  4EB8 0040                138          JSR         J_NUM
000000CC                           139          
000000CC  43F9 0000010D            140          LEA         MODE_A_2_MSG, A1
000000D2  103C 000E                141          MOVE.B      #14, D0
000000D6  4E4F                     142          TRAP        #15
000000D8                           143  
000000D8  4E75                     144          RTS
000000DA                           145          
000000DA                           146  J_TBL_A_DECR:
Line 147 ERROR: Undefined symbol
000000DA  43F9 004DBD16            147          LEA         SPACE_MSG, A1
000000E0  103C 000E                148          MOVE.B      #14, D0
000000E4  4E4F                     149          TRAP        #15
000000E6  43F9 00000110            150          LEA         MODE_MINUS_MSG, A1 ; -(A#)
000000EC  103C 000E                151          MOVE.B      #14, D0
000000F0  4E4F                     152          TRAP        #15
000000F2                           153          ; add code to deal with register
000000F2  4EB8 0040                154          JSR         J_NUM
000000F6                           155          
000000F6  43F9 0000010B            156          LEA         MODE_A_1_MSG, A1
000000FC  103C 000E                157          MOVE.B      #14, D0
00000100  4E4F                     158          TRAP        #15
00000102                           159  
00000102  4E75                     160          RTS
00000104                           161      
00000104                           162          
00000104                           163  
00000104                           164  
00000104                           165  
00000104                           166  
00000104= 44 00                    167  MODE_0_MSG:     DC.B        'D',0
00000106= 41 00                    168  MODE_1_MSG:     DC.B        'A',0
00000108= 28 41 00                 169  MODE_A_MSG:     DC.B        '(A',0
0000010B= 29 00                    170  MODE_A_1_MSG:   DC.B        ')',0
0000010D= 29 2B 00                 171  MODE_A_2_MSG:   DC.B        ')+',0
00000110= 2D 28 41 00              172  MODE_MINUS_MSG: DC.B        '-(A',0
00000114                           173  
00000114= 23 23 00                 174  NUM_MSG:        DC.B        '##',0
00000117= 54 4D 50 00              175  TEMP_MSG:       DC.B        'TMP',0
0000011B                           176  
0000011B                           177  
0000011B                           178  
0000011B                           179  
0000011B                           180  
0000011B                           181  
0000011B                           182  
0000011B                           183  *~Font name~Courier New~
0000011B                           184  *~Font size~10~
0000011B                           185  *~Tab type~1~
0000011B                           186  *~Tab size~4~
0000011B                           187  
Line 188 WARNING: END directive missing, starting address not set

5 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
EA_JUMP_TABLE       18
EA_MOVE             0
J_NUM               40
J_TBL_A             86
J_TBL_A_DECR        DA
J_TBL_A_INCR        B0
J_TBL_D             68
J_TO_IMPLEMENT      4E
MODE_0_MSG          104
MODE_1_MSG          106
MODE_A_1_MSG        10B
MODE_A_2_MSG        10D
MODE_A_MSG          108
MODE_MINUS_MSG      110
NUM_MSG             114
TEMP_MSG            117
