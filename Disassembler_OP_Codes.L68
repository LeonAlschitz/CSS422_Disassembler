00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/13/2021 6:56:48 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  
00000000                            10  ; D4 Contains Original hex code
00000000                            11  ; D3 Contains modified hex code
00000000                            12  
00000000                            13  ; D1 is used to bit shift
00000000                            14  
00000000                            15  
00000000                            16  ; D4 = XXXX YYYY YYYY YYYY
00000000                            17  JUMP_OP_CODE:
00000000                            18          ; SIMHALT
00000000  4283                      19          CLR.L       D3
00000002  2604                      20          MOVE.L      D4, D3
00000004  4281                      21          CLR.L       D1
00000006  4282                      22          CLR.L       D2
00000008  123C 000C                 23          MOVE.B      #12, D1
0000000C  E26B                      24          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
0000000E                            25  
0000000E                            26  
0000000E  B63C 0000                 27          CMP.B       #$0, D3
00000012  6700 004E                 28          BEQ         JUMP_0 
00000016  B63C 0001                 29          CMP.B       #$1, D3
0000001A  6700 0058                 30          BEQ         JUMP_1 
0000001E  B63C 0002                 31          CMP.B       #$2, D3
00000022  6700 005E                 32          BEQ         JUMP_2
00000026  B63C 0003                 33          CMP.B       #$3, D3
0000002A  6700 006E                 34          BEQ         JUMP_3
0000002E  B63C 0004                 35          CMP.B       #$4, D3
00000032  6700 0090                 36          BEQ         JUMP_4
00000036  B63C 0005                 37          CMP.B       #$5, D3
0000003A  6700 00BA                 38          BEQ         JUMP_5
0000003E  B63C 0006                 39          CMP.B       #$6, D3
00000042  6700 00C4                 40          BEQ         JUMP_6
00000046  B63C 0007                 41          CMP.B       #$7, D3
0000004A  6700 00C2                 42          BEQ         JUMP_7
0000004E  B63C 0008                 43          CMP.B       #$8, D3
00000052  6700 00C0                 44          BEQ         JUMP_8
00000056  B63C 0009                 45          CMP.B       #$9, D3
0000005A  6700 00BE                 46          BEQ         JUMP_9
0000005E                            47  
0000005E  6000 00E4                 48          BRA         JUMP_ERROR
00000062                            49  
00000062                            50  
00000062                            51  
00000062                            52  
00000062                            53         
00000062                            54          
00000062                            55  *0000 - ORI      
00000062                            56  JUMP_0:
00000062                            57          *ORI
00000062  4EB9 000001E4             58          JSR         Bits11to8
00000068  B43C 0000                 59          CMP.B       #$0, D2  
0000006C  6700 023C                 60          BEQ         OP_CODE_ORI
00000070                            61          
00000070  6000 00E0                 62          BRA         INVALID_INSTR
00000074                            63          
00000074                            64  *0001 - MOVE.B     
00000074                            65  JUMP_1:
00000074                            66  
00000074  4EB9 000001FC             67          JSR         OP_CODE_BASE_MOVE
Line 68 ERROR: Undefined symbol
0000007A  4EB9 004DBD16             68          JSR         EA_MOVE 
00000080  4E75                      69          RTS
00000082                            70  
00000082                            71  
00000082                            72  *0010 - MOVE.L, MOVEA.L
00000082                            73  JUMP_2:
00000082                            74  
00000082  4EB9 000001C0             75          JSR         Bits8to6
00000088  B43C 0001                 76          CMP.B       #$1, D2 
0000008C  6700 018C                 77          BEQ         J_MOVEA_L 
00000090  6600 01AC                 78          BNE         J_MOVE_L
00000094                            79  
00000094                            80  
00000094  6000 00BC                 81          BRA         INVALID_INSTR
00000098  4E75                      82          RTS
0000009A                            83          
0000009A                            84  *0011 - MOVE.W, MOVEA.W
0000009A                            85  JUMP_3:
0000009A                            86  
0000009A  4EB9 000001C0             87          JSR         Bits8to6
000000A0  0C02 0001                 88          CMPI.B       #$1, D2 
000000A4  6700 01BC                 89          BEQ         J_MOVEA_W
000000A8  6600 01DC                 90          BNE         J_MOVE_W
000000AC                            91          
000000AC                            92          
000000AC                            93          
000000AC  6000 00A4                 94          BRA INVALID_INSTR
000000B0                            95          
000000B0  4E75                      96          RTS
000000B2                            97  MOVEM_CHECK:
000000B2  4282                      98          CLR.L       D2
000000B4  2404                      99          MOVE.L      D4, D2
000000B6  0802 000B                100          BTST        #11,D2 ;
000000BA  6600 022A                101          BNE         OP_CODE_MOVEM
000000BE  4EF9 00000152            102          JMP         INVALID_INSTR
000000C4                           103          
000000C4                           104  *0100 - NOP, LEA, JSR
000000C4                           105  JUMP_4:
000000C4                           106  
000000C4  4282                     107          CLR.L       D2
000000C6  3404                     108          MOVE.W      D4, D2
000000C8  B67C 4E71                109          CMP.W       #$4E71, D3 ;NOP 
000000CC  6700 01EA                110          BEQ         OP_CODE_NOP
000000D0                           111          
000000D0  4EB9 0000019C            112          JSR         Bits7to6     ;
000000D6  0C02 0002                113          CMPI.B      #2, D2
000000DA  6700 01EA                114          BEQ         OP_CODE_JSR ;JSR
000000DE  4EF8 00B2                115          JMP         MOVEM_CHECK ;
000000E2                           116          
000000E2  4EB9 000001C0            117          JSR         Bits8to6     ;
000000E8  0C02 0007                118          CMPI.B      #7, D2
000000EC  6700 01E6                119          BEQ         OP_CODE_LEA ;LEA
000000F0                           120          
000000F0                           121          
000000F0  6000 0060                122          BRA INVALID_INSTR
000000F4                           123          
000000F4  4E75                     124          RTS  
000000F6                           125  
000000F6                           126  
000000F6                           127  
000000F6                           128  *0101 - ADDQ       
000000F6                           129  JUMP_5:
000000F6  4282                     130          CLR.L       D2
000000F8  2404                     131          MOVE.L      D4, D2
000000FA  0802 0008                132          BTST        #8,D2 
000000FE  6700 0218                133          BEQ         OP_CODE_ADDQ  
00000102  6000 004E                134          BRA         INVALID_INSTR
00000106  4E75                     135          RTS  
00000108                           136          
00000108                           137  JUMP_6:
00000108                           138  
00000108  6000 0048                139          BRA         INVALID_INSTR
0000010C  4E75                     140          RTS  
0000010E                           141  JUMP_7:
0000010E  6000 0042                142          BRA         INVALID_INSTR 
00000112  4E75                     143          RTS
00000114                           144  JUMP_8:
00000114  6000 003C                145          BRA         INVALID_INSTR
00000118  4E75                     146          RTS
0000011A                           147  
0000011A                           148  JUMP_9:
0000011A  6000 0036                149          BRA         INVALID_INSTR
0000011E  4E75                     150          RTS         
00000120                           151  
00000120                           152  JUMP_A:
00000120  6000 0030                153          BRA         INVALID_INSTR
00000124  4E75                     154          RTS 
00000126                           155  JUMP_B:
00000126  6000 002A                156          BRA         INVALID_INSTR
0000012A  4E75                     157          RTS         
0000012C                           158  
0000012C                           159  JUMP_C:
0000012C  6000 0024                160          BRA         INVALID_INSTR
00000130  4E75                     161          RTS 
00000132                           162  
00000132                           163  JUMP_D:
00000132  6000 001E                164          BRA         INVALID_INSTR
00000136  4E75                     165          RTS 
00000138                           166   
00000138                           167  JUMP_E:
00000138  4EB9 0000019C            168          JSR         Bits7to6
0000013E                           169          
0000013E  6000 0012                170          BRA         INVALID_INSTR
00000142  4E75                     171          RTS  
00000144                           172           
00000144                           173  JUMP_ERROR:       
00000144  43F9 000003A8            174          LEA         ERROR_INSTR, A1
0000014A  103C 000E                175          MOVE.B      #14, D0
0000014E  4E4F                     176          TRAP        #15
00000150                           177  
00000150  4E75                     178          RTS
00000152                           179  
00000152                           180  INVALID_INSTR:
00000152  43F9 00000390            181          LEA         IMPLEMENT_MSG, A1
00000158  103C 000E                182          MOVE.B      #14, D0
0000015C  4E4F                     183          TRAP        #15
0000015E  4E75                     184          RTS
00000160                           185  
00000160                           186  
00000160                           187  *-----------ISOLATE BITS------------------------------------
00000160                           188  *---------ISOLATE SRC REG-------
00000160                           189  Bits2to0:
00000160  3404                     190          MOVE.W      D4, D2
00000162  103C 000D                191          MOVE.B      #13, D0     ; Shifting 13 bits
00000166  E16A                     192          LSL.W       D0, D2      ; shorten to two bits
00000168  E06A                     193          LSR.W       D0, D2      ; isolate two bits
0000016A  4E75                     194          RTS
0000016C                           195  *-------------------------------
0000016C                           196      
0000016C                           197  Bits3to0:
0000016C  3404                     198          MOVE.W      D4, D2
0000016E  103C 000C                199          MOVE.B      #12, D0     ; Shift 12 bits
00000172  E16A                     200          LSL.W       D0, D2      ; Shorten to 4th bit
00000174  E06A                     201          LSR.W       D0, D2      ; Isolate 4 bits
00000176  4E75                     202          RTS
00000178                           203      
00000178                           204  *---------ISOLATE SRC REG-------    
00000178                           205  Bits5to3:
00000178  3404                     206          MOVE.W      D4, D2
0000017A  103C 000A                207          MOVE.B      #10, D0     ; Shift 10 bits
0000017E  E16A                     208          LSL.W       D0, D2      ; cut to 5th bit
00000180  103C 000D                209          MOVE.B      #13, D0     ; Shift 13 bits
00000184  E06A                     210          LSR.W       D0, D2      ; Isolate bits 5-3
00000186  4E75                     211          RTS
00000188                           212  *-------------------------------
00000188                           213  
00000188                           214  *------ISOLATE SRC--------    
00000188                           215  Bits7to0:
00000188  3404                     216          MOVE.W      D4, D2
0000018A  E14A                     217          LSL.W       #8, D2      ; cut to 8th bit
0000018C  E04A                     218          LSR.W       #8, D2      ; Isolate 7-0
0000018E  4E75                     219          RTS
00000190                           220  *-------------------------    
00000190                           221  Bits7to4: 
00000190  3404                     222          MOVE.W      D4, D2
00000192  E14A                     223          LSL.W       #8, D2      ; cut to 8th bit
00000194  103C 000C                224          MOVE.B      #12, D0     ; shift 12 bits
00000198  E06A                     225          LSR.W       D0, D2      ; isolate 7-4
0000019A  4E75                     226          RTS
0000019C                           227      
0000019C                           228  Bits7to6:
0000019C  3404                     229          MOVE.W      D4, D2
0000019E  E14A                     230          LSL.W       #8, D2      ; cut to 8th bit
000001A0  103C 000E                231          MOVE.B      #14, D0     ; shift 14 bits
000001A4  E06A                     232          LSR.W       D0, D2      ; isolate 7-6
000001A6  4E75                     233          RTS
000001A8                           234      
000001A8                           235  Bits8to3:
000001A8  3404                     236          MOVE.W      D4, D2
000001AA  EF4A                     237          LSL.W       #7, D2      ; cut to 9th bit
000001AC  103C 000A                238          MOVE.B      #10, D0     ; shift 10 bits
000001B0  E06A                     239          LSR.W       D0, D2      ; isolate 8-3
000001B2  4E75                     240          RTS
000001B4                           241      
000001B4                           242  Bits8to4:
000001B4  3404                     243          MOVE.W      D4, D2
000001B6  EF4A                     244          LSL.W       #7, D2      ; cut to 9th bit
000001B8  103C 000B                245          MOVE.B      #11, D0     ; shift 11 bits
000001BC  E06A                     246          LSR.W       D0, D2      ; isolate 8-4
000001BE  4E75                     247          RTS
000001C0                           248      
000001C0                           249  Bits8to6:
000001C0  3404                     250          MOVE.W      D4, D2
000001C2  EF4A                     251          LSL.W       #7, D2      ; cut to 9th bit
000001C4  103C 000D                252          MOVE.B      #13, D0     ; shift 13 bits
000001C8  E06A                     253          LSR.W       D0, D2      ; isolate 8-6
000001CA  4E75                     254          RTS
000001CC                           255  Bits9to7:
000001CC  3404                     256          MOVE.W      D4, D2
000001CE  ED4A                     257          LSL.W       #6, D2      ; cut to 10th bit
000001D0  103C 000D                258          MOVE.B      #13, D0     ; shift 13 bits
000001D4  E06A                     259          LSR.W       D0, D2      ; isolate 8-6
000001D6  4E75                     260          RTS
000001D8                           261  *----ISOLATE DEST---------    
000001D8                           262  Bits11to6:
000001D8  3404                     263          MOVE.W      D4, D2
000001DA  E94A                     264          LSL.W       #4, D2      ; cut to 12th bit
000001DC  103C 000A                265          MOVE.B      #10, D0     ; shift 10 bits
000001E0  E06A                     266          LSR.W       D0, D2      ; isolate 11-6
000001E2  4E75                     267          RTS
000001E4                           268  *-------------------------
000001E4                           269  
000001E4                           270       
000001E4                           271  Bits11to8:
000001E4  3404                     272          MOVE.W      D4, D2
000001E6  E94A                     273          LSL.W       #4, D2      ; cut to 12th bit
000001E8  103C 000C                274          MOVE.B      #12, D0     ; shift 12 bits
000001EC  E06A                     275          LSR.W       D0, D2      ; isolate 11-8
000001EE  4E75                     276          RTS
000001F0                           277  
000001F0                           278  *----ISOLATE DEST REG-----      
000001F0                           279  Bits11to9:
000001F0  3404                     280          MOVE.W      D4, D2
000001F2  E94A                     281          LSL.W       #4, D2      ; cut to 12th bit
000001F4  103C 000D                282          MOVE.B      #13, D0     ; shift 13 bits
000001F8  E06A                     283          LSR.W       D0, D2      ; isolate 11-9
000001FA  4E75                     284          RTS
000001FC                           285  *-------------------------
000001FC                           286  
000001FC                           287  
000001FC                           288  *MOVE.B - 0001
000001FC                           289  *------------------------------------------------------------- 
000001FC                           290  OP_CODE_BASE_MOVE:
000001FC                           291          ; This should only execute for Move.B
000001FC  43F9 0000032B            292          LEA         MOVE_MSG, A1
00000202  103C 000E                293          MOVE.B      #14, D0
00000206  4E4F                     294          TRAP        #15
00000208  43F9 00000387            295          LEA         BYTE_MSG, A1
0000020E  103C 000E                296          MOVE.B      #14, D0
00000212  4E4F                     297          TRAP        #15
00000214                           298          
00000214  163C 0000                299          MOVE.B      #0, D3
00000218                           300          
00000218                           301          
00000218                           302          
00000218  4E75                     303          RTS         
0000021A                           304  
0000021A                           305  *MOVE.L, MOVEA.L - 0010
0000021A                           306  *-------------------------------------------------------------  
0000021A                           307  J_MOVEA_L:
0000021A  43F9 00000330            308          LEA         MOVEA_MSG, A1
00000220  103C 000E                309          MOVE.B      #14, D0
00000224  4E4F                     310          TRAP        #15
00000226  43F9 0000038D            311          LEA         LONG_MSG, A1
0000022C  103C 000E                312          MOVE.B      #14, D0
00000230  4E4F                     313          TRAP        #15
00000232                           314          
00000232  163C 0002                315          MOVE.B      #2, D3
Line 316 ERROR: Undefined symbol
00000236  4EB9 004DBD16            316          JSR         EA_MOVE
0000023C  4E75                     317          RTS    
0000023E                           318  J_MOVE_L:
0000023E  43F9 0000032B            319          LEA         MOVE_MSG, A1
00000244  103C 000E                320          MOVE.B      #14, D0
00000248  4E4F                     321          TRAP        #15
0000024A  43F9 0000038D            322          LEA         LONG_MSG, A1
00000250  103C 000E                323          MOVE.B      #14, D0
00000254  4E4F                     324          TRAP        #15
00000256                           325          
00000256  163C 0002                326          MOVE.B      #2, D3
Line 327 ERROR: Undefined symbol
0000025A  4EB9 004DBD16            327          JSR         EA_MOVE
00000260                           328          
00000260  4E75                     329          RTS
00000262                           330  
00000262                           331  
00000262                           332  *MOVE.W, MOVEA.W - 0011
00000262                           333  *-------------------------------------------------------------  
00000262                           334  
00000262                           335  J_MOVEA_W:
00000262  43F9 00000330            336          LEA         MOVEA_MSG, A1
00000268  103C 000E                337          MOVE.B      #14, D0
0000026C  4E4F                     338          TRAP        #15
0000026E  43F9 0000038A            339          LEA         WORD_MSG, A1
00000274  103C 000E                340          MOVE.B      #14, D0
00000278  4E4F                     341          TRAP        #15
0000027A                           342          
0000027A  163C 0001                343          MOVE.B      #1, D3
Line 344 ERROR: Undefined symbol
0000027E  4EB9 004DBD16            344          JSR         EA_MOVE
00000284                           345          
00000284  4E75                     346          RTS  
00000286                           347      
00000286                           348  J_MOVE_W:
00000286  43F9 0000032B            349          LEA         MOVE_MSG, A1
0000028C  103C 000E                350          MOVE.B      #14, D0
00000290  4E4F                     351          TRAP        #15
00000292  43F9 0000038A            352          LEA         WORD_MSG, A1
00000298  103C 000E                353          MOVE.B      #14, D0
0000029C  4E4F                     354          TRAP        #15
0000029E                           355          
0000029E  163C 0001                356          MOVE.B      #1, D3
Line 357 ERROR: Undefined symbol
000002A2  4EB9 004DBD16            357          JSR         EA_MOVE
000002A8                           358          
000002A8  4E75                     359          RTS  
000002AA                           360      
000002AA                           361  *ORI - 0000
000002AA                           362  *-------------------------------------------------------------
000002AA                           363  OP_CODE_ORI:
000002AA  43F9 00000336            364          LEA         ORI_MSG, A1
000002B0  103C 000E                365          MOVE.B      #14, D0
000002B4  4E4F                     366          TRAP        #15
000002B6                           367  
000002B6  4E75                     368          RTS
000002B8                           369  
000002B8                           370  
000002B8                           371  *NOP/JSR/LEA - 0100
000002B8                           372  *-------------------------------------------------------------
000002B8                           373  OP_CODE_NOP:
000002B8  43F9 0000033A            374          LEA         NOP_MSG, A1
000002BE  103C 000E                375          MOVE.B      #14, D0
000002C2  4E4F                     376          TRAP        #15
000002C4                           377  
000002C4  4E75                     378          RTS
000002C6                           379             
000002C6                           380  
000002C6                           381  OP_CODE_JSR:
000002C6  43F9 00000348            382          LEA         JSR_MSG, A1
000002CC  103C 000E                383          MOVE.B      #14, D0
000002D0  4E4F                     384          TRAP        #15
000002D2                           385          
000002D2                           386          *STORE DEST AND STORE IN REGISTER
000002D2                           387          *EA
000002D2                           388  
000002D2  4E75                     389          RTS
000002D4                           390          
000002D4                           391  OP_CODE_LEA:
000002D4  43F9 00000344            392          LEA         LEA_MSG, A1
000002DA  103C 000E                393          MOVE.B      #14, D0
000002DE  4E4F                     394          TRAP        #15
000002E0  103C 0002                395          MOVE.B      #2, D0
000002E4                           396  
000002E4                           397          *EA
000002E4                           398          *JSR         EA_LEA
000002E4                           399  
000002E4  4E75                     400          RTS
000002E6                           401  
000002E6                           402  *MOVEM/EXT - 0100
000002E6                           403  *-------------------------------------------------------------
000002E6                           404  OP_CODE_MOVEM:
000002E6  4EB8 01CC                405          JSR         Bits9to7 ;check for MOVEM and EXT
000002EA  B43C 0001                406          CMP.B       #1, D2   ;
000002EE                           407          
000002EE                           408  MOVEM_OR_EXT:
000002EE  4EB8 0178                409          JSR         Bits5to3  ;
000002F2  B43C 0000                410          CMP.B       #0, D2    ;
000002F6  6700 0008                411          BEQ         OP_CODE_EXT ;
000002FA                           412          
000002FA  3404                     413          MOVE.W      D4, D2
000002FC  0802 000A                414          BTST        #10, D2
00000300                           415  *        BEQ         MOVEM_MEMORY
00000300                           416   
00000300                           417  OP_CODE_EXT:
00000300  43F9 0000037D            418          LEA         EXT_MSG, A1
00000306  103C 000E                419          MOVE.B      #14, D0
0000030A  4E4F                     420          TRAP        #15
0000030C                           421  *MOVEM_MEMORY:
0000030C                           422                 
0000030C                           423          
0000030C                           424  MOVEM_DISPLAY:
0000030C  43F9 0000033E            425          LEA         MOVEM_MSG, A1
00000312  103C 000E                426          MOVE.B      #14, D0
00000316  4E4F                     427          TRAP        #15
00000318                           428  
00000318                           429  *ADDQ - 0101, BScc, Scc
00000318                           430  *-------------------------------------------------------------        
00000318                           431  OP_CODE_ADDQ:
00000318  43F9 00000326            432          LEA         ADDQ_MSG, A1
0000031E  103C 000E                433          MOVE.B      #14, D0
00000322  4E4F                     434          TRAP        #15
00000324                           435          
00000324  4E75                     436          RTS
00000326                           437          ;JSR         Bits7to6  
00000326                           438          ;MOVE        #5, TAB
00000326                           439          ;JSR         SizeTwoBits 
00000326                           440   *EA STUFF, MAYBE CHECK FOR DISPLACEMENT COUNT?
00000326                           441  
00000326                           442  
00000326                           443  *ASL/ASR - 1110
00000326                           444  *-------------------------------------------------------------
00000326                           445  *OP_CODE_ASL:
00000326                           446  *        LEA         ASL_MSG, A1
00000326                           447  *        MOVE.B      #14, D0
00000326                           448  *        TRAP        #15
00000326                           449  *        BRA         ROT_SHIFT
00000326                           450  *OP_CODE_ASR:
00000326                           451  *        LEA         ASR_MSG, A1
00000326                           452  *        MOVE.B      #14, D0
00000326                           453  *        TRAP        #15
00000326                           454  *        BRA         ROT_SHIFT
00000326                           455  *
00000326                           456  *MEMORY SHIFTS, WORK WITH EA
00000326                           457  *ROT_SHIFT:
00000326                           458  *        
00000326                           459  
00000326                           460  
00000326= 41 44 44 51 00           461  ADDQ_MSG:       DC.B        'ADDQ',0
0000032B= 4D 4F 56 45 00           462  MOVE_MSG:       DC.B        'MOVE',0
00000330= 4D 4F 56 45 41 00        463  MOVEA_MSG:      DC.B        'MOVEA',0
00000336= 4F 52 49 00              464  ORI_MSG:        DC.B        'ORI',0
0000033A= 4E 4F 50 00              465  NOP_MSG:        DC.B        'NOP',0
0000033E= 4D 4F 56 45 4D 00        466  MOVEM_MSG:      DC.B        'MOVEM',0
00000344= 4C 45 41 00              467  LEA_MSG:        DC.B        'LEA',0
00000348= 4A 53 52 00              468  JSR_MSG:        DC.B        'JSR',0
0000034C= 42 52 41 00              469  BRA_MSG:        DC.B        'BRA',0
00000350= 42 53 52 00              470  BSR_MSG:        DC.B        'BSR',0
00000354= 4D 4F 56 45 51 00        471  MOVEQ_MSG:      DC.B        'MOVEQ',0
0000035A= 44 49 56 55 00           472  DIVU_MSG:       DC.B        'DIVU',0
0000035F= 53 55 42 00              473  SUB_MSG:        DC.B        'SUB',0
00000363= 43 4D 50 00              474  CMP_MSG:        DC.B        'CMP',0
00000367= 4D 55 4C 55 00           475  MULU_MSG:       DC.B        'MULU',0
0000036C= 41 44 44 00              476  ADD_MSG:        DC.B        'ADD',0
00000370= 41 44 44 41 00           477  ADDA_MSG:       DC.B        'ADDA',0
00000375= 41 53 4C 00              478  ASL_MSG:        DC.B        'ASL',0
00000379= 41 53 52 00              479  ASR_MSG:        DC.B        'ASR',0
0000037D= 45 58 54 00              480  EXT_MSG:        DC.B        'EXT',0
00000381= 23 00                    481  POUND:          DC.B        '#',0
00000383= 24 00                    482  DOLLAR:         DC.B        '$',0
00000385= 25 00                    483  PERCENT:        DC.B        '%',0
00000387                           484  
00000387                           485  ; Size messages
00000387                           486  
00000387= 2E 42 00                 487  BYTE_MSG:       DC.B        '.B',0
0000038A= 2E 57 00                 488  WORD_MSG:       DC.B        '.W',0
0000038D= 2E 4C 00                 489  LONG_MSG:       DC.B        '.L',0
00000390= 4F 50 2D 43 4F 44 ...    490  IMPLEMENT_MSG:  DC.B        'OP-CODE NOT IMPLEMENTED',0
000003A8= 49 4E 56 41 4C 49 ...    491  ERROR_INSTR:    DC.B  'INVALID OP-CODE',0
000003B8                           492  
000003B8                           493  
000003B8                           494  
000003B8                           495  
000003B8                           496  
000003B8                           497  
000003B8                           498  
000003B8                           499  
000003B8                           500  
000003B8                           501  
000003B8                           502  
000003B8                           503  
000003B8                           504  
000003B8                           505  
000003B8                           506  
000003B8                           507  
000003B8                           508  
000003B8                           509  
000003B8                           510  
000003B8                           511  
000003B8                           512  
Line 513 WARNING: END directive missing, starting address not set

5 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            370
ADDQ_MSG            326
ADD_MSG             36C
ASL_MSG             375
ASR_MSG             379
BITS11TO6           1D8
BITS11TO8           1E4
BITS11TO9           1F0
BITS2TO0            160
BITS3TO0            16C
BITS5TO3            178
BITS7TO0            188
BITS7TO4            190
BITS7TO6            19C
BITS8TO3            1A8
BITS8TO4            1B4
BITS8TO6            1C0
BITS9TO7            1CC
BRA_MSG             34C
BSR_MSG             350
BYTE_MSG            387
CMP_MSG             363
DIVU_MSG            35A
DOLLAR              383
ERROR_INSTR         3A8
EXT_MSG             37D
IMPLEMENT_MSG       390
INVALID_INSTR       152
JSR_MSG             348
JUMP_0              62
JUMP_1              74
JUMP_2              82
JUMP_3              9A
JUMP_4              C4
JUMP_5              F6
JUMP_6              108
JUMP_7              10E
JUMP_8              114
JUMP_9              11A
JUMP_A              120
JUMP_B              126
JUMP_C              12C
JUMP_D              132
JUMP_E              138
JUMP_ERROR          144
JUMP_OP_CODE        0
J_MOVEA_L           21A
J_MOVEA_W           262
J_MOVE_L            23E
J_MOVE_W            286
LEA_MSG             344
LONG_MSG            38D
MOVEA_MSG           330
MOVEM_CHECK         B2
MOVEM_DISPLAY       30C
MOVEM_MSG           33E
MOVEM_OR_EXT        2EE
MOVEQ_MSG           354
MOVE_MSG            32B
MULU_MSG            367
NOP_MSG             33A
OP_CODE_ADDQ        318
OP_CODE_BASE_MOVE   1FC
OP_CODE_EXT         300
OP_CODE_JSR         2C6
OP_CODE_LEA         2D4
OP_CODE_MOVEM       2E6
OP_CODE_NOP         2B8
OP_CODE_ORI         2AA
ORI_MSG             336
PERCENT             385
POUND               381
SUB_MSG             35F
WORD_MSG            38A
