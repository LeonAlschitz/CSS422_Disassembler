00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/14/2021 12:19:00 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Disassmbler Test Program
00000000                             3  * Written by : Munehiro Fukuda
00000000                             4  * Date       : 2/11/2021
00000000                             5  *-----------------------------------------------------------
00000400                             6      ORG     $400
00000400                             7  START:
00000400                             8  
00000400                             9  *-----------------------------------------------------------
00000400                            10  * Op Code: 24pts
00000400                            11  *
00000400                            12  * CPU Instructions..........................................
00000400                            13  * Total: 18pts
00000400                            14  * 1pt each * 18 instructions = 18pts
00000400                            15  * 1pt each * 10 extra instructions = 10 extra pts
00000400                            16  *
00000400                            17  * 0000: ORI, (ANDI, SUBI, ADDI, EORI, CMPI)
00000400                            18  * 0001: MOVEA
00000400                            19  * 0011: MOVE
00000400                            20  * 0010:
00000400                            21  * 0100: (CLR, NOP, EXT, TRAP,) NOT, (STOP, RTE, RTS, JSR, JMP), MOVEM, LEA
00000400                            22  * 0101: ADDQ, (SUBQ)
00000400                            23  * 0110: BRA, BSR, (BEQ)
00000400                            24  * 0111: MOVEQ
00000400                            25  * 1000: DIVU, (DIVS, OR)
00000400                            26  * 1001: SUB
00000400                            27  * 1011: (EOR), CMP
00000400                            28  * 1100: MULU, (MULS, AND)
00000400                            29  * 1101: ADD, ADDA
00000400                            30  * 1110: ASL, ASR, (LSL, LSR, ROL, ROR)
00000400                            31  *
00000400                            32  
00000400                            33  * Remove optional CPU instructions your disassembler haven't handled
00000400                            34  
00000400                            35        *ORI.W     #$ABCD, D0  ; 1
00000400                            36        *ANDI.W    #$ABCD, D1  ; optional
00000400                            37        *SUBI.W   #$ABCD, D2  ; optional
00000400                            38        *ADDI.W   #$ABCD, D3  ; optional
00000400                            39        *EORI.W    #$ABCD, D4  ; optional
00000400                            40        *CMPI.W    #$ABCD, D5  ; optional
00000400                            41        
00000400                            42        *MOVEA.W  D6, A7      ; 2
00000400                            43        *MOVE.W   D0, D1      ; 3
00000400                            44        
00000400                            45        *CLR.W     D2          ; optional
00000400                            46        *NOT.W     D3          ; optional
00000400                            47        *EXT.W     D4          ; optional       
00000400                            48        *TRAP      #15         ; optional
00000400                            49       * NOP                   ; 4
00000400                            50        *STOP      #$2700      ; optional
00000400                            51        *RTE                   ; optional
00000400                            52        *RTS                   ; optional
00000400                            53        *JSR      (A5)        ; optional
00000400                            54        *JMP       (A6)       ; optional
00000400  4890 0080                 55        MOVEM.W   D7, (A0)    ; 5
00000404                            56        *LEA      (A1), A2    ; 6
00000404                            57        
00000404                            58        *ADDQ.W   #$7, D3     ; 7
00000404                            59        *SUBQ.W    #$7, D4     ; optional
00000404                            60        
00000404                            61        *BRA      $1234       ; 16bit (word) displacement  8
00000404                            62        *BSR      $1234       ; 16bit (word) displacement  9
00000404                            63        *BEQ      $1234       ; optional
00000404                            64        
00000404                            65        *MOVEQ        #$AB, D5    ; 10
00000404                            66        
00000404                            67        *DIVU     D6, D7      ; 11
00000404                            68        *DIVS      D0, D1      ; optional
00000404                            69        *OR.W     D2, D3      ; optional
00000404                            70        
00000404                            71        *SUB.W        D2, D3      ; 12
00000404                            72        
00000404                            73        *EOR.W     D4, D5      ; optional
00000404                            74        *CMP.W        D6, D7      ; 13
00000404                            75        
00000404                            76        *MULU     D0, D1      ; 14
00000404                            77        *MULS     D2, D3      ; optional
00000404                            78        *AND.W        D3, D4      ; optional
00000404                            79        
00000404                            80        *ADD.W        D5, D6      ; 15
00000404                            81        *ADDA.W   D6, A7      ; 16
00000404                            82        
00000404  E340                      83        ASL.W     #1, D0      ; 17
00000406  E461                      84        ASR.W     D2, D1      ; 18
00000408                            85        
00000408                            86        *LSL.W        #3, D2      ; optional
00000408                            87        *LSR.W        D4, D3      ; optional
00000408                            88        *ROL.W        #5, D4      ; optional
00000408                            89        *ROR.W        D6, D5      ; optional
00000408                            90  
00000408                            91  * Data size distinction.....................................
00000408                            92  * Total: 6pts
00000408                            93  * .B: 2pts
00000408                            94  * .W: 2pt (Note this size was tested in the above OP code analysis)
00000408                            95  * .L: 2pt
00000408                            96  LOOP:
00000408  0000 00AB                 97        ORI.B     #$AB, D0    ; 1
0000040C  1401                      98        MOVE.B    D1, D2      ; 3
0000040E  5C03                      99        ADDQ.B    #$6, D3     ; 7
00000410  60F6                     100        BRA       LOOP        ; 8bit (byte) displacement  9
00000412  9A04                     101        SUB.B     D4, D5      ; 12
00000414  BE06                     102        CMP.B     D6, D7      ; 13
00000416  D200                     103        ADD.B     D0, D1      ; 15
00000418  E503                     104        ASL.B     #2, D3      ; 17
0000041A  E825                     105        ASR.B     D4, D5      ; 18
0000041C                           106  
0000041C  0080 ABCDEF12            107        ORI.L     #$ABCDEF12, D0   ; 1
00000422  2441                     108        MOVEA.L   D1, A2           ; 2
00000424  2803                     109        MOVE.L    D3, D4           ; 3
00000426  4CD0 0020                110        MOVEM.L   (A0), D5         ; 5
0000042A  5C87                     111        ADDQ.L    #$6, D7          ; 7
0000042C  9280                     112        SUB.L     D0, D1           ; 12 
0000042E  B682                     113        CMP.L     D2, D3           ; 13
00000430  DA84                     114        ADD.L     D4, D5           ; 15
00000432  DFC6                     115        ADDA.L    D6, A7           ; 16
00000434  ED85                     116        ASL.L     #6, D5           ; 17
00000436  E8A3                     117        ASR.L     D4, D3           ; 18
00000438                           118  
00000438                           119  *-----------------------------------------------------------
00000438                           120  * Effective Address: 38pts
00000438                           121  * Data Register Direct (mode 0).......................... 4
00000438                           122  * Address Register Direct (mode 1)....................... 4
00000438                           123  * Address Register Indirect (mode 2)..................... 5
00000438                           124  * Address Register Indirect with Post Increment (mode 3). 5
00000438                           125  * Address Register Indirect with Pre Decrement (mode 4).. 5
00000438                           126  * Absolute Word Address (mode 7 subclass 0).............. 5
00000438                           127  * Absolute Long Address (moe 7 subclass 1)............... 5
00000438                           128  * Immediate Data (mode 7 subclass 4)..................... 5
00000438                           129  
00000438  2208                     130        MOVE.L    A0, D1        ; mode 0 and mode 1                    4pts
0000043A  2642                     131        MOVEA.L   D2, A3        ; mode 0 and mode 1                    4pts
0000043C  2A14                     132        MOVE.L    (A4), D5      ; mode 2                               2.5pts
0000043E  2C86                     133        MOVE.L    D6, (A6)      ; mode 2                               2.5pts
00000440  4CDF 8001                134        MOVEM.L   (A7)+, D0/A7  ; mode 3                               5pts
00000444  48E2 4002                135        MOVEM.L   D1/A6, -(A2)  ; mode 4                               5pts
00000448  2639 0000ABCD            136        MOVE.L    $ABCD, D3     ; mode 7 subclass 0                    2.5pts
0000044E  E1F9 0000ABCD            137        ASL       $ABCD         ; mode 7 subclass 0                    2.5pts
00000454  23C4 ABCDEF12            138        MOVE.L    D4, ($ABCDEF12).L ; mode 7 subclass 1                2.5pts
0000045A  E0F9 ABCDEF12            139        ASR       ($ABCDEF12).L     ; mode 7 subclass 1                2.5pts
00000460  2A3C 12345678            140        MOVE.L    #$12345678, D5    ; mode 7 subclass 4                2.5pts
00000466  23FC 12345678 ABCDEF12   141        MOVE.L    #$12345678, ($ABCDEF12).L ; mode 7 subclass 1 and 4  2.5pts
00000470                           142  
00000470                           143        END   START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
LOOP                408
START               400
