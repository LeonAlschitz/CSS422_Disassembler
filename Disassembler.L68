00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/16/2021 12:05:03 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; A5 will be used for paging
00001000                            13  ; D0 is used to store values that will get compared
00001000                            14      
00001000                            15  START:
00001000                            16  
00001000  4EB9 000010A0             17          JSR         CLEAR_ALL_REG
00001006                            18          
00001006  43F9 00002617             19          LEA         GREETING_MSG, A1
0000100C  103C 000E                 20          MOVE.B      #14, D0    
00001010  4E4F                      21          TRAP        #15
00001012                            22          
00001012  6000 0002                 23          BRA         START_ADDR_CHECK
00001016                            24          
00001016                            25  START_ADDR_CHECK:
00001016                            26           ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001016  43F9 00001DCD             27          LEA         START_MSG, A1
0000101C  103C 000E                 28          MOVE.B      #14, D0    
00001020  4E4F                      29          TRAP        #15
00001022                            30          
00001022  43F9 00002734             31          LEA         STA_ADDR, A1
00001028  103C 0002                 32          MOVE.B      #2, D0
0000102C  4E4F                      33          TRAP        #15             ; D1 has the length of the address
0000102E                            34          
0000102E                            35          
0000102E  4282                      36          CLR.L       D2
00001030  4284                      37          CLR.L       D4
00001032  4287                      38          CLR.L       D7
00001034  4EB9 000010DC             39          JSR         CONVERT_ASCII
0000103A                            40          
0000103A  1807                      41          MOVE.B      D7, D4
0000103C  4EB9 00001698             42          JSR         Bit0        
00001042  B43C 0000                 43          CMP.B       #0, D2
00001046                            44          
00001046  66CE                      45          BNE         START_ADDR_CHECK
00001048  6000 0002                 46          BRA         SAVE_START
0000104C                            47  
0000104C                            48  SAVE_START:
0000104C  2647                      49          MOVEA.L     D7, A3
0000104E  2A4B                      50          MOVEA.L     A3, A5
00001050                            51  
00001050  DBFC 00000020             52          ADD.L       #32, A5
00001056  6000 0002                 53          BRA         END_ADDR_CHECK
0000105A                            54  
0000105A                            55  END_ADDR_CHECK:        
0000105A                            56          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
0000105A                            57          
0000105A  43F9 00001DE7             58          LEA         END_MSG, A1
00001060  103C 000E                 59          MOVE.B      #14, D0    
00001064  4E4F                      60          TRAP        #15
00001066                            61          
00001066  43F9 0000275C             62          LEA         END_ADDR, A1
0000106C  103C 0002                 63          MOVE.B      #2, D0
00001070  4E4F                      64          TRAP        #15
00001072                            65          
00001072  4282                      66          CLR.L       D2
00001074  4284                      67          CLR.L       D4
00001076  4287                      68          CLR.L       D7
00001078  4EB9 000010DC             69          JSR         CONVERT_ASCII
0000107E                            70  
0000107E  4EB9 0000108A             71          JSR         CHECK_ODD
00001084  66D4                      72          BNE         END_ADDR_CHECK
00001086                            73          
00001086  6000 0012                 74          BRA         SAVE_END
0000108A                            75          
0000108A                            76  CHECK_ODD:
0000108A  1807                      77          MOVE.B      D7, D4
0000108C  4EB9 00001698             78          JSR         Bit0        
00001092  B43C 0000                 79          CMP.B       #0, D2
00001096  4E75                      80          RTS
00001098                            81  
00001098                            82  CHECK_DATA:
00001098                            83          
00001098  4E75                      84          RTS
0000109A                            85  
0000109A                            86  SAVE_END:
0000109A  2847                      87          MOVEA.L     D7, A4
0000109C  6000 0282                 88          BRA         FILE_LOOP
000010A0                            89      
000010A0                            90          
000010A0                            91  CLEAR_ALL_REG:
000010A0  4280                      92          CLR.L       D0
000010A2  4281                      93          CLR.L       D1
000010A4  4282                      94          CLR.L       D2
000010A6  4283                      95          CLR.L       D3
000010A8  4284                      96          CLR.L       D4
000010AA  4285                      97          CLR.L       D5
000010AC  4286                      98          CLR.L       D6
000010AE  4287                      99          CLR.L       D7
000010B0                           100  
000010B0  207C 00000000            101          MOVEA.L     #$00000000, A0
000010B6  227C 00000000            102          MOVEA.L     #$00000000, A1
000010BC  247C 00000000            103          MOVEA.L     #$00000000, A2
000010C2  267C 00000000            104          MOVEA.L     #$00000000, A3
000010C8  287C 00000000            105          MOVEA.L     #$00000000, A4
000010CE  2A7C 00000000            106          MOVEA.L     #$00000000, A5
000010D4  2C7C 00000000            107          MOVEA.L     #$00000000, A6
000010DA                           108          
000010DA                           109          
000010DA                           110  
000010DA  4E75                     111          RTS
000010DC                           112  
000010DC                           113  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
000010DC  0C01 0000                114          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010E0  6700 0012                115          BEQ         ASCII_DONE
000010E4                           116      
000010E4  1419                     117          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
000010E6                           118          
000010E6                           119  
000010E6                           120      
000010E6  103C 0039                121          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
000010EA  B400                     122          CMP.B       D0, D2
000010EC                           123          
000010EC                           124  
000010EC  6F00 0008                125          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
000010F0  6000 0018                126          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
000010F4                           127  
000010F4                           128  ASCII_DONE:
000010F4  4E75                     129          RTS
000010F6                           130  
000010F6                           131  
000010F6                           132  NUM_ASCII:
000010F6  5301                     133          SUBI.B      #$1, D1
000010F8                           134          
000010F8  103C 0030                135          MOVE.B      #$30, D0
000010FC  9400                     136          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
000010FE  DE02                     137          ADD.B       D2, D7      ; new ASCII number stored at D7
00001100                           138          
00001100                           139  
00001100  0C01 0000                140          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001104  67EE                     141          BEQ         ASCII_DONE
00001106                           142          
00001106  E987                     143          ASL.L       #4, D7
00001108                           144        
00001108  60D2                     145          BRA         CONVERT_ASCII
0000110A                           146          
0000110A                           147          
0000110A                           148  LET_ASCII:
0000110A  5301                     149          SUBI.B      #$1, D1
0000110C                           150                 
0000110C                           151  
0000110C  103C 0037                152          MOVE.B      #$37, D0
00001110  9400                     153          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001112  DE02                     154          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
00001114                           155                                  ; 46 is used to represent F in Hex. 46 - 37 = F
00001114                           156          
00001114  0C01 0000                157          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001118  67DA                     158          BEQ         ASCII_DONE
0000111A                           159          
0000111A  E987                     160          ASL.L       #4, D7
0000111C                           161          
0000111C                           162          
0000111C  60BE                     163          BRA         CONVERT_ASCII
0000111E                           164  
0000111E                           165  PRINT_ADDRESS:
0000111E                           166          ; SIMHALT 0000 0000
0000111E  4281                     167          CLR.L       D1
00001120  4282                     168          CLR.L       D2
00001122  240B                     169          MOVE.L      A3, D2
00001124                           170          
00001124                           171          
00001124                           172  
00001124                           173          
00001124  4EB9 00001148            174          JSR         FLIP_START
0000112A  2607                     175          MOVE.L      D7, D3
0000112C                           176  
0000112C  4281                     177          CLR.L       D1
0000112E  4282                     178          CLR.L       D2
00001130  4287                     179          CLR.L       D7
00001132                           180          
00001132  123C 0008                181          MOVE.B      #$8, D1
00001136  6000 0040                182          BRA         PRINT_ADDRESS_LOOP
0000113A                           183  
0000113A  43F9 000026DD            184          LEA         SPACE_MSG, A1
00001140  103C 000E                185          MOVE.B      #14, D0    
00001144  4E4F                     186          TRAP        #15
00001146                           187          
00001146  4E75                     188          RTS
00001148                           189          
00001148                           190  FLIP_START:        
00001148  4281                     191          CLR.L       D1
0000114A  4287                     192          CLR.L       D7
0000114C                           193          
0000114C  123C 0008                194          MOVE.B      #$8, D1
00001150                           195          
00001150  4EB9 00001158            196          JSR         FLIP_LOOP
00001156                           197          
00001156                           198          
00001156  4E75                     199          RTS
00001158                           200          
00001158                           201  FLIP_LOOP:
00001158                           202  
00001158                           203          ; SIMHALT
00001158                           204          
00001158  0C01 0000                205          CMPI.B      #$0, D1
0000115C  6700 0018                206          BEQ         FLIP_DONE
00001160  5301                     207          SUBI.B      #$1, D1
00001162  E987                     208          ASL.L       #4, D7
00001164                           209          
00001164  4285                     210          CLR.L       D5
00001166                           211          
00001166  1A02                     212          MOVE.B      D2, D5
00001168                           213          
00001168  103C 001C                214          MOVE.B      #28,D0    
0000116C  E1AD                     215          LSL.L       D0, D5     
0000116E  E99D                     216          ROL.L       #4, D5
00001170                           217          
00001170  DE05                     218          ADD.B       D5, D7
00001172                           219          
00001172                           220          
00001172  E882                     221          ASR.L       #4, D2
00001174                           222          
00001174  60E2                     223          BRA         FLIP_LOOP
00001176                           224  
00001176                           225  FLIP_DONE:
00001176  4E75                     226          RTS
00001178                           227  
00001178                           228  
00001178                           229          
00001178                           230  
00001178                           231  PRINT_ADDRESS_LOOP:
00001178                           232          ; SIMHALT
00001178                           233          
00001178  0C01 0000                234          CMPI.B      #$0, D1
0000117C  6700 0094                235          BEQ         PRINT_ADDRESS_EXIT
00001180                           236          
00001180                           237          
00001180  5301                     238          SUBI.B      #$1, D1
00001182                           239          
00001182  1403                     240          MOVE.B      D3, D2
00001184  103C 001C                241          MOVE.B      #28,D0    
00001188  E1AA                     242          LSL.L       D0,D2     
0000118A  E99A                     243          ROL.L       #4,D2 
0000118C                           244          
0000118C                           245          
0000118C  E883                     246          ASR.L       #4, D3
0000118E                           247          
0000118E                           248          
0000118E  B43C 0000                249          CMP.B       #0,D2
00001192  6700 008C                250          BEQ         PRINT_ADR0
00001196  B43C 0001                251          CMP.B       #1,D2
0000119A  6700 0094                252          BEQ         PRINT_ADR1
0000119E  B43C 0002                253          CMP.B       #2,D2
000011A2  6700 009C                254          BEQ         PRINT_ADR2
000011A6  B43C 0003                255          CMP.B       #3,D2
000011AA  6700 00A4                256          BEQ         PRINT_ADR3
000011AE  B43C 0004                257          CMP.B       #4,D2
000011B2  6700 00AC                258          BEQ         PRINT_ADR4
000011B6  B43C 0005                259          CMP.B       #5,D2
000011BA  6700 00B4                260          BEQ         PRINT_ADR5
000011BE  B43C 0006                261          CMP.B       #6,D2
000011C2  6700 00BC                262          BEQ         PRINT_ADR6
000011C6  B43C 0007                263          CMP.B       #7,D2
000011CA  6700 00C4                264          BEQ         PRINT_ADR7
000011CE  B43C 0008                265          CMP.B       #8,D2
000011D2  6700 00CC                266          BEQ         PRINT_ADR8
000011D6  B43C 0009                267          CMP.B       #9,D2
000011DA  6700 00D4                268          BEQ         PRINT_ADR9
000011DE  B43C 000A                269          CMP.B       #$A,D2
000011E2  6700 00DC                270          BEQ         PRINT_ADRA
000011E6  B43C 000B                271          CMP.B       #$B,D2
000011EA  6700 00E4                272          BEQ         PRINT_ADRB
000011EE  B43C 000C                273          CMP.B       #$C,D2
000011F2  6700 00EC                274          BEQ         PRINT_ADRC
000011F6  B43C 000D                275          CMP.B       #$D,D2
000011FA  6700 00F4                276          BEQ         PRINT_ADRD
000011FE  B43C 000E                277          CMP.B       #$E,D2
00001202  6700 00FC                278          BEQ         PRINT_ADRE
00001206  B43C 000F                279          CMP.B       #$F,D2
0000120A  6700 0104                280          BEQ         PRINT_ADRF
0000120E                           281  
0000120E                           282  
0000120E                           283  
0000120E  6000 FF68                284          BRA         PRINT_ADDRESS_LOOP
00001212                           285          
00001212                           286  
00001212                           287          
00001212                           288  
00001212                           289  PRINT_ADDRESS_EXIT:
00001212  43F9 000026DD            290          LEA         SPACE_MSG, A1
00001218  103C 000E                291          MOVE.B      #14, D0    
0000121C  4E4F                     292          TRAP        #15
0000121E                           293          
0000121E  4E75                     294          RTS
00001220                           295          
00001220                           296  PRINT_ADR0:
00001220  43F9 000026E0            297          LEA         ZERO_MSG, A1
00001226  103C 000E                298          MOVE.B      #14, D0    
0000122A  4E4F                     299          TRAP        #15
0000122C  6000 FF4A                300          BRA         PRINT_ADDRESS_LOOP
00001230                           301  PRINT_ADR1:
00001230  43F9 000026E2            302          LEA         ONE_MSG, A1
00001236  103C 000E                303          MOVE.B      #14, D0    
0000123A  4E4F                     304          TRAP        #15
0000123C  6000 FF3A                305          BRA         PRINT_ADDRESS_LOOP
00001240                           306  PRINT_ADR2:
00001240  43F9 000026E4            307          LEA         TWO_MSG, A1
00001246  103C 000E                308          MOVE.B      #14, D0    
0000124A  4E4F                     309          TRAP        #15
0000124C  6000 FF2A                310          BRA         PRINT_ADDRESS_LOOP
00001250                           311  PRINT_ADR3:
00001250  43F9 000026E6            312          LEA         THREE_MSG, A1
00001256  103C 000E                313          MOVE.B      #14, D0    
0000125A  4E4F                     314          TRAP        #15
0000125C  6000 FF1A                315          BRA         PRINT_ADDRESS_LOOP
00001260                           316  PRINT_ADR4:
00001260  43F9 000026E8            317          LEA         FOUR_MSG, A1
00001266  103C 000E                318          MOVE.B      #14, D0    
0000126A  4E4F                     319          TRAP        #15
0000126C  6000 FF0A                320          BRA         PRINT_ADDRESS_LOOP
00001270                           321  PRINT_ADR5:
00001270  43F9 000026EA            322          LEA         FIVE_MSG, A1
00001276  103C 000E                323          MOVE.B      #14, D0    
0000127A  4E4F                     324          TRAP        #15
0000127C  6000 FEFA                325          BRA         PRINT_ADDRESS_LOOP
00001280                           326  PRINT_ADR6:
00001280  43F9 000026EC            327          LEA         SIX_MSG, A1
00001286  103C 000E                328          MOVE.B      #14, D0    
0000128A  4E4F                     329          TRAP        #15
0000128C  6000 FEEA                330          BRA         PRINT_ADDRESS_LOOP
00001290                           331  PRINT_ADR7:
00001290  43F9 000026EE            332          LEA         SEVEN_MSG, A1
00001296  103C 000E                333          MOVE.B      #14, D0    
0000129A  4E4F                     334          TRAP        #15
0000129C  6000 FEDA                335          BRA         PRINT_ADDRESS_LOOP
000012A0                           336  PRINT_ADR8:
000012A0  43F9 000026F0            337          LEA         EIGHT_MSG, A1
000012A6  103C 000E                338          MOVE.B      #14, D0    
000012AA  4E4F                     339          TRAP        #15
000012AC  6000 FECA                340          BRA         PRINT_ADDRESS_LOOP
000012B0                           341  PRINT_ADR9:
000012B0  43F9 000026F2            342          LEA         NINE_MSG, A1
000012B6  103C 000E                343          MOVE.B      #14, D0    
000012BA  4E4F                     344          TRAP        #15
000012BC  6000 FEBA                345          BRA         PRINT_ADDRESS_LOOP
000012C0                           346  PRINT_ADRA:
000012C0  43F9 000026F4            347          LEA         A_MSG, A1
000012C6  103C 000E                348          MOVE.B      #14, D0    
000012CA  4E4F                     349          TRAP        #15
000012CC  6000 FEAA                350          BRA         PRINT_ADDRESS_LOOP
000012D0                           351  PRINT_ADRB:
000012D0  43F9 000026F6            352          LEA         B_MSG, A1
000012D6  103C 000E                353          MOVE.B      #14, D0    
000012DA  4E4F                     354          TRAP        #15
000012DC  6000 FE9A                355          BRA         PRINT_ADDRESS_LOOP
000012E0                           356  PRINT_ADRC:
000012E0  43F9 000026F8            357          LEA         C_MSG, A1
000012E6  103C 000E                358          MOVE.B      #14, D0    
000012EA  4E4F                     359          TRAP        #15
000012EC  6000 FE8A                360          BRA         PRINT_ADDRESS_LOOP
000012F0                           361  PRINT_ADRD:
000012F0  43F9 000026FA            362          LEA         D_MSG, A1
000012F6  103C 000E                363          MOVE.B      #14, D0    
000012FA  4E4F                     364          TRAP        #15
000012FC  6000 FE7A                365          BRA         PRINT_ADDRESS_LOOP
00001300                           366  PRINT_ADRE:
00001300  43F9 000026FC            367          LEA         E_MSG, A1
00001306  103C 000E                368          MOVE.B      #14, D0    
0000130A  4E4F                     369          TRAP        #15
0000130C  6000 FE6A                370          BRA         PRINT_ADDRESS_LOOP
00001310                           371  PRINT_ADRF:
00001310  43F9 000026FE            372          LEA         F_MSG, A1
00001316  103C 000E                373          MOVE.B      #14, D0    
0000131A  4E4F                     374          TRAP        #15
0000131C  6000 FE5A                375          BRA         PRINT_ADDRESS_LOOP
00001320                           376  
00001320                           377  
00001320                           378  FILE_LOOP:
00001320  4280                     379          CLR.L       D0
00001322  4281                     380          CLR.L       D1
00001324  4282                     381          CLR.L       D2
00001326  4283                     382          CLR.L       D3
00001328  4284                     383          CLR.L       D4
0000132A  4285                     384          CLR.L       D5
0000132C  4286                     385          CLR.L       D6
0000132E  4287                     386          CLR.L       D7
00001330                           387          
00001330                           388  
00001330                           389  
00001330                           390  
00001330                           391          ;       Add branch here that will take the current address in A3
00001330                           392          ;       Turn it into characters and print it to the screen with space
00001330  4EB8 111E                393          JSR         PRINT_ADDRESS
00001334                           394          
00001334                           395          
00001334  381B                     396          MOVE.W      (A3)+, D4
00001336                           397          ; SIMHALT
00001336  4EB9 000013AE            398          JSR         JUMP_OP_CODE
0000133C                           399          
0000133C  43F9 0000270E            400          LEA         NEW_LINE, A1
00001342  103C 000E                401          MOVE.B      #14, D0
00001346  4E4F                     402          TRAP        #15
00001348                           403  
00001348                           404  
00001348  B9CB                     405          CMP.L      A3, A4
0000134A                           406          ;       If our pointer is at the end or beyond, BRA to DONE
0000134A  6700 0032                407          BEQ         DONE_CHECK
0000134E  6F00 002E                408          BLE         DONE_CHECK
00001352                           409          
00001352                           410  
00001352  BBCB                     411          CMP.L       A3, A5
00001354  6700 0008                412          BEQ         PRINT_DELAY
00001358  6F00 0004                413          BLE         PRINT_DELAY
0000135C                           414  
0000135C                           415  
0000135C                           416         
0000135C  60C2                     417          BRA         FILE_LOOP
0000135E                           418  
0000135E                           419  
0000135E                           420  
0000135E                           421  PRINT_DELAY:
0000135E                           422          ; SIMHALT
0000135E  43F9 00002711            423          LEA         NEXT_PAGE_MSG, A1
00001364  103C 000E                424          MOVE.B      #14, D0    
00001368  4E4F                     425          TRAP        #15
0000136A                           426          
0000136A                           427  
0000136A  103C 0005                428          MOVE.B      #5, D0
0000136E  4E4F                     429          TRAP        #15
00001370                           430  
00001370  0C01 000D                431          CMPI.B      #13, D1
00001374  66E8                     432          BNE         PRINT_DELAY
00001376                           433  
00001376  DBFC 00000020            434          ADD.L       #32, A5
0000137C  60A2                     435          BRA         FILE_LOOP
0000137E                           436  
0000137E                           437  
0000137E                           438  DONE_CHECK:
0000137E  43F9 00002642            439          LEA         REPEAT_MSG, A1
00001384  103C 000E                440          MOVE.B      #14, D0    
00001388  4E4F                     441          TRAP        #15
0000138A                           442          
0000138A                           443  
0000138A  103C 0005                444          MOVE.B      #5, D0
0000138E  4E4F                     445          TRAP        #15
00001390                           446  
00001390  0C01 000D                447          CMPI.B      #13, D1
00001394  6600 0006                448          BNE         DONE
00001398                           449          
00001398  6000 FC66                450          BRA         START
0000139C                           451  
0000139C                           452  DONE:   
0000139C  43F9 00002684            453          LEA         GOODBYE_MSG, A1
000013A2  103C 000E                454          MOVE.B      #14, D0    
000013A6  4E4F                     455          TRAP        #15
000013A8  103C 0009                456          MOVE.B      #9, D0
000013AC  4E4F                     457          TRAP        #15
000013AE                           458          
000013AE                           459          
000013AE                           460          
000013AE                           461  * Put variables and constants here
000013AE                           462                  INCLUDE     'Disassembler_OP_Codes.x68'
000013AE                           463  
000013AE                           464  
000013AE                           465  
000013AE                           466  ; D4 Contains Original hex code
000013AE                           467  ; D3 Contains modified hex code
000013AE                           468  
000013AE                           469  ; D1 is used to bit shift
000013AE                           470  
000013AE                           471  
000013AE                           472  ; D4 = XXXX YYYY YYYY YYYY
000013AE                           473  JUMP_OP_CODE:
000013AE                           474          ; SIMHALT
000013AE  4283                     475          CLR.L       D3
000013B0  2604                     476          MOVE.L      D4, D3
000013B2  4281                     477          CLR.L       D1
000013B4  4282                     478          CLR.L       D2
000013B6  123C 000C                479          MOVE.B      #12, D1
000013BA  E26B                     480          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000013BC                           481  
000013BC                           482  
000013BC  B63C 0000                483          CMP.B       #$0, D3
000013C0  6700 006E                484          BEQ         JUMP_0 
000013C4  B63C 0001                485          CMP.B       #$1, D3
000013C8  6700 00A4                486          BEQ         JUMP_1 
000013CC  B63C 0002                487          CMP.B       #$2, D3
000013D0  6700 00AA                488          BEQ         JUMP_2
000013D4  B63C 0003                489          CMP.B       #$3, D3
000013D8  6700 00BA                490          BEQ         JUMP_3
000013DC  B63C 0004                491          CMP.B       #$4, D3
000013E0  6700 00CA                492          BEQ         JUMP_4
000013E4  B63C 0005                493          CMP.B       #$5, D3
000013E8  6700 0106                494          BEQ         JUMP_5
000013EC  B63C 0006                495          CMP.B       #$6, D3
000013F0  6700 0110                496          BEQ         JUMP_6
000013F4  B63C 0007                497          CMP.B       #$7, D3
000013F8  6700 012E                498          BEQ         JUMP_7
000013FC  B63C 0008                499          CMP.B       #$8, D3
00001400  6700 012E                500          BEQ         JUMP_8
00001404  B63C 0009                501          CMP.B       #$9, D3
00001408  6700 0546                502          BEQ         OP_CODE_SUB
0000140C  B63C 000B                503          CMP.B       #11, D3
00001410  6700 0148                504          BEQ         JUMP_B ; 
00001414                           505          
00001414  B63C 000C                506          CMP.B       #12, D3
00001418  6700 0166                507          BEQ         JUMP_C ;
0000141C                           508          
0000141C  B63C 000D                509          CMP.B       #13, D3
00001420  6700 017C                510          BEQ         JUMP_D ;
00001424                           511          
00001424  B63C 000E                512          CMP.B       #14, D3
00001428  6700 0190                513          BEQ         JUMP_E ;
0000142C                           514  
0000142C  6000 01A2                515          BRA         JUMP_ERROR
00001430                           516  
00001430                           517  
00001430                           518  
00001430                           519  
00001430                           520         
00001430                           521          
00001430                           522  JUMP_0:
00001430                           523          *ORI
00001430  4282                     524          CLR.L       D2
00001432  4EB9 00001680            525          JSR         Bits11to8
00001438  B43C 0000                526          CMP.B       #$0, D2  
0000143C  6700 0338                527          BEQ         OP_CODE_ORI
00001440  B43C 0002                528          CMP.B       #$2, D2  
00001444  6700 034A                529          BEQ         OP_CODE_ANDI
00001448  B43C 0004                530          CMP.B       #$4, D2  
0000144C  6700 035C                531          BEQ         OP_CODE_SUBI
00001450  B43C 0006                532          CMP.B       #$6, D2  
00001454  6700 036E                533          BEQ         OP_CODE_ADDI
00001458  B43C 000A                534          CMP.B       #$A, D2  
0000145C  6700 0380                535          BEQ         OP_CODE_EORI
00001460  B43C 000C                536          CMP.B       #$C, D2  
00001464  6700 0392                537          BEQ         OP_CODE_CMPI
00001468                           538          
00001468  6000 0174                539          BRA         INVALID_INSTR
0000146C  4E75                     540          RTS
0000146E                           541          
0000146E                           542  JUMP_1:
0000146E                           543  
0000146E  4EB9 000016C8            544          JSR         OP_CODE_BASE_MOVE
00001474  4EB9 00001E00            545          JSR         EA_MOVE 
0000147A  4E75                     546          RTS
0000147C                           547  
0000147C                           548  
0000147C                           549  JUMP_2:
0000147C                           550  
0000147C  4EB9 0000165C            551          JSR         Bits8to6
00001482  B43C 0001                552          CMP.B       #$1, D2 
00001486  6700 025E                553          BEQ         J_MOVEA_L 
0000148A  6600 027E                554          BNE         J_MOVE_L
0000148E                           555  
0000148E                           556  
0000148E  6000 014E                557          BRA         INVALID_INSTR
00001492  4E75                     558          RTS
00001494                           559          
00001494                           560  JUMP_3:
00001494                           561  
00001494  4EB9 0000165C            562          JSR         Bits8to6
0000149A  0C02 0001                563          CMPI.B       #$1, D2 
0000149E  6700 028E                564          BEQ         J_MOVEA_W
000014A2  6600 02AE                565          BNE         J_MOVE_W
000014A6                           566      
000014A6  6000 0136                567          BRA INVALID_INSTR
000014AA                           568          
000014AA  4E75                     569          RTS
000014AC                           570  
000014AC                           571  JUMP_4:
000014AC                           572  
000014AC  4282                     573          CLR.L       D2
000014AE  3404                     574          MOVE.W      D4, D2
000014B0  B47C 4E71                575          CMP.W       #$4E71, D2 ;NOP 
000014B4  6700 035C                576          BEQ         OP_CODE_NOP
000014B8                           577          
000014B8  4EB9 0000165C            578          JSR         Bits8to6     ;
000014BE  B43C 0007                579          CMP.B       #7, D2
000014C2  6700 0384                580          BEQ         OP_CODE_LEA ;LEA
000014C6                           581  
000014C6  4EB9 0000168C            582          JSR         Bits11to9     ;
000014CC  B43C 0007                583          CMP.B       #7, D2
000014D0  6700 034E                584          BEQ         OP_CODE_JSR ;JSR
000014D4  B43C 0009                585          CMP.B       #9, D2
000014D8  6700 035A                586          BEQ         OP_CODE_JMP ;JMP
000014DC                           587          
000014DC  4EB9 00001668            588          JSR         Bits9to7
000014E2  B43C 0001                589          CMP.B       #1, D2
000014E6  6700 037A                590          BEQ         OP_CODE_MOVEM
000014EA                           591  
000014EA                           592  
000014EA                           593          
000014EA                           594          
000014EA  6000 00F2                595          BRA INVALID_INSTR
000014EE                           596          
000014EE  4E75                     597          RTS   
000014F0                           598  
000014F0                           599  
000014F0                           600  
000014F0                           601  
000014F0                           602  JUMP_5:
000014F0  4282                     603          CLR.L       D2
000014F2  2404                     604          MOVE.L      D4, D2
000014F4  0802 0008                605          BTST        #8,D2 
000014F8  6700 03D8                606          BEQ         OP_CODE_ADDQ  
000014FC  6000 03EE                607          BRA         OP_CODE_SUBQ
00001500  4E75                     608          RTS  
00001502                           609  JUMP_6:
00001502  4282                     610          CLR.L       D2
00001504  4EB9 00001680            611          JSR     Bits11to8     ;
0000150A  B43C 0000                612          CMP.B   #0, D2        ;
0000150E  6700 0514                613          BEQ     OP_CODE_BRA   ; 
00001512  B43C 0001                614          CMP.B   #1, D2        ;
00001516  6700 0520                615          BEQ     OP_CODE_BSR   ;
0000151A  B43C 0007                616          CMP.B   #7, D2        ;
0000151E  6700 052C                617          BEQ     OP_CODE_BEQ   ;
00001522                           618  
00001522  6000 00BA                619          BRA INVALID_INSTR
00001526                           620  
00001526  4E75                     621          RTS  
00001528                           622  JUMP_7:
00001528                           623          ; CLR.L       D2
00001528                           624          ; LEA         MOVEQ_MSG, A1
00001528                           625          ; MOVE.B      #14, D0
00001528                           626          ; TRAP        #15
00001528                           627          
00001528  4EB9 00001A60            628          JSR         OP_CODE_MOVEQ
0000152E                           629          
0000152E                           630          ; BRA         INVALID_INSTR 
0000152E  4E75                     631          RTS
00001530                           632  
00001530                           633  JUMP_8:
00001530  4282                     634          CLR.L       D2
00001532  4EB9 0000165C            635          JSR         Bits8to6  ;
00001538  B43C 0003                636          CMP.B       #3, D2    ;
0000153C  6700 03E2                637          BEQ         OP_CODE_DIVU ;
00001540  B43C 0007                638          CMP.B       #7, D2    ;
00001544  6700 03F2                639          BEQ         OP_CODE_DIVS ;
00001548  6000 0094                640          BRA         INVALID_INSTR
0000154C  4E75                     641          RTS
0000154E                           642  
0000154E                           643  JUMP_9:
0000154E  6000 008E                644          BRA         INVALID_INSTR
00001552  4E75                     645          RTS         
00001554                           646  
00001554                           647  JUMP_A:
00001554  6000 0088                648          BRA         INVALID_INSTR
00001558  4E75                     649          RTS 
0000155A                           650  JUMP_B:
0000155A  4282                     651          CLR.L       D2
0000155C  4EB9 0000165C            652          JSR         Bits8to6  ;
00001562                           653      ;CHECKING OPMODE FIELD
00001562  B43C 0000                654          CMP.B       #0, D2   ;
00001566  6700 039E                655          BEQ         OP_CODE_CMP ;
0000156A  B43C 0001                656          CMP.B       #1, D2    ;
0000156E  6700 0396                657          BEQ         OP_CODE_CMP ;
00001572  B43C 0002                658          CMP.B       #2, D2    ;
00001576  6700 038E                659          BEQ         OP_CODE_CMP ;
0000157A  6000 0062                660          BRA         INVALID_INSTR
0000157E  4E75                     661          RTS         
00001580                           662  
00001580                           663  JUMP_C:
00001580  4282                     664          CLR.L       D2
00001582  4EB9 0000165C            665          JSR         Bits8to6  ;
00001588  B47C 0003                666          CMP         #3, D2    ;
0000158C  6700 04FA                667          BEQ         OP_CODE_MULU ;
00001590  B47C 0007                668          CMP         #7, D2   ;
00001594  6700 04DE                669          BEQ         OP_CODE_MULS ;
00001598                           670  
00001598  6000 0044                671          BRA         INVALID_INSTR
0000159C  4E75                     672          RTS 
0000159E                           673  
0000159E                           674  JUMP_D:
0000159E  4282                     675          CLR.L       D2
000015A0  4EB9 00001638            676          JSR         Bits7to6  ;
000015A6  B43C 0003                677          CMP.B       #3, D2    ;
000015AA  6700 0508                678          BEQ         OP_CODE_ADDA
000015AE  4EF9 00001A9C            679          JMP         OP_CODE_ADD
000015B4  6000 0028                680          BRA         INVALID_INSTR
000015B8  4E75                     681          RTS 
000015BA                           682   
000015BA                           683   
000015BA                           684  JUMP_E:
000015BA  4282                     685          CLR.L       D2
000015BC                           686          
000015BC  4EB9 00001638            687          JSR         Bits7to6
000015C2                           688  
000015C2  B43C 0003                689          CMP.B       #3, D2
000015C6  6700 05F0                690          BEQ         OP_CODE_ASD_MEM
000015CA                           691          
000015CA  6000 0500                692          BRA         OP_CODE_ASD_REG
000015CE                           693          
000015CE  4E75                     694          RTS  
000015D0                           695           
000015D0                           696  JUMP_ERROR:       
000015D0  43F9 00001D77            697          LEA         ERROR_OP_MSG, A1
000015D6  103C 000E                698          MOVE.B      #14, D0
000015DA  4E4F                     699          TRAP        #15
000015DC                           700  
000015DC  4E75                     701          RTS
000015DE                           702  
000015DE                           703  INVALID_INSTR:
000015DE  43F9 00001D8B            704          LEA         IMPLEMENT_MSG, A1
000015E4  103C 000E                705          MOVE.B      #14, D0
000015E8  4E4F                     706          TRAP        #15
000015EA  4E75                     707          RTS
000015EC                           708  
000015EC                           709  
000015EC                           710  
000015EC                           711  Bits2to0:
000015EC  3404                     712          MOVE.W      D4, D2
000015EE  103C 000D                713          MOVE.B      #13, D0     ; Shifting 13 bits
000015F2  E16A                     714          LSL.W       D0, D2      ; shorten to two bits
000015F4  E06A                     715          LSR.W       D0, D2      ; isolate two bits
000015F6  4E75                     716          RTS
000015F8                           717      
000015F8                           718  Bits3to0:
000015F8  3404                     719          MOVE.W      D4, D2
000015FA  103C 000C                720          MOVE.B      #12, D0     ; Shift 12 bits
000015FE  E16A                     721          LSL.W       D0, D2      ; Shorten to 4th bit
00001600  E06A                     722          LSR.W       D0, D2      ; Isolate 4 bits
00001602  4E75                     723          RTS
00001604                           724      
00001604                           725  Bits5to3:
00001604  3404                     726          MOVE.W      D4, D2
00001606  103C 000A                727          MOVE.B      #10, D0     ; Shift 10 bits
0000160A  E16A                     728          LSL.W       D0, D2      ; cut to 5th bit
0000160C  103C 000D                729          MOVE.B      #13, D0     ; Shift 13 bits
00001610  E06A                     730          LSR.W       D0, D2      ; Isolate bits 5-3
00001612  4E75                     731          RTS
00001614                           732  Bits4to3:
00001614  3404                     733          MOVE.W      D4, D2
00001616  103C 000C                734          MOVE.B      #12, D0     ; Shift 12 bits
0000161A  E16A                     735          LSL.W       D0, D2      ; cut to 5th bit
0000161C  103C 000E                736          MOVE.B      #14, D0     ; Shift 14 bits
00001620  E06A                     737          LSR.W       D0, D2      ; Isolate bits 4-3
00001622  4E75                     738          RTS
00001624                           739          
00001624                           740  Bits7to0:
00001624  3404                     741          MOVE.W      D4, D2
00001626  E14A                     742          LSL.W       #8, D2      ; cut to 8th bit
00001628  E04A                     743          LSR.W       #8, D2      ; Isolate 7-0
0000162A  4E75                     744          RTS
0000162C                           745  Bits7to4: 
0000162C  3404                     746          MOVE.W      D4, D2
0000162E  E14A                     747          LSL.W       #8, D2      ; cut to 8th bit
00001630  103C 000C                748          MOVE.B      #12, D0     ; shift 12 bits
00001634  E06A                     749          LSR.W       D0, D2      ; isolate 7-4
00001636  4E75                     750          RTS
00001638                           751      
00001638                           752  Bits7to6:
00001638  3404                     753          MOVE.W      D4, D2
0000163A  E14A                     754          LSL.W       #8, D2      ; cut to 8th bit
0000163C  103C 000E                755          MOVE.B      #14, D0     ; shift 14 bits
00001640  E06A                     756          LSR.W       D0, D2      ; isolate 7-6
00001642  4E75                     757          RTS
00001644                           758      
00001644                           759  Bits8to3:
00001644  3404                     760          MOVE.W      D4, D2
00001646  EF4A                     761          LSL.W       #7, D2      ; cut to 9th bit
00001648  103C 000A                762          MOVE.B      #10, D0     ; shift 10 bits
0000164C  E06A                     763          LSR.W       D0, D2      ; isolate 8-3
0000164E  4E75                     764          RTS
00001650                           765      
00001650                           766  Bits8to4:
00001650  3404                     767          MOVE.W      D4, D2
00001652  EF4A                     768          LSL.W       #7, D2      ; cut to 9th bit
00001654  103C 000B                769          MOVE.B      #11, D0     ; shift 11 bits
00001658  E06A                     770          LSR.W       D0, D2      ; isolate 8-4
0000165A  4E75                     771          RTS
0000165C                           772      
0000165C                           773  Bits8to6:
0000165C  3404                     774          MOVE.W      D4, D2
0000165E  EF4A                     775          LSL.W       #7, D2      ; cut to 9th bit
00001660  103C 000D                776          MOVE.B      #13, D0     ; shift 13 bits
00001664  E06A                     777          LSR.W       D0, D2      ; isolate 8-6
00001666  4E75                     778          RTS
00001668                           779  Bits9to7:
00001668  3404                     780          MOVE.W      D4, D2
0000166A  ED4A                     781          LSL.W       #6, D2      ; cut to 10th bit
0000166C  103C 000D                782          MOVE.B      #13, D0     ; shift 13 bits
00001670  E06A                     783          LSR.W       D0, D2      ; isolate 8-6
00001672  4E75                     784          RTS
00001674                           785  Bits11to6:
00001674  3404                     786          MOVE.W      D4, D2
00001676  E94A                     787          LSL.W       #4, D2      ; cut to 12th bit
00001678  103C 000A                788          MOVE.B      #10, D0     ; shift 10 bits
0000167C  E06A                     789          LSR.W       D0, D2      ; isolate 11-6
0000167E  4E75                     790          RTS
00001680                           791  
00001680                           792       
00001680                           793  Bits11to8:
00001680  3404                     794          MOVE.W      D4, D2
00001682  E94A                     795          LSL.W       #4, D2      ; cut to 12th bit
00001684  103C 000C                796          MOVE.B      #12, D0     ; shift 12 bits
00001688  E06A                     797          LSR.W       D0, D2      ; isolate 11-8
0000168A  4E75                     798          RTS
0000168C                           799  
0000168C                           800  Bits11to9:
0000168C  3404                     801          MOVE.W      D4, D2
0000168E  E94A                     802          LSL.W       #4, D2      ; cut to 12th bit
00001690  103C 000D                803          MOVE.B      #13, D0     ; shift 13 bits
00001694  E06A                     804          LSR.W       D0, D2      ; isolate 11-9
00001696  4E75                     805          RTS
00001698                           806  
00001698                           807  Bit0:
00001698  3404                     808          MOVE.W      D4, D2
0000169A  103C 000F                809          MOVE.B      #15, D0
0000169E  E16A                     810          LSL.W       D0, D2     
000016A0  103C 000F                811          MOVE.B      #15, D0     
000016A4  E06A                     812          LSR.W       D0, D2     
000016A6  4E75                     813          RTS
000016A8                           814  
000016A8                           815  Bit5:
000016A8  3404                     816          MOVE.W      D4, D2
000016AA  103C 000A                817          MOVE.B      #10, D0
000016AE  E16A                     818          LSL.W       D0, D2     
000016B0  103C 000F                819          MOVE.B      #15, D0     
000016B4  E06A                     820          LSR.W       D0, D2     
000016B6  4E75                     821          RTS
000016B8                           822          
000016B8                           823  Bit6:
000016B8  3404                     824          MOVE.W      D4, D2
000016BA  103C 000B                825          MOVE.B      #11, D0
000016BE  E16A                     826          LSL.W       D0, D2     
000016C0  103C 000F                827          MOVE.B      #15, D0     
000016C4  E06A                     828          LSR.W       D0, D2     
000016C6  4E75                     829          RTS        
000016C8                           830  
000016C8                           831  
000016C8                           832  
000016C8                           833  OP_CODE_BASE_MOVE:
000016C8                           834          ; This should only execute for Move.B
000016C8  43F9 00001CD6            835          LEA         MOVE_MSG, A1
000016CE  103C 000E                836          MOVE.B      #14, D0
000016D2  4E4F                     837          TRAP        #15
000016D4  43F9 00001D6E            838          LEA         BYTE_MSG, A1
000016DA  103C 000E                839          MOVE.B      #14, D0
000016DE  4E4F                     840          TRAP        #15
000016E0                           841          
000016E0  163C 0000                842          MOVE.B      #0, D3
000016E4                           843          
000016E4                           844          
000016E4                           845          
000016E4  4E75                     846          RTS         
000016E6                           847  
000016E6                           848  J_MOVEA_L:
000016E6  43F9 00001CDB            849          LEA         MOVEA_MSG, A1
000016EC  103C 000E                850          MOVE.B      #14, D0
000016F0  4E4F                     851          TRAP        #15
000016F2  43F9 00001D74            852          LEA         LONG_MSG, A1
000016F8  103C 000E                853          MOVE.B      #14, D0
000016FC  4E4F                     854          TRAP        #15
000016FE                           855          
000016FE  163C 0002                856          MOVE.B      #2, D3
00001702  4EB9 00001E00            857          JSR         EA_MOVE
00001708  4E75                     858          RTS    
0000170A                           859  J_MOVE_L:
0000170A  43F9 00001CD6            860          LEA         MOVE_MSG, A1
00001710  103C 000E                861          MOVE.B      #14, D0
00001714  4E4F                     862          TRAP        #15
00001716  43F9 00001D74            863          LEA         LONG_MSG, A1
0000171C  103C 000E                864          MOVE.B      #14, D0
00001720  4E4F                     865          TRAP        #15
00001722                           866          
00001722  163C 0002                867          MOVE.B      #2, D3
00001726  4EB9 00001E00            868          JSR         EA_MOVE
0000172C                           869          
0000172C  4E75                     870          RTS
0000172E                           871  
0000172E                           872  
0000172E                           873  
0000172E                           874  J_MOVEA_W:
0000172E  43F9 00001CDB            875          LEA         MOVEA_MSG, A1
00001734  103C 000E                876          MOVE.B      #14, D0
00001738  4E4F                     877          TRAP        #15
0000173A  43F9 00001D71            878          LEA         WORD_MSG, A1
00001740  103C 000E                879          MOVE.B      #14, D0
00001744  4E4F                     880          TRAP        #15
00001746                           881          
00001746  163C 0001                882          MOVE.B      #1, D3
0000174A  4EB9 00001E00            883          JSR         EA_MOVE
00001750                           884          
00001750  4E75                     885          RTS  
00001752                           886      
00001752                           887  J_MOVE_W:
00001752  43F9 00001CD6            888          LEA         MOVE_MSG, A1
00001758  103C 000E                889          MOVE.B      #14, D0
0000175C  4E4F                     890          TRAP        #15
0000175E  43F9 00001D71            891          LEA         WORD_MSG, A1
00001764  103C 000E                892          MOVE.B      #14, D0
00001768  4E4F                     893          TRAP        #15
0000176A                           894          
0000176A  163C 0001                895          MOVE.B      #1, D3
0000176E  4EB9 00001E00            896          JSR         EA_MOVE
00001774                           897          
00001774  4E75                     898          RTS  
00001776                           899  
00001776                           900  OP_CODE_ORI:
00001776  43F9 00001CE1            901          LEA         ORI_MSG, A1
0000177C  103C 000E                902          MOVE.B      #14, D0
00001780  4E4F                     903          TRAP        #15
00001782                           904          
00001782  4EB9 000019BE            905          JSR         OPMODE_ASHIFT    
00001788  4EB9 00001E66            906          JSR         ABS_DATASRC_EA
0000178E  4E75                     907          RTS
00001790                           908          
00001790                           909  OP_CODE_ANDI:
00001790  43F9 00001CE5            910          LEA         ANDI_MSG, A1
00001796  103C 000E                911          MOVE.B      #14, D0
0000179A  4E4F                     912          TRAP        #15
0000179C                           913          
0000179C  4EB9 000019BE            914          JSR         OPMODE_ASHIFT    
000017A2  4EB9 00001E66            915          JSR         ABS_DATASRC_EA
000017A8  4E75                     916          RTS
000017AA                           917          
000017AA                           918  OP_CODE_SUBI:
000017AA  43F9 00001CEA            919          LEA         SUBI_MSG, A1
000017B0  103C 000E                920          MOVE.B      #14, D0
000017B4  4E4F                     921          TRAP        #15
000017B6                           922          
000017B6  4EB9 000019BE            923          JSR         OPMODE_ASHIFT    
000017BC  4EB9 00001E66            924          JSR         ABS_DATASRC_EA
000017C2  4E75                     925          RTS
000017C4                           926          
000017C4                           927  OP_CODE_ADDI:
000017C4  43F9 00001CEF            928          LEA         ADDI_MSG, A1
000017CA  103C 000E                929          MOVE.B      #14, D0
000017CE  4E4F                     930          TRAP        #15
000017D0                           931          
000017D0  4EB9 000019BE            932          JSR         OPMODE_ASHIFT    
000017D6  4EB9 00001E66            933          JSR         ABS_DATASRC_EA
000017DC  4E75                     934          RTS
000017DE                           935          
000017DE                           936  OP_CODE_EORI:
000017DE  43F9 00001CF4            937          LEA         EORI_MSG, A1
000017E4  103C 000E                938          MOVE.B      #14, D0
000017E8  4E4F                     939          TRAP        #15
000017EA                           940          
000017EA  4EB9 000019BE            941          JSR         OPMODE_ASHIFT    
000017F0  4EB9 00001E66            942          JSR         ABS_DATASRC_EA
000017F6  4E75                     943          RTS
000017F8                           944          
000017F8                           945  OP_CODE_CMPI:
000017F8  43F9 00001CF9            946          LEA         CMPI_MSG, A1
000017FE  103C 000E                947          MOVE.B      #14, D0
00001802  4E4F                     948          TRAP        #15
00001804                           949          
00001804  4EB9 000019BE            950          JSR         OPMODE_ASHIFT    
0000180A  4EB9 00001E66            951          JSR         ABS_DATASRC_EA
00001810  4E75                     952          RTS
00001812                           953  OP_CODE_NOP:
00001812  43F9 00001CFE            954          LEA         NOP_MSG, A1
00001818  103C 000E                955          MOVE.B      #14, D0
0000181C  4E4F                     956          TRAP        #15
0000181E                           957  
0000181E  4E75                     958          RTS
00001820                           959             
00001820                           960  
00001820                           961  OP_CODE_JSR:
00001820  43F9 00001D0C            962          LEA         JSR_MSG, A1
00001826  103C 000E                963          MOVE.B      #14, D0
0000182A  4E4F                     964          TRAP        #15
0000182C                           965          
0000182C  4EB9 00001E3A            966          JSR         EA_GENERIC
00001832                           967  
00001832  4E75                     968          RTS
00001834                           969          
00001834                           970  OP_CODE_JMP:
00001834  43F9 00001D10            971          LEA         JMP_MSG, A1
0000183A  103C 000E                972          MOVE.B      #14, D0
0000183E  4E4F                     973          TRAP        #15
00001840                           974          
00001840  4EB9 00001E3A            975          JSR         EA_GENERIC
00001846                           976  
00001846  4E75                     977          RTS        
00001848                           978          
00001848                           979  OP_CODE_LEA:
00001848  43F9 00001D08            980          LEA         LEA_MSG, A1
0000184E  103C 000E                981          MOVE.B      #14, D0
00001852  4E4F                     982          TRAP        #15
00001854                           983          
00001854  4283                     984          CLR.L       D3
00001856  163C 0002                985          MOVE.B      #2, D3
0000185A                           986  
0000185A                           987          *EA
0000185A  4EB9 00001EC0            988          JSR         EA_ASRC
00001860                           989  
00001860  4E75                     990          RTS
00001862                           991  
00001862                           992  OP_CODE_MOVEM:
00001862                           993          ;JSR         Bits9to7 ;check for MOVEM and EXT
00001862                           994          ;CMP.B       #1, D2   ;
00001862                           995          ;BEQ         MOVEM_OR_EXT
00001862                           996          ;JMP         INVALID_INSTR 
00001862  0802 0006                997          BTST        #6, D2
00001866  6700 0014                998          BEQ         MOVEM_W
0000186A  6000 0034                999          BRA         MOVEM_L
0000186E                          1000          
0000186E                          1001          
0000186E  4E75                    1002          RTS
00001870                          1003          
00001870                          1004          
00001870                          1005  MOVEM_OR_EXT:
00001870  4EB8 1604               1006          JSR         Bits5to3  ;
00001874  B43C 0000               1007          CMP.B       #0, D2    ;
00001878  6700 004A               1008          BEQ         OP_CODE_EXT ;
0000187C                          1009          
0000187C                          1010          ;MOVE.W      D4, D2
0000187C                          1011          ;BTST        #10, D2
0000187C                          1012          ;BEQ         MOVEM_SIZE
0000187C                          1013          
0000187C                          1014          
0000187C                          1015  MOVEM_W:
0000187C  43F9 00001D02           1016          LEA         MOVEM_MSG, A1
00001882  103C 000E               1017          MOVE.B      #14, D0
00001886  4E4F                    1018          TRAP        #15
00001888  43F9 00001D71           1019          LEA         WORD_MSG, A1
0000188E  103C 000E               1020          MOVE.B      #14, D0
00001892  4E4F                    1021          TRAP        #15
00001894                          1022          
00001894  163C 0001               1023          MOVE.B      #1, D3
00001898                          1024    
00001898  4EB9 00001F92           1025          JSR         EA_MOVEM
0000189E  4E75                    1026          RTS
000018A0                          1027          
000018A0                          1028  MOVEM_L:
000018A0  43F9 00001D02           1029          LEA         MOVEM_MSG, A1
000018A6  103C 000E               1030          MOVE.B      #14, D0
000018AA  4E4F                    1031          TRAP        #15
000018AC  43F9 00001D74           1032          LEA         LONG_MSG, A1
000018B2  103C 000E               1033          MOVE.B      #14, D0
000018B6  4E4F                    1034          TRAP        #15 
000018B8  163C 0002               1035          MOVE.B      #2, D3
000018BC                          1036    
000018BC  4EB9 00001E00           1037          JSR         EA_MOVE
000018C2                          1038          
000018C2                          1039          
000018C2  4E75                    1040          RTS   
000018C4                          1041           
000018C4                          1042  OP_CODE_EXT:
000018C4  43F9 00001D64           1043          LEA         EXT_MSG, A1
000018CA  103C 000E               1044          MOVE.B      #14, D0
000018CE  4E4F                    1045          TRAP        #15
000018D0  4E75                    1046          RTS
000018D2                          1047  
000018D2                          1048  
000018D2                          1049  ;MOVEM_CHECK:
000018D2                          1050  ;        CLR.L       D2
000018D2                          1051  ;        MOVE.L      D4, D2
000018D2                          1052  ;        BTST        #11,D2 ;
000018D2                          1053  ;        BNE         OP_CODE_MOVEM
000018D2                          1054  ;        JMP         INVALID_INSTR               
000018D2                          1055  
000018D2                          1056  
000018D2                          1057  OP_CODE_ADDQ:
000018D2  43F9 00001CCC           1058          LEA         ADDQ_MSG, A1
000018D8  103C 000E               1059          MOVE.B      #14, D0
000018DC  4E4F                    1060          TRAP        #15
000018DE                          1061          
000018DE  4EB9 000019BE           1062          JSR         OPMODE_ASHIFT
000018E4                          1063          
000018E4  4EB9 0000220A           1064          JSR         EA_ADDQ
000018EA                          1065          
000018EA  4E75                    1066          RTS
000018EC                          1067  OP_CODE_SUBQ:
000018EC  43F9 00001CD1           1068          LEA         SUBQ_MSG, A1
000018F2  103C 000E               1069          MOVE.B      #14, D0
000018F6  4E4F                    1070          TRAP        #15
000018F8                          1071          
000018F8  4EB9 000019BE           1072          JSR         OPMODE_ASHIFT
000018FE                          1073          
000018FE  4EB9 0000220A           1074          JSR         EA_ADDQ
00001904                          1075          
00001904  4E75                    1076          RTS        
00001906                          1077   
00001906                          1078  OP_CODE_CMP:
00001906                          1079  
00001906  43F9 00001D35           1080          LEA         CMP_MSG, A1
0000190C  103C 000E               1081          MOVE.B      #14, D0
00001910  4E4F                    1082          TRAP        #15
00001912                          1083          
00001912  4EB9 0000196A           1084          JSR         OPMODE
00001918  4EB9 00001E7E           1085          JSR         REVERSESRC_EA
0000191E                          1086          
0000191E  4E75                    1087          RTS
00001920                          1088          
00001920                          1089  OP_CODE_DIVU:
00001920  43F9 00001D27           1090          LEA         DIVU_MSG, A1
00001926  103C 000E               1091          MOVE.B      #14, D0
0000192A  4E4F                    1092          TRAP        #15
0000192C                          1093          
0000192C  163C 0001               1094          MOVE.B      #1, D3        
00001930  4EB9 00001EE2           1095          JSR         EA_DSRC
00001936                          1096          
00001936  4E75                    1097          RTS
00001938                          1098          
00001938                          1099  OP_CODE_DIVS:
00001938  43F9 00001D2C           1100          LEA         DIVS_MSG, A1
0000193E  103C 000E               1101          MOVE.B      #14, D0
00001942  4E4F                    1102          TRAP        #15
00001944                          1103          
00001944  163C 0001               1104          MOVE.B      #1, D3        
00001948  4EB9 00001EE2           1105          JSR         EA_DSRC
0000194E                          1106          
0000194E  4E75                    1107          RTS
00001950                          1108  
00001950                          1109  OP_CODE_SUB:
00001950  43F9 00001D31           1110          LEA         SUB_MSG, A1
00001956  103C 000E               1111          MOVE.B      #14, D0
0000195A  4E4F                    1112          TRAP        #15
0000195C                          1113          
0000195C  4EB9 0000196A           1114          JSR         OPMODE
00001962                          1115          
00001962  4EB9 00001E7E           1116          JSR         REVERSESRC_EA
00001968                          1117          
00001968  4E75                    1118          RTS
0000196A                          1119          
0000196A                          1120  OPMODE:
0000196A  4EB8 165C               1121          JSR         Bits8to6
0000196E  B43C 0000               1122          CMP.B       #0, D2
00001972  6700 006C               1123          BEQ         PRINT_BYTE
00001976  B43C 0004               1124          CMP.B       #4, D2
0000197A  6700 0064               1125          BEQ         PRINT_BYTE
0000197E                          1126          
0000197E  B43C 0001               1127          CMP.B       #1, D2
00001982  6700 006E               1128          BEQ         PRINT_WORD
00001986  B43C 0005               1129          CMP.B       #5, D2
0000198A  6700 0066               1130          BEQ         PRINT_WORD
0000198E                          1131          
0000198E  B43C 0002               1132          CMP.B       #2, D2
00001992  6700 0070               1133          BEQ         PRINT_LONG
00001996  B43C 0006               1134          CMP.B       #6, D2
0000199A  6700 0068               1135          BEQ         PRINT_LONG
0000199E                          1136          
0000199E  4EB9 00001A16           1137          JSR         WRONG_SIZE
000019A4                          1138          
000019A4                          1139  OPMODE_ADDA:
000019A4  4EB8 165C               1140          JSR         Bits8to6
000019A8  B43C 0003               1141          CMP.B       #3, D2
000019AC  6700 0044               1142          BEQ         PRINT_WORD 
000019B0  B43C 0007               1143          CMP.B       #7, D2
000019B4  6700 004E               1144          BEQ         PRINT_LONG
000019B8  4EB9 00001A16           1145          JSR         WRONG_SIZE        
000019BE                          1146  
000019BE                          1147  OPMODE_ASHIFT:
000019BE  4EB8 1638               1148          JSR         Bits7to6
000019C2  B43C 0000               1149          CMP.B       #0, D2
000019C6  6700 0018               1150          BEQ         PRINT_BYTE
000019CA  B43C 0001               1151          CMP.B       #1, D2
000019CE  6700 0022               1152          BEQ         PRINT_WORD
000019D2  B43C 0002               1153          CMP.B       #2, D2
000019D6  6700 002C               1154          BEQ         PRINT_LONG
000019DA                          1155  
000019DA  4EB9 00001A16           1156          JSR         WRONG_SIZE
000019E0                          1157          
000019E0                          1158  PRINT_BYTE:
000019E0  43F9 00001D6E           1159          LEA         BYTE_MSG, A1
000019E6  103C 000E               1160          MOVE.B      #14, D0
000019EA  4E4F                    1161          TRAP        #15
000019EC                          1162          
000019EC  163C 0000               1163          MOVE.B      #0, D3
000019F0  4E75                    1164          RTS
000019F2                          1165  
000019F2                          1166  PRINT_WORD:
000019F2  43F9 00001D71           1167          LEA         WORD_MSG, A1
000019F8  103C 000E               1168          MOVE.B      #14, D0
000019FC  4E4F                    1169          TRAP        #15
000019FE  163C 0001               1170          MOVE.B      #1, D3
00001A02  4E75                    1171          RTS
00001A04                          1172  
00001A04                          1173  PRINT_LONG:
00001A04  43F9 00001D74           1174          LEA         LONG_MSG, A1
00001A0A  103C 000E               1175          MOVE.B      #14, D0
00001A0E  4E4F                    1176          TRAP        #15
00001A10  163C 0002               1177          MOVE.B      #2, D3
00001A14  4E75                    1178          RTS
00001A16                          1179  
00001A16                          1180  WRONG_SIZE:
00001A16  43F9 00001DB7           1181          LEA         ERROR_SIZE_MSG, A1
00001A1C  103C 000E               1182          MOVE.B      #14, D0
00001A20  4E4F                    1183          TRAP        #15
00001A22  4E75                    1184          RTS
00001A24                          1185          
00001A24                          1186  OP_CODE_BRA:
00001A24  43F9 00001D14           1187          LEA         BRA_MSG, A1
00001A2A  103C 000E               1188          MOVE.B      #14, D0
00001A2E  4E4F                    1189          TRAP        #15
00001A30                          1190          
00001A30  4EB9 00002116           1191          JSR         EA_BRA
00001A36                          1192          
00001A36  4E75                    1193          RTS
00001A38                          1194  
00001A38                          1195  OP_CODE_BSR:
00001A38  43F9 00001D18           1196          LEA         BSR_MSG, A1
00001A3E  103C 000E               1197          MOVE.B      #14, D0
00001A42  4E4F                    1198          TRAP        #15
00001A44                          1199          
00001A44  4EB9 00002116           1200          JSR         EA_BRA
00001A4A                          1201          
00001A4A  4E75                    1202          RTS
00001A4C                          1203  OP_CODE_BEQ:
00001A4C  43F9 00001D1C           1204          LEA         BEQ_MSG, A1
00001A52  103C 000E               1205          MOVE.B      #14, D0
00001A56  4E4F                    1206          TRAP        #15
00001A58                          1207          
00001A58  4EB9 00002116           1208          JSR         EA_BRA
00001A5E                          1209          
00001A5E  4E75                    1210          RTS
00001A60                          1211          
00001A60                          1212          
00001A60                          1213          
00001A60                          1214  OP_CODE_MOVEQ:
00001A60  43F9 00001D20           1215          LEA         MOVEQ_MSG, A1
00001A66  103C 000E               1216          MOVE.B      #14, D0
00001A6A  4E4F                    1217          TRAP        #15
00001A6C                          1218          
00001A6C  4EB9 000021C8           1219          JSR         EA_MOVEQ
00001A72                          1220          
00001A72  4E75                    1221          RTS
00001A74                          1222  
00001A74                          1223  OP_CODE_MULS:
00001A74  43F9 00001D3E           1224          LEA         MULS_MSG, A1
00001A7A  103C 000E               1225          MOVE.B      #14, D0
00001A7E  4E4F                    1226          TRAP        #15
00001A80                          1227          
00001A80  4EB9 00001E7E           1228          JSR         REVERSESRC_EA
00001A86                          1229          
00001A86  4E75                    1230          RTS
00001A88                          1231          
00001A88                          1232  OP_CODE_MULU:
00001A88  43F9 00001D39           1233          LEA         MULU_MSG, A1
00001A8E  103C 000E               1234          MOVE.B      #14, D0
00001A92  4E4F                    1235          TRAP        #15
00001A94                          1236          
00001A94  4EB9 00001E7E           1237          JSR         REVERSESRC_EA
00001A9A  4E75                    1238          RTS
00001A9C                          1239  
00001A9C                          1240  OP_CODE_ADD:
00001A9C  43F9 00001D43           1241          LEA         ADD_MSG, A1
00001AA2  103C 000E               1242          MOVE.B      #14, D0
00001AA6  4E4F                    1243          TRAP        #15
00001AA8                          1244          
00001AA8  4EB8 196A               1245          JSR         OPMODE
00001AAC  4EB9 00001E9C           1246          JSR         EA_ADD
00001AB2                          1247          
00001AB2  4E75                    1248          RTS
00001AB4                          1249          
00001AB4                          1250  OP_CODE_ADDA:
00001AB4  43F9 00001D47           1251          LEA         ADDA_MSG, A1
00001ABA  103C 000E               1252          MOVE.B      #14, D0
00001ABE  4E4F                    1253          TRAP        #15
00001AC0                          1254          
00001AC0  4EB8 19A4               1255          JSR         OPMODE_ADDA
00001AC4  4EB9 00001EC0           1256          JSR         EA_ASRC
00001ACA                          1257          
00001ACA  4E75                    1258          RTS
00001ACC                          1259          
00001ACC                          1260        
00001ACC                          1261  
00001ACC                          1262  OP_CODE_ASD_REG:
00001ACC  4282                    1263          CLR.L       D2
00001ACE  3404                    1264          MOVE.W      D4, D2
00001AD0  0802 0008               1265          BTST        #8, D2
00001AD4  6700 002E               1266          BEQ         RIGHT_REG
00001AD8  6000 0006               1267          BRA         LEFT_REG
00001ADC  4E75                    1268          RTS
00001ADE                          1269  
00001ADE  4E75                    1270          RTS
00001AE0                          1271  LEFT_REG:
00001AE0  4282                    1272          CLR.L       D2
00001AE2  4EB8 1614               1273          JSR         Bits4to3
00001AE6  FFFF FFFF               1274          SIMHALT
00001AEA  B43C 0000               1275          CMP.B       #0, D2
00001AEE  6700 0038               1276          BEQ         ASL_REG
00001AF2  B43C 0002               1277          CMP.B       #2, D2
00001AF6  6700 0048               1278          BEQ         LSL_REG
00001AFA  B43C 0003               1279          CMP.B       #3, D2
00001AFE  6700 0058               1280          BEQ         ROL_REG
00001B02                          1281          
00001B02  4E75                    1282          RTS
00001B04                          1283          
00001B04                          1284  RIGHT_REG:
00001B04  4282                    1285          CLR.L       D2
00001B06  4EB8 1614               1286          JSR         Bits4to3
00001B0A  FFFF FFFF               1287          SIMHALT
00001B0E  B43C 0000               1288          CMP.B       #0, D2
00001B12  6700 005C               1289          BEQ         ASR_REG
00001B16  B43C 0002               1290          CMP.B       #2, D2
00001B1A  6700 006C               1291          BEQ         LSR_REG
00001B1E  B43C 0003               1292          CMP.B       #3, D2
00001B22  6700 007C               1293          BEQ         ROR_REG
00001B26  4E75                    1294          RTS   
00001B28                          1295  ASL_REG:
00001B28  43F9 00001D4C           1296          LEA         ASL_MSG, A1
00001B2E  103C 000E               1297          MOVE.B      #14, D0
00001B32  4E4F                    1298          TRAP        #15 
00001B34  4EB8 19BE               1299          JSR         OPMODE_ASHIFT
00001B38  4EB9 00001F04           1300          JSR         EA_AS
00001B3E                          1301          
00001B3E  4E75                    1302          RTS
00001B40                          1303  LSL_REG:
00001B40  43F9 00001D54           1304          LEA         LSL_MSG, A1
00001B46  103C 000E               1305          MOVE.B      #14, D0
00001B4A  4E4F                    1306          TRAP        #15 
00001B4C  4EB8 19BE               1307          JSR         OPMODE_ASHIFT
00001B50  4EB9 00001F04           1308          JSR         EA_AS
00001B56                          1309          
00001B56  4E75                    1310          RTS
00001B58                          1311  ROL_REG:
00001B58  43F9 00001D5C           1312          LEA         ROL_MSG, A1
00001B5E  103C 000E               1313          MOVE.B      #14, D0
00001B62  4E4F                    1314          TRAP        #15 
00001B64  4EB8 19BE               1315          JSR         OPMODE_ASHIFT
00001B68  4EB9 00001F04           1316          JSR         EA_AS
00001B6E                          1317          
00001B6E  4E75                    1318          RTS
00001B70                          1319  ASR_REG:
00001B70  43F9 00001D50           1320          LEA         ASR_MSG, A1
00001B76  103C 000E               1321          MOVE.B      #14, D0
00001B7A  4E4F                    1322          TRAP        #15 
00001B7C  4EB8 19BE               1323          JSR         OPMODE_ASHIFT
00001B80  4EB9 00001F04           1324          JSR         EA_AS
00001B86                          1325          
00001B86  4E75                    1326          RTS
00001B88                          1327  LSR_REG:
00001B88  43F9 00001D58           1328          LEA         LSR_MSG, A1
00001B8E  103C 000E               1329          MOVE.B      #14, D0
00001B92  4E4F                    1330          TRAP        #15 
00001B94  4EB8 19BE               1331          JSR         OPMODE_ASHIFT
00001B98  4EB9 00001F04           1332          JSR         EA_AS
00001B9E                          1333          
00001B9E  4E75                    1334          RTS
00001BA0                          1335  ROR_REG:
00001BA0  43F9 00001D60           1336          LEA         ROR_MSG, A1
00001BA6  103C 000E               1337          MOVE.B      #14, D0
00001BAA  4E4F                    1338          TRAP        #15
00001BAC  4EB8 19BE               1339          JSR         OPMODE_ASHIFT
00001BB0  4EB9 00001F04           1340          JSR         EA_AS
00001BB6                          1341          
00001BB6  4E75                    1342          RTS
00001BB8                          1343  
00001BB8                          1344  OP_CODE_ASD_MEM:
00001BB8  4282                    1345          CLR.L       D2
00001BBA  3404                    1346          MOVE.W      D4, D2
00001BBC  0802 0008               1347          BTST        #8, D2
00001BC0  6700 002A               1348          BEQ         RIGHT_MEM
00001BC4  6000 0006               1349          BRA         LEFT_MEM
00001BC8  4E75                    1350          RTS
00001BCA                          1351  
00001BCA  4E75                    1352          RTS
00001BCC                          1353  LEFT_MEM:
00001BCC  4282                    1354          CLR.L       D2
00001BCE  4EB8 1614               1355          JSR         Bits4to3
00001BD2  B43C 0000               1356          CMP.B       #0, D2
00001BD6  6700 0034               1357          BEQ         ASL_MEM
00001BDA  B43C 0001               1358          CMP.B       #1, D2
00001BDE  6700 004C               1359          BEQ         LSL_MEM
00001BE2  B43C 0003               1360          CMP.B       #3, D2
00001BE6  6700 0064               1361          BEQ         ROL_MEM
00001BEA                          1362          
00001BEA  4E75                    1363          RTS
00001BEC                          1364          
00001BEC                          1365  RIGHT_MEM:
00001BEC  4282                    1366          CLR.L       D2
00001BEE  4EB8 1614               1367          JSR         Bits4to3
00001BF2  B43C 0000               1368          CMP.B       #0, D2
00001BF6  6700 0074               1369          BEQ         ASR_MEM
00001BFA  B43C 0001               1370          CMP.B       #1, D2
00001BFE  6700 008C               1371          BEQ         LSR_MEM
00001C02  B43C 0003               1372          CMP.B       #3, D2
00001C06  6700 00A4               1373          BEQ         ROR_MEM
00001C0A  4E75                    1374          RTS        
00001C0C                          1375  
00001C0C                          1376  ASL_MEM:
00001C0C  43F9 00001D4C           1377          LEA         ASL_MSG, A1
00001C12  103C 000E               1378          MOVE.B      #14, D0
00001C16  4E4F                    1379          TRAP        #15
00001C18  43F9 000026DD           1380          LEA         SPACE_MSG, A1
00001C1E  103C 000E               1381          MOVE.B      #14, D0
00001C22  4E4F                    1382          TRAP        #15        
00001C24  4EB9 00001E3A           1383          JSR         EA_GENERIC        
00001C2A  4E75                    1384          RTS
00001C2C                          1385  LSL_MEM:
00001C2C  43F9 00001D54           1386          LEA         LSL_MSG, A1
00001C32  103C 000E               1387          MOVE.B      #14, D0
00001C36  4E4F                    1388          TRAP        #15 
00001C38  43F9 000026DD           1389          LEA         SPACE_MSG, A1
00001C3E  103C 000E               1390          MOVE.B      #14, D0
00001C42  4E4F                    1391          TRAP        #15 
00001C44  4EB9 00001E3A           1392          JSR         EA_GENERIC
00001C4A  4E75                    1393          RTS        
00001C4C                          1394  ROL_MEM:
00001C4C  43F9 00001D5C           1395          LEA         ROL_MSG, A1
00001C52  103C 000E               1396          MOVE.B      #14, D0
00001C56  4E4F                    1397          TRAP        #15        
00001C58  43F9 000026DD           1398          LEA         SPACE_MSG, A1
00001C5E  103C 000E               1399          MOVE.B      #14, D0
00001C62  4E4F                    1400          TRAP        #15      
00001C64  4EB9 00001E3A           1401          JSR         EA_GENERIC        
00001C6A  4E75                    1402          RTS
00001C6C                          1403  ASR_MEM:
00001C6C  43F9 00001D50           1404          LEA         ASR_MSG, A1
00001C72  103C 000E               1405          MOVE.B      #14, D0
00001C76  4E4F                    1406          TRAP        #15
00001C78  43F9 000026DD           1407          LEA         SPACE_MSG, A1
00001C7E  103C 000E               1408          MOVE.B      #14, D0
00001C82  4E4F                    1409          TRAP        #15        
00001C84  4EB9 00001E3A           1410          JSR         EA_GENERIC        
00001C8A  4E75                    1411          RTS
00001C8C                          1412  LSR_MEM:
00001C8C  43F9 00001D58           1413          LEA         LSR_MSG, A1
00001C92  103C 000E               1414          MOVE.B      #14, D0
00001C96  4E4F                    1415          TRAP        #15 
00001C98  43F9 000026DD           1416          LEA         SPACE_MSG, A1
00001C9E  103C 000E               1417          MOVE.B      #14, D0
00001CA2  4E4F                    1418          TRAP        #15 
00001CA4  4EB9 00001E3A           1419          JSR         EA_GENERIC
00001CAA  4E75                    1420          RTS        
00001CAC                          1421  ROR_MEM:
00001CAC  43F9 00001D60           1422          LEA         ROR_MSG, A1
00001CB2  103C 000E               1423          MOVE.B      #14, D0
00001CB6  4E4F                    1424          TRAP        #15        
00001CB8  43F9 000026DD           1425          LEA         SPACE_MSG, A1
00001CBE  103C 000E               1426          MOVE.B      #14, D0
00001CC2  4E4F                    1427          TRAP        #15      
00001CC4  4EB9 00001E3A           1428          JSR         EA_GENERIC        
00001CCA  4E75                    1429          RTS
00001CCC                          1430  
00001CCC                          1431  
00001CCC                          1432  
00001CCC= 41 44 44 51 00          1433  ADDQ_MSG:       DC.B        'ADDQ',0
00001CD1= 53 55 42 51 00          1434  SUBQ_MSG:       DC.B        'SUBQ',0
00001CD6= 4D 4F 56 45 00          1435  MOVE_MSG:       DC.B        'MOVE',0
00001CDB= 4D 4F 56 45 41 00       1436  MOVEA_MSG:      DC.B        'MOVEA',0
00001CE1= 4F 52 49 00             1437  ORI_MSG:        DC.B        'ORI',0
00001CE5= 41 4E 44 49 00          1438  ANDI_MSG:       DC.B        'ANDI',0
00001CEA= 53 55 42 49 00          1439  SUBI_MSG:       DC.B        'SUBI',0
00001CEF= 41 44 44 49 00          1440  ADDI_MSG:       DC.B        'ADDI',0
00001CF4= 45 4F 52 49 00          1441  EORI_MSG:       DC.B        'EORI',0
00001CF9= 43 4D 50 49 00          1442  CMPI_MSG:       DC.B        'CMPI',0
00001CFE= 4E 4F 50 00             1443  NOP_MSG:        DC.B        'NOP',0
00001D02= 4D 4F 56 45 4D 00       1444  MOVEM_MSG:      DC.B        'MOVEM',0
00001D08= 4C 45 41 00             1445  LEA_MSG:        DC.B        'LEA',0
00001D0C= 4A 53 52 00             1446  JSR_MSG:        DC.B        'JSR',0
00001D10= 4A 4D 50 00             1447  JMP_MSG:        DC.B        'JMP',0
00001D14= 42 52 41 00             1448  BRA_MSG:        DC.B        'BRA',0
00001D18= 42 53 52 00             1449  BSR_MSG:        DC.B        'BSR',0
00001D1C= 42 45 51 00             1450  BEQ_MSG:        DC.B        'BEQ',0
00001D20= 4D 4F 56 45 51 20 00    1451  MOVEQ_MSG:      DC.B        'MOVEQ ',0
00001D27= 44 49 56 55 00          1452  DIVU_MSG:       DC.B        'DIVU',0
00001D2C= 44 49 56 53 00          1453  DIVS_MSG:       DC.B        'DIVS',0
00001D31= 53 55 42 00             1454  SUB_MSG:        DC.B        'SUB',0
00001D35= 43 4D 50 00             1455  CMP_MSG:        DC.B        'CMP',0
00001D39= 4D 55 4C 55 00          1456  MULU_MSG:       DC.B        'MULU',0
00001D3E= 4D 55 4C 53 00          1457  MULS_MSG:       DC.B        'MULS',0
00001D43= 41 44 44 00             1458  ADD_MSG:        DC.B        'ADD',0
00001D47= 41 44 44 41 00          1459  ADDA_MSG:       DC.B        'ADDA',0
00001D4C= 41 53 4C 00             1460  ASL_MSG:        DC.B        'ASL',0
00001D50= 41 53 52 00             1461  ASR_MSG:        DC.B        'ASR',0
00001D54= 4C 53 4C 00             1462  LSL_MSG:        DC.B        'LSL',0
00001D58= 4C 53 52 00             1463  LSR_MSG:        DC.B        'LSR',0
00001D5C= 52 4F 4C 00             1464  ROL_MSG:        DC.B        'ROL',0
00001D60= 52 4F 52 00             1465  ROR_MSG:        DC.B        'ROR',0
00001D64                          1466  
00001D64                          1467  
00001D64= 45 58 54 00             1468  EXT_MSG:        DC.B        'EXT',0
00001D68= 23 00                   1469  POUND:          DC.B        '#',0
00001D6A= 24 00                   1470  DOLLAR:         DC.B        '$',0
00001D6C= 25 00                   1471  PERCENT:        DC.B        '%',0
00001D6E                          1472  
00001D6E                          1473  ; Size messages
00001D6E                          1474  
00001D6E= 2E 42 00                1475  BYTE_MSG:       DC.B        '.B',0
00001D71= 2E 57 00                1476  WORD_MSG:       DC.B        '.W',0
00001D74= 2E 4C 00                1477  LONG_MSG:       DC.B        '.L',0
00001D77= 4E 6F 74 20 41 20 ...   1478  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
00001D8B= 4F 50 20 63 6F 64 ...   1479  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001DA7= 49 4E 56 41 4C 49 ...   1480  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001DB7= 49 4E 56 41 4C 49 ...   1481  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
00001DCD                          1482  
00001DCD                          1483  
00001DCD                          1484  
00001DCD                          1485  
00001DCD                          1486  
00001DCD                          1487  
00001DCD                          1488  
00001DCD                          1489  
00001DCD                          1490  
00001DCD                          1491  
00001DCD                          1492  
00001DCD                          1493  
00001DCD                          1494  
00001DCD                          1495  
00001DCD                          1496  
00001DCD                          1497  
00001DCD                          1498  
00001DCD                          1499  
00001DCD                          1500  
00001DCD                          1501  
00001DCD                          1502  
00001DCD                          1503  
00001DCD                          1504  
00001DCD                          1505  
00001DCD                          1506  
00001DCD                          1507  
00001DCD                          1508  -------------------- end include --------------------
00001DCD= 45 6E 74 65 72 20 ...   1509                  START_MSG:      DC.B        'Enter a starting address:',0
00001DE7= 45 6E 74 65 72 20 ...   1510                  END_MSG:        DC.B        'Enter an ending address:',0
00001E00                          1511                  INCLUDE     'Disassembler_EA_Codes.x68'
00001E00                          1512  
00001E00                          1513  
00001E00                          1514  ; D3 = OP size. ie. Byte, Word, Long
00001E00                          1515  ; D4 = Original hex code
00001E00                          1516  ; D5 = Current Mode being isolated
00001E00                          1517  ; D6 = Current Register being isolated
00001E00                          1518  
00001E00                          1519  ; A3 will store starting address
00001E00                          1520  ; A4 will store ending address
00001E00                          1521  
00001E00                          1522  
00001E00                          1523  
00001E00                          1524  ; based on the size of the move operation Print out an amount of data as is.
00001E00                          1525  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001E00                          1526  EA_MOVE:
00001E00  4285                    1527          CLR.L       D5
00001E02  4286                    1528          CLR.L       D6
00001E04  4EB8 1604               1529          JSR         Bits5to3
00001E08  1A02                    1530          MOVE.B      D2, D5
00001E0A  4EB8 15EC               1531          JSR         Bits2to0
00001E0E  1C02                    1532          MOVE.B      D2, D6
00001E10  4EB9 00002256           1533          JSR         MODE_TABLE
00001E16                          1534          
00001E16  43F9 000025E0           1535          LEA         SEPERATOR, A1
00001E1C  103C 000E               1536          MOVE.B      #14, D0
00001E20  4E4F                    1537          TRAP        #15
00001E22                          1538          
00001E22  4285                    1539          CLR.L       D5
00001E24  4286                    1540          CLR.L       D6
00001E26                          1541  
00001E26  4EB8 165C               1542          JSR         Bits8to6
00001E2A  1A02                    1543          MOVE.B      D2, D5
00001E2C  4EB8 168C               1544          JSR         Bits11to9
00001E30  1C02                    1545          MOVE.B      D2, D6
00001E32  4EB9 00002256           1546          JSR         MODE_TABLE
00001E38                          1547          
00001E38  4E75                    1548          RTS
00001E3A                          1549          
00001E3A                          1550  EA_GENERIC:
00001E3A                          1551      
00001E3A  4EB8 1604               1552          JSR         Bits5to3
00001E3E  1A02                    1553          MOVE.B      D2, D5
00001E40  4EB8 15EC               1554          JSR         Bits2to0
00001E44  1C02                    1555          MOVE.B      D2, D6
00001E46  4EB9 00002256           1556          JSR         MODE_TABLE
00001E4C                          1557  
00001E4C  4E75                    1558          RTS
00001E4E                          1559          
00001E4E                          1560          ; #data, ea
00001E4E                          1561  DATASRC_EA:
00001E4E                          1562          
00001E4E  4EB9 00002322           1563          JSR         J_ABS_TABLE
00001E54                          1564          
00001E54                          1565          ; Print Out ", "
00001E54  43F9 000025E0           1566          LEA         SEPERATOR, A1
00001E5A  103C 000E               1567          MOVE.B      #14, D0
00001E5E  4E4F                    1568          TRAP        #15
00001E60                          1569          
00001E60  4EB8 1E3A               1570          JSR         EA_GENERIC
00001E64                          1571          
00001E64  4E75                    1572          RTS
00001E66                          1573          
00001E66                          1574  ABS_DATASRC_EA:
00001E66                          1575  
00001E66  4EB9 000023B2           1576          JSR         DATA_TABLE
00001E6C                          1577          
00001E6C                          1578          ; Print Out ", "
00001E6C  43F9 000025E0           1579          LEA         SEPERATOR, A1
00001E72  103C 000E               1580          MOVE.B      #14, D0
00001E76  4E4F                    1581          TRAP        #15
00001E78                          1582          
00001E78  4EB8 1E3A               1583          JSR         EA_GENERIC
00001E7C                          1584  
00001E7C                          1585  
00001E7C                          1586  
00001E7C  4E75                    1587          RTS        
00001E7E                          1588  
00001E7E                          1589  
00001E7E                          1590          
00001E7E                          1591  REVERSESRC_EA:
00001E7E                          1592      
00001E7E  4EB8 1E3A               1593          JSR         EA_GENERIC
00001E82  43F9 000025E0           1594          LEA         SEPERATOR, A1
00001E88  103C 000E               1595          MOVE.B      #14, D0
00001E8C  4E4F                    1596          TRAP        #15
00001E8E                          1597          
00001E8E  4EB8 168C               1598          JSR         Bits11to9
00001E92  1C02                    1599          MOVE.B      D2, D6
00001E94  4EB9 00002256           1600          JSR         MODE_TABLE
00001E9A  4E75                    1601          RTS        
00001E9C                          1602  EA_ADD:
00001E9C  4EB8 1E3A               1603          JSR         EA_GENERIC
00001EA0  43F9 000025E0           1604          LEA         SEPERATOR, A1
00001EA6  103C 000E               1605          MOVE.B      #14, D0
00001EAA  4E4F                    1606          TRAP        #15
00001EAC                          1607  
00001EAC  4EB8 168C               1608          JSR         Bits11to9
00001EB0  1C02                    1609          MOVE.B      D2, D6
00001EB2  4EB8 165C               1610          JSR         Bits8to6
00001EB6  1A02                    1611          MOVE.B      D2, D5
00001EB8                          1612          
00001EB8  4EB9 00002256           1613          JSR         MODE_TABLE
00001EBE  4E75                    1614          RTS  
00001EC0                          1615          
00001EC0                          1616          
00001EC0                          1617          
00001EC0                          1618          ; ea, A source
00001EC0                          1619  EA_ASRC:
00001EC0  4EB8 1E3A               1620          JSR         EA_GENERIC
00001EC4                          1621          
00001EC4                          1622          ; Print Out ", "
00001EC4  43F9 000025E0           1623          LEA         SEPERATOR, A1
00001ECA  103C 000E               1624          MOVE.B      #14, D0
00001ECE  4E4F                    1625          TRAP        #15
00001ED0                          1626  
00001ED0  1A3C 0001               1627          MOVE.B      #1, D5
00001ED4  4EB8 168C               1628          JSR         Bits11to9
00001ED8  1C02                    1629          MOVE.B      D2, D6
00001EDA                          1630          
00001EDA  4EB9 00002256           1631          JSR         MODE_TABLE
00001EE0                          1632  
00001EE0  4E75                    1633          RTS
00001EE2                          1634          ; ea, D source
00001EE2                          1635  EA_DSRC:
00001EE2  4EB8 1E3A               1636          JSR         EA_GENERIC
00001EE6                          1637          
00001EE6                          1638          ; Print Out ", "
00001EE6  43F9 000025E0           1639          LEA         SEPERATOR, A1
00001EEC  103C 000E               1640          MOVE.B      #14, D0
00001EF0  4E4F                    1641          TRAP        #15
00001EF2                          1642  
00001EF2  1A3C 0000               1643          MOVE.B      #0, D5
00001EF6  4EB8 168C               1644          JSR         Bits11to9
00001EFA  1C02                    1645          MOVE.B      D2, D6
00001EFC                          1646          
00001EFC  4EB9 00002256           1647          JSR         MODE_TABLE
00001F02                          1648  
00001F02  4E75                    1649          RTS
00001F04                          1650  ;EA_AS_MEM:
00001F04                          1651  
00001F04                          1652  ;        JSR         Bits5to3
00001F04                          1653  ;        MOVE.B      D2, D5
00001F04                          1654  ;        JSR         ASD_MEM_MODE_CHECK
00001F04                          1655  ;        MOVE.B      D2, D6
00001F04                          1656  ;        JSR         MODE_TABLE
00001F04                          1657  
00001F04                          1658  ;        RTS
00001F04                          1659  
00001F04                          1660  
00001F04                          1661          
00001F04                          1662  EA_AS:
00001F04                          1663  
00001F04  4EB8 16A8               1664          JSR         Bit5
00001F08  B43C 0000               1665          CMP.B       #0, D2
00001F0C  6700 0008               1666          BEQ         AS_COUNT
00001F10                          1667          
00001F10  6000 0042               1668          BRA         AS_REGISTER
00001F14                          1669          
00001F14  4E75                    1670          RTS    
00001F16                          1671          
00001F16                          1672  AS_COUNT:
00001F16  43F9 000025E2           1673          LEA         POUND_MSG, A1
00001F1C  103C 000E               1674          MOVE.B      #14, D0    
00001F20  4E4F                    1675          TRAP        #15
00001F22  4EB8 168C               1676          JSR         Bits11to9
00001F26  B43C 0000               1677          CMP.B       #0, D2
00001F2A  6700 030C               1678          BEQ         AS_FIX
00001F2E  1C02                    1679          MOVE.B      D2, D6
00001F30  4EB9 00002318           1680          JSR         DISPLAY_REG
00001F36                          1681          
00001F36  43F9 000025E0           1682          LEA         SEPERATOR, A1
00001F3C  103C 000E               1683          MOVE.B      #14, D0
00001F40  4E4F                    1684          TRAP        #15
00001F42                          1685          
00001F42  1A3C 0000               1686          MOVE.B      #0, D5
00001F46  4EB8 15EC               1687          JSR         Bits2to0
00001F4A  1C02                    1688          MOVE.B      D2, D6
00001F4C                          1689          
00001F4C  4EB9 00002256           1690          JSR         MODE_TABLE
00001F52                          1691  
00001F52                          1692  
00001F52  4E75                    1693          RTS
00001F54                          1694          
00001F54                          1695  AS_REGISTER:
00001F54                          1696  
00001F54  43F9 000025CA           1697          LEA         MODE_0_MSG, A1
00001F5A  103C 000E               1698          MOVE.B      #14, D0    
00001F5E  4E4F                    1699          TRAP        #15
00001F60  4EB8 168C               1700          JSR         Bits11to9
00001F64  B43C 0000               1701          CMP.B       #0, D2
00001F68  6700 02CE               1702          BEQ         AS_FIX
00001F6C  1C02                    1703          MOVE.B      D2, D6
00001F6E  4EB9 00002318           1704          JSR         DISPLAY_REG
00001F74                          1705  
00001F74  43F9 000025E0           1706          LEA         SEPERATOR, A1
00001F7A  103C 000E               1707          MOVE.B      #14, D0
00001F7E  4E4F                    1708          TRAP        #15
00001F80                          1709          
00001F80  1A3C 0000               1710          MOVE.B      #0, D5
00001F84  4EB8 15EC               1711          JSR         Bits2to0
00001F88  1C02                    1712          MOVE.B      D2, D6
00001F8A                          1713          
00001F8A  4EB9 00002256           1714          JSR         MODE_TABLE
00001F90                          1715  
00001F90  4E75                    1716          RTS 
00001F92                          1717      
00001F92                          1718  EA_MOVEM:
00001F92  2404                    1719          MOVE.L      D4, D2
00001F94  0802 000A               1720          BTST        #10,D2 
00001F98  6700 0008               1721          BEQ         MOVEM_REG
00001F9C  6000 0038               1722          BRA         MOVEM_SRC
00001FA0                          1723  
00001FA0  4E75                    1724          RTS
00001FA2                          1725          ; D, A
00001FA2                          1726  MOVEM_REG:
00001FA2  43F9 000026DD           1727          LEA         SPACE_MSG, A1
00001FA8  103C 000E               1728          MOVE.B      #14, D0
00001FAC  4E4F                    1729          TRAP        #15
00001FAE  4283                    1730          CLR.L       D3
00001FB0  4285                    1731          CLR.L       D5
00001FB2  4286                    1732          CLR.L       D6
00001FB4  4287                    1733          CLR.L       D7
00001FB6                          1734          
00001FB6  341B                    1735          MOVE.W      (A3)+, D2
00001FB8  4EB9 0000200A           1736          JSR         MOVEM_START
00001FBE                          1737          ; Print Out ", "
00001FBE  43F9 000025E0           1738          LEA         SEPERATOR, A1
00001FC4  103C 000E               1739          MOVE.B      #14, D0
00001FC8  4E4F                    1740          TRAP        #15
00001FCA                          1741          
00001FCA  4EB8 16B8               1742          JSR         Bit6
00001FCE  1602                    1743          MOVE.B      D2, D3
00001FD0                          1744          
00001FD0                          1745          
00001FD0  4EB8 1E3A               1746          JSR         EA_GENERIC
00001FD4  4E75                    1747          RTS
00001FD6                          1748          ; A, D
00001FD6                          1749  MOVEM_SRC:
00001FD6                          1750  
00001FD6  4EB8 16B8               1751          JSR         Bit6
00001FDA  1602                    1752          MOVE.B      D2, D3
00001FDC                          1753  
00001FDC  4EB8 1E3A               1754          JSR         EA_GENERIC
00001FE0                          1755          ; Print Out ", "
00001FE0  43F9 000025E0           1756          LEA         SEPERATOR, A1
00001FE6  103C 000E               1757          MOVE.B      #14, D0
00001FEA  4E4F                    1758          TRAP        #15
00001FEC  43F9 000026DD           1759          LEA         SPACE_MSG, A1
00001FF2  103C 000E               1760          MOVE.B      #14, D0
00001FF6  4E4F                    1761          TRAP        #15
00001FF8  4283                    1762          CLR.L       D3
00001FFA  4285                    1763          CLR.L       D5
00001FFC  4286                    1764          CLR.L       D6
00001FFE  4287                    1765          CLR.L       D7
00002000                          1766          
00002000  341B                    1767          MOVE.W      (A3)+, D2
00002002  4EB9 0000200A           1768          JSR         MOVEM_START
00002008                          1769  
00002008  4E75                    1770          RTS        
0000200A                          1771  
0000200A                          1772  
0000200A                          1773  MOVEM_START:
0000200A  163C 0004               1774          MOVE.B      #4, D3
0000200E  4285                    1775          CLR.L       D5
00002010  4286                    1776          CLR.L       D6
00002012  4287                    1777          CLR.L       D7
00002014  4EB9 0000201C           1778          JSR         MOVEM_LOOP
0000201A  4E75                    1779          RTS
0000201C                          1780          
0000201C                          1781  ; D5 helps identify reg out of group
0000201C                          1782  ; D6 helps identify Group out of word
0000201C                          1783  ; D7 keeps track of the number of reg's    
0000201C                          1784  MOVEM_LOOP:
0000201C                          1785  
0000201C  B63C 0000               1786          CMP.B       #0, D3
00002020  6700 002C               1787          BEQ         MOVEM_DONE
00002024  5343                    1788          SUB         #1, D3
00002026                          1789  
00002026                          1790  
00002026  1A02                    1791          MOVE.B      D2, D5
00002028  E882                    1792          ASR.L       #4, D2
0000202A                          1793          
0000202A  BA3C 0001               1794          CMP.B       #1, D5
0000202E  6700 0020               1795          BEQ         MOVEM_0
00002032  BA3C 0002               1796          CMP.B       #2, D5
00002036  6700 0020               1797          BEQ         MOVEM_1
0000203A  BA3C 0004               1798          CMP.B       #4, D5
0000203E  6700 0020               1799          BEQ         MOVEM_2
00002042  BA3C 0008               1800          CMP.B       #8, D5
00002046  6700 0020               1801          BEQ         MOVEM_3
0000204A                          1802          
0000204A  5246                    1803          ADD         #1, D6
0000204C  60CE                    1804          BRA         MOVEM_LOOP
0000204E                          1805  
0000204E                          1806  
0000204E                          1807  MOVEM_DONE
0000204E  4E75                    1808          RTS 
00002050                          1809         
00002050                          1810  MOVEM_0:
00002050  1A3C 0000               1811          MOVE.B      #0, D5   
00002054  6000 001A               1812          BRA         MOVEM_CHECK_PRINT
00002058                          1813  MOVEM_1:
00002058  1A3C 0001               1814          MOVE.B      #1, D5   
0000205C  6000 0012               1815          BRA         MOVEM_CHECK_PRINT
00002060                          1816  MOVEM_2:
00002060  1A3C 0002               1817          MOVE.B      #2, D5   
00002064  6000 000A               1818          BRA         MOVEM_CHECK_PRINT        
00002068                          1819  MOVEM_3:
00002068  1A3C 0003               1820          MOVE.B      #3, D5   
0000206C  6000 0002               1821          BRA         MOVEM_CHECK_PRINT
00002070                          1822  
00002070                          1823  MOVEM_CHECK_PRINT:
00002070  BE3C 0000               1824          CMP.B       #0, D7
00002074  6600 0006               1825          BNE         MOVEM_DIVISOR
00002078  6000 0012               1826          BRA         MOVEM_PRINT_MODE        
0000207C                          1827  
0000207C                          1828  MOVEM_DIVISOR:
0000207C  43F9 000025DE           1829          LEA         DIVISOR_MSG, A1
00002082  103C 000E               1830          MOVE.B      #14, D0    
00002086  4E4F                    1831          TRAP        #15
00002088  6000 0002               1832          BRA         MOVEM_PRINT_MODE
0000208C                          1833  
0000208C                          1834  
0000208C                          1835  MOVEM_PRINT_MODE:        
0000208C  5247                    1836          ADD         #1, D7
0000208E                          1837  
0000208E  BC3C 0000               1838          CMP.B       #0, D6
00002092  6700 0016               1839          BEQ         MOVEM_MODE0
00002096  BC3C 0001               1840          CMP.B       #1, D6
0000209A  6700 0028               1841          BEQ         MOVEM_MODE1
0000209E  BC3C 0002               1842          CMP.B       #2, D6
000020A2  6700 003C               1843          BEQ         MOVEM_MODE2
000020A6  6000 0052               1844          BRA         MOVEM_MODE3
000020AA                          1845          
000020AA                          1846          
000020AA                          1847  MOVEM_MODE0:
000020AA  43F9 000025C6           1848          LEA         MOVEM0_MSG, A1
000020B0  103C 000E               1849          MOVE.B      #14, D0    
000020B4  4E4F                    1850          TRAP        #15
000020B6  1205                    1851          MOVE.B      D5, D1
000020B8  103C 0003               1852          MOVE.B      #$3, D0
000020BC  4E4F                    1853          TRAP        #15
000020BE  5246                    1854          ADD         #1, D6
000020C0                          1855          
000020C0  6000 FF5A               1856          BRA         MOVEM_LOOP
000020C4                          1857  MOVEM_MODE1:
000020C4  5845                    1858          ADD         #4, D5
000020C6  43F9 000025C6           1859          LEA         MOVEM0_MSG, A1
000020CC  103C 000E               1860          MOVE.B      #14, D0    
000020D0  4E4F                    1861          TRAP        #15
000020D2  1205                    1862          MOVE.B      D5, D1
000020D4  103C 0003               1863          MOVE.B      #$3, D0
000020D8  4E4F                    1864          TRAP        #15
000020DA  5246                    1865          ADD         #1, D6
000020DC                          1866          
000020DC  6000 FF3E               1867          BRA         MOVEM_LOOP        
000020E0                          1868  MOVEM_MODE2:
000020E0  43F9 000025C8           1869          LEA         MOVEM1_MSG, A1
000020E6  103C 000E               1870          MOVE.B      #14, D0    
000020EA  4E4F                    1871          TRAP        #15
000020EC  1205                    1872          MOVE.B      D5, D1
000020EE  103C 0003               1873          MOVE.B      #$3, D0
000020F2  4E4F                    1874          TRAP        #15
000020F4  5246                    1875          ADD         #1, D6
000020F6                          1876          
000020F6  6000 FF24               1877          BRA         MOVEM_LOOP       
000020FA                          1878   
000020FA                          1879  MOVEM_MODE3:
000020FA  5845                    1880          ADD         #4, D5
000020FC  43F9 000025C8           1881          LEA         MOVEM1_MSG, A1
00002102  103C 000E               1882          MOVE.B      #14, D0    
00002106  4E4F                    1883          TRAP        #15
00002108  1205                    1884          MOVE.B      D5, D1
0000210A  103C 0003               1885          MOVE.B      #$3, D0
0000210E  4E4F                    1886          TRAP        #15
00002110  5246                    1887          ADD         #1, D6
00002112                          1888          
00002112  6000 FF08               1889          BRA         MOVEM_LOOP 
00002116                          1890         
00002116                          1891         
00002116                          1892  EA_BRA:
00002116                          1893  
00002116  4EB8 1624               1894          JSR         Bits7to0
0000211A  B43C 0000               1895          CMP.B       #0, D2
0000211E  6700 0042               1896          BEQ         BRA_WORD
00002122  B43C 00FF               1897          CMP.B       #$FF, D2
00002126  6700 006E               1898          BEQ         BRA_LONG
0000212A                          1899          
0000212A  6000 0004               1900          BRA         BRA_BYTE
0000212E                          1901  
0000212E  4E75                    1902          RTS
00002130                          1903  
00002130                          1904  BRA_BYTE:
00002130                          1905          
00002130                          1906          
00002130  43F9 000026DD           1907          LEA         SPACE_MSG, A1
00002136  103C 000E               1908          MOVE.B      #14, D0
0000213A  4E4F                    1909          TRAP        #15
0000213C  43F9 000025F1           1910          LEA         DOLLAR_MSG, A1
00002142  103C 000E               1911          MOVE.B      #14, D0
00002146  4E4F                    1912          TRAP        #15
00002148                          1913  
00002148  2A0B                    1914          MOVE.L      A3, D5
0000214A  3C02                    1915          MOVE.W      D2, D6
0000214C                          1916          ; ADD.L       D5, D6
0000214C                          1917  
0000214C  2406                    1918          MOVE.L      D6, D2
0000214E  4EB8 1148               1919          JSR         FLIP_START
00002152                          1920          
00002152  4847                    1921          SWAP        D7
00002154                          1922          
00002154  4282                    1923          CLR.L       D2
00002156  123C 0004               1924          MOVE.B      #4, D1
0000215A  4EB9 0000242C           1925          JSR         CONVERT_HEX
00002160  4E75                    1926          RTS
00002162                          1927  
00002162                          1928  BRA_WORD:
00002162  43F9 000026DD           1929          LEA         SPACE_MSG, A1
00002168  103C 000E               1930          MOVE.B      #14, D0
0000216C  4E4F                    1931          TRAP        #15
0000216E  43F9 000025F1           1932          LEA         DOLLAR_MSG, A1
00002174  103C 000E               1933          MOVE.B      #14, D0
00002178  4E4F                    1934          TRAP        #15
0000217A                          1935  
0000217A  2A0B                    1936          MOVE.L      A3, D5
0000217C  3C1B                    1937          MOVE.W      (A3)+, D6
0000217E  DC85                    1938          ADD.L       D5, D6
00002180                          1939  
00002180  2406                    1940          MOVE.L      D6, D2
00002182  4EB8 1148               1941          JSR         FLIP_START
00002186                          1942          
00002186  4847                    1943          SWAP        D7
00002188                          1944          
00002188  4282                    1945          CLR.L       D2
0000218A  123C 0004               1946          MOVE.B      #4, D1
0000218E  4EB9 0000242C           1947          JSR         CONVERT_HEX
00002194                          1948  
00002194  4E75                    1949          RTS
00002196                          1950  BRA_LONG:
00002196                          1951  
00002196  43F9 000026DD           1952          LEA         SPACE_MSG, A1
0000219C  103C 000E               1953          MOVE.B      #14, D0
000021A0  4E4F                    1954          TRAP        #15
000021A2  43F9 000025F1           1955          LEA         DOLLAR_MSG, A1
000021A8  103C 000E               1956          MOVE.B      #14, D0
000021AC  4E4F                    1957          TRAP        #15
000021AE                          1958  
000021AE  2A0B                    1959          MOVE.L      A3, D5
000021B0  3C1B                    1960          MOVE.W      (A3)+, D6
000021B2  DC85                    1961          ADD.L       D5, D6
000021B4                          1962  
000021B4  2406                    1963          MOVE.L      D6, D2
000021B6  4EB8 1148               1964          JSR         FLIP_START
000021BA                          1965          
000021BA  4847                    1966          SWAP        D7
000021BC                          1967          
000021BC  4282                    1968          CLR.L       D2
000021BE  123C 0008               1969          MOVE.B      #8, D1
000021C2  4EB9 0000242C           1970          JSR         CONVERT_HEX
000021C8                          1971         
000021C8                          1972         
000021C8                          1973          
000021C8                          1974  EA_MOVEQ:
000021C8                          1975  
000021C8                          1976          
000021C8  1404                    1977          MOVE.B      D4, D2
000021CA                          1978          
000021CA  43F9 000025ED           1979          LEA         DATA_MSG, A1
000021D0  103C 000E               1980          MOVE.B      #14, D0    
000021D4  4E4F                    1981          TRAP        #15
000021D6                          1982  
000021D6  4EB8 1148               1983          JSR         FLIP_START
000021DA                          1984          
000021DA                          1985  
000021DA  4847                    1986          SWAP        D7
000021DC  123C 0008               1987          MOVE.B      #8, D1
000021E0  E26F                    1988          LSR.W       D1, D7
000021E2  123C 0002               1989          MOVE.B      #2, D1
000021E6                          1990          
000021E6  4EB9 0000242C           1991          JSR         CONVERT_HEX
000021EC                          1992          
000021EC                          1993          ; Print Out ", "
000021EC  43F9 000025E0           1994          LEA         SEPERATOR, A1
000021F2  103C 000E               1995          MOVE.B      #14, D0
000021F6  4E4F                    1996          TRAP        #15
000021F8                          1997  
000021F8  1A3C 0000               1998          MOVE.B      #0, D5
000021FC  4EB8 168C               1999          JSR         Bits11to9
00002200  1C02                    2000          MOVE.B      D2, D6
00002202                          2001  
00002202  4EB9 00002256           2002          JSR         MODE_TABLE
00002208                          2003  
00002208  4E75                    2004          RTS
0000220A                          2005  
0000220A                          2006  EA_ADDQ:
0000220A                          2007  
0000220A  123C 0001               2008          MOVE.B      #1, D1
0000220E  4EB8 168C               2009          JSR         Bits11to9
00002212  1E02                    2010          MOVE.B      D2, D7
00002214                          2011          
00002214  43F9 000025ED           2012          LEA         DATA_MSG, A1
0000221A  103C 000E               2013          MOVE.B      #14, D0    
0000221E  4E4F                    2014          TRAP        #15
00002220                          2015  
00002220  4EB9 0000242C           2016          JSR         CONVERT_HEX
00002226                          2017  
00002226                          2018          ; Print Out ", "
00002226  43F9 000025E0           2019          LEA         SEPERATOR, A1
0000222C  103C 000E               2020          MOVE.B      #14, D0
00002230  4E4F                    2021          TRAP        #15
00002232                          2022          
00002232  4EB8 1E3A               2023          JSR         EA_GENERIC
00002236                          2024  
00002236  4E75                    2025          RTS        
00002238                          2026  
00002238                          2027  AS_FIX:
00002238  143C 0008               2028          MOVE.B      #8, D2
0000223C  4E75                    2029          RTS
0000223E                          2030          
0000223E                          2031  ; X+Y = Effective addressing
0000223E                          2032  ; XXX = Mode
0000223E                          2033  ; YYY = Register
0000223E                          2034      
0000223E                          2035  ; 0000 0000 00XX XYYY
0000223E                          2036  EA_LEA:
0000223E  4281                    2037          CLR.L       D1
00002240  4285                    2038          CLR.L       D5
00002242  4286                    2039          CLR.L       D6
00002244                          2040  
00002244  3A04                    2041          MOVE.W      D4, D5
00002246  3C04                    2042          MOVE.W      D4, D6
00002248                          2043  
00002248                          2044  
00002248                          2045          ; Print Out ", "
00002248  43F9 000025E0           2046          LEA         SEPERATOR, A1
0000224E  103C 000E               2047          MOVE.B      #14, D0
00002252  4E4F                    2048          TRAP        #15
00002254                          2049  
00002254                          2050  
00002254  4E75                    2051          RTS
00002256                          2052  
00002256                          2053  
00002256                          2054  
00002256                          2055  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00002256                          2056  MODE_TABLE:
00002256                          2057  
00002256  BA3C 0000               2058          CMP.B       #0,D5
0000225A  6700 0048               2059          BEQ         J_TBL_D
0000225E  BA3C 0001               2060          CMP.B       #1,D5
00002262  6700 002C               2061          BEQ         J_TBL_A
00002266  BA3C 0002               2062          CMP.B       #2,D5
0000226A  6700 004C               2063          BEQ         J_TBL_A_P
0000226E  BA3C 0003               2064          CMP.B       #3,D5
00002272  6700 0064               2065          BEQ         J_TBL_A_INCR
00002276  BA3C 0004               2066          CMP.B       #4,D5
0000227A  6700 007C               2067          BEQ         J_TBL_A_DECR
0000227E  BA3C 0007               2068          CMP.B       #7,D5
00002282  6700 0004               2069          BEQ         J_ABS
00002286                          2070          
00002286  4E75                    2071          RTS
00002288                          2072          ;   deal with errors here
00002288                          2073  
00002288                          2074  J_ABS:
00002288  4EB9 00002322           2075          JSR         J_ABS_TABLE
0000228E  4E75                    2076          RTS
00002290                          2077  
00002290                          2078  J_TBL_A:
00002290  43F9 000025CD           2079          LEA         MODE_1_MSG, A1 ; A#
00002296  103C 000E               2080          MOVE.B      #14, D0
0000229A  4E4F                    2081          TRAP        #15
0000229C  4EB9 00002318           2082          JSR         DISPLAY_REG
000022A2                          2083  
000022A2  4E75                    2084          RTS
000022A4                          2085  
000022A4                          2086  
000022A4                          2087  J_TBL_D:
000022A4  43F9 000025CA           2088          LEA         MODE_0_MSG, A1 ; D#
000022AA  103C 000E               2089          MOVE.B      #14, D0
000022AE  4E4F                    2090          TRAP        #15
000022B0  4EB9 00002318           2091          JSR         DISPLAY_REG
000022B6  4E75                    2092          RTS
000022B8                          2093  
000022B8                          2094  J_TBL_A_P:
000022B8                          2095  
000022B8  43F9 000025D0           2096          LEA         MODE_A_MSG, A1 ; (A#)
000022BE  103C 000E               2097          MOVE.B      #14, D0
000022C2  4E4F                    2098          TRAP        #15
000022C4  4EB9 00002318           2099          JSR         DISPLAY_REG
000022CA                          2100          
000022CA  43F9 000025D4           2101          LEA         MODE_A_1_MSG, A1
000022D0  103C 000E               2102          MOVE.B      #14, D0
000022D4  4E4F                    2103          TRAP        #15
000022D6                          2104  
000022D6                          2105          
000022D6  4E75                    2106          RTS
000022D8                          2107      
000022D8                          2108  J_TBL_A_INCR:
000022D8  43F9 000025D0           2109          LEA         MODE_A_MSG, A1 ; (A#)+
000022DE  103C 000E               2110          MOVE.B      #14, D0
000022E2  4E4F                    2111          TRAP        #15
000022E4  4EB9 00002318           2112          JSR         DISPLAY_REG
000022EA                          2113          
000022EA  43F9 000025D6           2114          LEA         MODE_A_2_MSG, A1
000022F0  103C 000E               2115          MOVE.B      #14, D0
000022F4  4E4F                    2116          TRAP        #15
000022F6                          2117  
000022F6  4E75                    2118          RTS
000022F8                          2119          
000022F8                          2120  J_TBL_A_DECR:
000022F8  43F9 000025D9           2121          LEA         MODE_MINUS_MSG, A1 ; -(A#)
000022FE  103C 000E               2122          MOVE.B      #14, D0
00002302  4E4F                    2123          TRAP        #15
00002304  4EB9 00002318           2124          JSR         DISPLAY_REG
0000230A                          2125          
0000230A  43F9 000025D4           2126          LEA         MODE_A_1_MSG, A1
00002310  103C 000E               2127          MOVE.B      #14, D0
00002314  4E4F                    2128          TRAP        #15
00002316                          2129  
00002316  4E75                    2130          RTS
00002318                          2131          
00002318                          2132          
00002318                          2133  DISPLAY_REG:
00002318  1206                    2134          MOVE.B      D6, D1
0000231A  103C 0003               2135          MOVE.B      #$3, D0
0000231E  4E4F                    2136          TRAP        #15
00002320  4E75                    2137          RTS
00002322                          2138  
00002322                          2139  
00002322                          2140  J_ABS_TABLE:
00002322                          2141          ; SIMHALT
00002322  BC3C 0000               2142          CMP.B       #0,D6
00002326  6700 0014               2143          BEQ         SUBCLASS_CHECK
0000232A                          2144              
0000232A  BC3C 0001               2145          CMP.B       #1,D6
0000232E  6700 000C               2146          BEQ         SUBCLASS_CHECK
00002332                          2147              
00002332  BC3C 0004               2148          CMP.B       #4,D6
00002336  6700 007A               2149          BEQ         DATA_TABLE
0000233A                          2150              
0000233A  4E75                    2151          RTS
0000233C                          2152          
0000233C                          2153  SUBCLASS_CHECK:
0000233C  2C4B                    2154          MOVE.L      A3, A6
0000233E  221B                    2155          MOVE.L      (A3)+, D1
00002340  264E                    2156          MOVE.L      A6, A3
00002342  2C7C 00000000           2157          MOVE.L      #0, A6
00002348                          2158          
00002348  4841                    2159          SWAP        D1
0000234A                          2160          
0000234A  B27C 0000               2161          CMP.W       #0, D1
0000234E  6700 0006               2162          BEQ         J_SUBCLASS_0
00002352  6000 002A               2163          BRA         J_SUBCLASS_1
00002356                          2164  
00002356                          2165          
00002356                          2166  J_SUBCLASS_0:
00002356  43F9 000025F1           2167          LEA         DOLLAR_MSG, A1
0000235C  103C 000E               2168          MOVE.B      #14, D0
00002360  4E4F                    2169          TRAP        #15
00002362                          2170         
00002362  4281                    2171          CLR.L       D1
00002364  4282                    2172          CLR.L       D2
00002366  4287                    2173          CLR.L       D7
00002368  241B                    2174          MOVE.L      (A3)+, D2
0000236A                          2175          
0000236A                          2176  
0000236A  4EB8 1148               2177          JSR         FLIP_START
0000236E                          2178  
0000236E  4282                    2179          CLR.L       D2
00002370  4847                    2180          SWAP        D7
00002372                          2181  
00002372  123C 0004               2182          MOVE.B      #4, D1
00002376  4EB9 0000242C           2183          JSR         CONVERT_HEX
0000237C                          2184          
0000237C                          2185  
0000237C                          2186  
0000237C  4E75                    2187          RTS
0000237E                          2188  
0000237E                          2189  
0000237E                          2190  J_SUBCLASS_1:
0000237E                          2191          ; SIMHALT
0000237E  43F9 000025E5           2192          LEA         SUBCLASS1_1, A1
00002384  103C 000E               2193          MOVE.B      #14, D0
00002388  4E4F                    2194          TRAP        #15
0000238A                          2195  
0000238A  4281                    2196          CLR.L       D1
0000238C  4282                    2197          CLR.L       D2
0000238E  4287                    2198          CLR.L       D7
00002390                          2199  
00002390                          2200  
00002390                          2201          
00002390  241B                    2202          MOVE.L      (A3)+, D2
00002392                          2203          
00002392  4EB8 1148               2204          JSR         FLIP_START
00002396                          2205  
00002396  4282                    2206          CLR.L       D2
00002398                          2207          
00002398                          2208  
00002398  123C 0008               2209          MOVE.B      #8, D1
0000239C  4EB9 0000242C           2210          JSR         CONVERT_HEX
000023A2                          2211  
000023A2                          2212  
000023A2  43F9 000025E9           2213          LEA         SUBCLASS1_2, A1
000023A8  103C 000E               2214          MOVE.B      #14, D0
000023AC  4E4F                    2215          TRAP        #15
000023AE                          2216          
000023AE  4E75                    2217          RTS
000023B0                          2218  
000023B0                          2219  ;   Error
000023B0                          2220  J_ABS_ERROR:
000023B0  4E75                    2221          RTS
000023B2                          2222  
000023B2                          2223  ;   Hard Coded Data
000023B2                          2224  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
000023B2                          2225  
000023B2                          2226  ;   Size num 0 = Byte 1 = Word 2 Long
000023B2                          2227  
000023B2                          2228  DATA_TABLE:
000023B2                          2229          ; SIMHALT
000023B2  43F9 000025ED           2230          LEA         DATA_MSG, A1
000023B8  103C 000E               2231          MOVE.B      #14, D0
000023BC  4E4F                    2232          TRAP        #15
000023BE                          2233  
000023BE                          2234  
000023BE  B63C 0000               2235          CMP.B       #0,D3 
000023C2  6700 0014               2236          BEQ         DATA_B
000023C6                          2237  
000023C6  B63C 0001               2238          CMP.B       #1,D3 
000023CA  6700 002A               2239          BEQ         DATA_W
000023CE                          2240          
000023CE  B63C 0002               2241          CMP.B       #2,D3 
000023D2  6700 003E               2242          BEQ         DATA_L
000023D6                          2243          
000023D6  4E75                    2244          RTS
000023D8                          2245  
000023D8                          2246  DATA_B:
000023D8  4281                    2247          CLR.L       D1
000023DA  4282                    2248          CLR.L       D2
000023DC  4287                    2249          CLR.L       D7
000023DE                          2250          
000023DE  341B                    2251          MOVE.W      (A3)+, D2
000023E0                          2252          * Only read first byte from the word 
000023E0                          2253          
000023E0  4EB8 1148               2254          JSR         FLIP_START
000023E4  4847                    2255          SWAP        D7
000023E6  E09F                    2256          ROR.L       #8,D7
000023E8  4282                    2257          CLR.L       D2
000023EA                          2258          
000023EA                          2259  
000023EA  123C 0002               2260          MOVE.B      #2, D1
000023EE  4EB9 0000242C           2261          JSR         CONVERT_HEX
000023F4                          2262  
000023F4                          2263  
000023F4                          2264  
000023F4  4E75                    2265          RTS
000023F6                          2266  
000023F6                          2267  DATA_W:
000023F6  4281                    2268          CLR.L       D1
000023F8  4282                    2269          CLR.L       D2
000023FA  4287                    2270          CLR.L       D7
000023FC                          2271          
000023FC  341B                    2272          MOVE.W      (A3)+, D2
000023FE                          2273          
000023FE  4EB8 1148               2274          JSR         FLIP_START
00002402                          2275  
00002402  4847                    2276          SWAP        D7
00002404                          2277  
00002404  4282                    2278          CLR.L       D2
00002406                          2279          
00002406  123C 0004               2280          MOVE.B      #4, D1
0000240A                          2281          
0000240A                          2282          
0000240A  4EB9 0000242C           2283          JSR         CONVERT_HEX
00002410                          2284  
00002410                          2285          
00002410                          2286  
00002410  4E75                    2287          RTS
00002412                          2288  
00002412                          2289  DATA_L:
00002412                          2290          ; SIMHALT
00002412  4281                    2291          CLR.L       D1
00002414  4282                    2292          CLR.L       D2
00002416  4287                    2293          CLR.L       D7
00002418                          2294          
00002418  241B                    2295          MOVE.L      (A3)+, D2
0000241A                          2296          
0000241A  4EB8 1148               2297          JSR         FLIP_START
0000241E                          2298  
0000241E  4282                    2299          CLR.L       D2
00002420                          2300          
00002420                          2301  
00002420  123C 0008               2302          MOVE.B      #8, D1
00002424  4EB9 0000242C           2303          JSR         CONVERT_HEX
0000242A                          2304  
0000242A                          2305          
0000242A                          2306  
0000242A  4E75                    2307          RTS
0000242C                          2308  
0000242C                          2309  
0000242C                          2310  CONVERT_HEX:
0000242C                          2311          ; SIMHALT    
0000242C  0C01 0000               2312          CMPI.B      #$0, D1    
00002430  6700 0092               2313          BEQ         HEX_DONE
00002434                          2314          
00002434  5301                    2315          SUBI.B      #$1, D1       
00002436                          2316  
00002436  4282                    2317          CLR.L       D2
00002438                          2318      
00002438  1407                    2319          MOVE.B      D7, D2
0000243A                          2320              
0000243A  103C 001C               2321          MOVE.B      #28, D0    
0000243E  E1AA                    2322          LSL.L       D0, D2     
00002440  E99A                    2323          ROL.L       #4, D2
00002442                          2324          
00002442  E887                    2325          ASR.L       #4, D7
00002444                          2326          
00002444                          2327          
00002444  B43C 0000               2328          CMP.B       #0,D2
00002448  6700 007C               2329          BEQ         PRINT_ASCII0
0000244C  B43C 0001               2330          CMP.B       #1,D2
00002450  6700 0084               2331          BEQ         PRINT_ASCII1
00002454  B43C 0002               2332          CMP.B       #2,D2
00002458  6700 008C               2333          BEQ         PRINT_ASCII2
0000245C  B43C 0003               2334          CMP.B       #3,D2
00002460  6700 0094               2335          BEQ         PRINT_ASCII3
00002464  B43C 0004               2336          CMP.B       #4,D2
00002468  6700 009C               2337          BEQ         PRINT_ASCII4
0000246C  B43C 0005               2338          CMP.B       #5,D2
00002470  6700 00A4               2339          BEQ         PRINT_ASCII5
00002474  B43C 0006               2340          CMP.B       #6,D2
00002478  6700 00AC               2341          BEQ         PRINT_ASCII6
0000247C  B43C 0007               2342          CMP.B       #7,D2
00002480  6700 00B4               2343          BEQ         PRINT_ASCII7
00002484  B43C 0008               2344          CMP.B       #8,D2
00002488  6700 00BC               2345          BEQ         PRINT_ASCII8
0000248C  B43C 0009               2346          CMP.B       #9,D2
00002490  6700 00C4               2347          BEQ         PRINT_ASCII9
00002494  B43C 000A               2348          CMP.B       #$A,D2
00002498  6700 00CC               2349          BEQ         PRINT_ASCIIA
0000249C  B43C 000B               2350          CMP.B       #$B,D2
000024A0  6700 00D4               2351          BEQ         PRINT_ASCIIB
000024A4  B43C 000C               2352          CMP.B       #$C,D2
000024A8  6700 00DC               2353          BEQ         PRINT_ASCIIC
000024AC  B43C 000D               2354          CMP.B       #$D,D2
000024B0  6700 00E4               2355          BEQ         PRINT_ASCIID
000024B4  B43C 000E               2356          CMP.B       #$E,D2
000024B8  6700 00EC               2357          BEQ         PRINT_ASCIIE
000024BC  B43C 000F               2358          CMP.B       #$F,D2
000024C0  6700 00F4               2359          BEQ         PRINT_ASCIIF
000024C4                          2360          
000024C4                          2361          ; error handling here
000024C4                          2362          
000024C4                          2363          
000024C4                          2364  
000024C4                          2365  HEX_DONE:
000024C4  4E75                    2366          RTS
000024C6                          2367  
000024C6                          2368  
000024C6                          2369  
000024C6                          2370  PRINT_ASCII0:
000024C6  43F9 000026E0           2371          LEA         ZERO_MSG, A1
000024CC  103C 000E               2372          MOVE.B      #14, D0    
000024D0  4E4F                    2373          TRAP        #15
000024D2  6000 FF58               2374          BRA         CONVERT_HEX
000024D6                          2375  PRINT_ASCII1:
000024D6  43F9 000026E2           2376          LEA         ONE_MSG, A1
000024DC  103C 000E               2377          MOVE.B      #14, D0    
000024E0  4E4F                    2378          TRAP        #15
000024E2  6000 FF48               2379          BRA         CONVERT_HEX
000024E6                          2380  PRINT_ASCII2:
000024E6  43F9 000026E4           2381          LEA         TWO_MSG, A1
000024EC  103C 000E               2382          MOVE.B      #14, D0    
000024F0  4E4F                    2383          TRAP        #15
000024F2  6000 FF38               2384          BRA         CONVERT_HEX
000024F6                          2385  PRINT_ASCII3:
000024F6  43F9 000026E6           2386          LEA         THREE_MSG, A1
000024FC  103C 000E               2387          MOVE.B      #14, D0    
00002500  4E4F                    2388          TRAP        #15
00002502  6000 FF28               2389          BRA         CONVERT_HEX
00002506                          2390  PRINT_ASCII4:
00002506  43F9 000026E8           2391          LEA         FOUR_MSG, A1
0000250C  103C 000E               2392          MOVE.B      #14, D0    
00002510  4E4F                    2393          TRAP        #15
00002512  6000 FF18               2394          BRA         CONVERT_HEX
00002516                          2395  PRINT_ASCII5:
00002516  43F9 000026EA           2396          LEA         FIVE_MSG, A1
0000251C  103C 000E               2397          MOVE.B      #14, D0    
00002520  4E4F                    2398          TRAP        #15
00002522  6000 FF08               2399          BRA         CONVERT_HEX        
00002526                          2400  PRINT_ASCII6:
00002526  43F9 000026EC           2401          LEA         SIX_MSG, A1
0000252C  103C 000E               2402          MOVE.B      #14, D0    
00002530  4E4F                    2403          TRAP        #15
00002532  6000 FEF8               2404          BRA         CONVERT_HEX
00002536                          2405  PRINT_ASCII7:
00002536  43F9 000026EE           2406          LEA         SEVEN_MSG, A1
0000253C  103C 000E               2407          MOVE.B      #14, D0    
00002540  4E4F                    2408          TRAP        #15
00002542  6000 FEE8               2409          BRA         CONVERT_HEX
00002546                          2410  PRINT_ASCII8:
00002546  43F9 000026F0           2411          LEA         EIGHT_MSG, A1
0000254C  103C 000E               2412          MOVE.B      #14, D0    
00002550  4E4F                    2413          TRAP        #15
00002552  6000 FED8               2414          BRA         CONVERT_HEX
00002556                          2415  PRINT_ASCII9:
00002556  43F9 000026F2           2416          LEA         NINE_MSG, A1
0000255C  103C 000E               2417          MOVE.B      #14, D0    
00002560  4E4F                    2418          TRAP        #15
00002562  6000 FEC8               2419          BRA         CONVERT_HEX
00002566                          2420  PRINT_ASCIIA:
00002566  43F9 000026F4           2421          LEA         A_MSG, A1
0000256C  103C 000E               2422          MOVE.B      #14, D0    
00002570  4E4F                    2423          TRAP        #15
00002572  6000 FEB8               2424          BRA         CONVERT_HEX
00002576                          2425  PRINT_ASCIIB:
00002576  43F9 000026F6           2426          LEA         B_MSG, A1
0000257C  103C 000E               2427          MOVE.B      #14, D0    
00002580  4E4F                    2428          TRAP        #15
00002582  6000 FEA8               2429          BRA         CONVERT_HEX
00002586                          2430  PRINT_ASCIIC:
00002586  43F9 000026F8           2431          LEA         C_MSG, A1
0000258C  103C 000E               2432          MOVE.B      #14, D0    
00002590  4E4F                    2433          TRAP        #15
00002592  6000 FE98               2434          BRA         CONVERT_HEX
00002596                          2435  PRINT_ASCIID:
00002596  43F9 000026FA           2436          LEA         D_MSG, A1
0000259C  103C 000E               2437          MOVE.B      #14, D0    
000025A0  4E4F                    2438          TRAP        #15
000025A2  6000 FE88               2439          BRA         CONVERT_HEX
000025A6                          2440  PRINT_ASCIIE:
000025A6  43F9 000026FC           2441          LEA         E_MSG, A1
000025AC  103C 000E               2442          MOVE.B      #14, D0    
000025B0  4E4F                    2443          TRAP        #15
000025B2  6000 FE78               2444          BRA         CONVERT_HEX
000025B6                          2445  PRINT_ASCIIF:
000025B6  43F9 000026FE           2446          LEA         F_MSG, A1
000025BC  103C 000E               2447          MOVE.B      #14, D0    
000025C0  4E4F                    2448          TRAP        #15
000025C2  6000 FE68               2449          BRA         CONVERT_HEX
000025C6                          2450  
000025C6                          2451  
000025C6                          2452  
000025C6                          2453  
000025C6                          2454  
000025C6= 44 00                   2455  MOVEM0_MSG:     DC.B        'D',0
000025C8= 41 00                   2456  MOVEM1_MSG:     DC.B        'A',0
000025CA                          2457  
000025CA= 20 44 00                2458  MODE_0_MSG:     DC.B        ' D',0
000025CD= 20 41 00                2459  MODE_1_MSG:     DC.B        ' A',0
000025D0= 20 28 41 00             2460  MODE_A_MSG:     DC.B        ' (A',0
000025D4= 29 00                   2461  MODE_A_1_MSG:   DC.B        ')',0
000025D6= 29 2B 00                2462  MODE_A_2_MSG:   DC.B        ')+',0
000025D9= 20 2D 28 41 00          2463  MODE_MINUS_MSG: DC.B        ' -(A',0
000025DE                          2464  
000025DE= 2F 00                   2465  DIVISOR_MSG:    DC.B        '/',0
000025E0                          2466  
000025E0= 2C 00                   2467  SEPERATOR:      DC.B        ',',0
000025E2                          2468  
000025E2= 20 23 00                2469  POUND_MSG:      DC.B        ' #',0
000025E5= 20 28 24 00             2470  SUBCLASS1_1:    DC.B        ' ($',0
000025E9= 29 2E 4C 00             2471  SUBCLASS1_2:    DC.B        ').L',0
000025ED= 20 23 24 00             2472  DATA_MSG:       DC.B        ' #$',0
000025F1= 24 00                   2473  DOLLAR_MSG:     DC.B        '$',0
000025F3                          2474  
000025F3= 54 4D 50 00             2475  TEMP_MSG:       DC.B        'TMP',0
000025F7                          2476  
000025F7                          2477  
000025F7                          2478  
000025F7                          2479  TMP_STR         DS.B        32
00002617                          2480  
00002617                          2481  
00002617                          2482  
00002617                          2483  
00002617                          2484  
00002617                          2485  
00002617                          2486  
00002617                          2487  
00002617                          2488  
00002617                          2489  
00002617                          2490  
00002617                          2491  -------------------- end include --------------------
00002617                          2492                  
00002617                          2493  
00002617= 57 65 6C 63 6F 6D ...   2494  GREETING_MSG:   DC.B        'Welcome to Sarah and Leons Disassembler!',CR,LF,0
00002642= 57 6F 75 6C 64 20 ...   2495  REPEAT_MSG:     DC.B        'Would you like to restart the program? (Press enter to restart)',CR,LF,0
00002684= 54 68 61 6E 6B 20 ...   2496  GOODBYE_MSG:    DC.B        'Thank you for using Sarah and Leons Disassembler!',CR,LF,0
000026B8= 4F 6E 65 20 6F 72 ...   2497  BAD_ADDR_MSG:   DC.B        'One or both addresses are invalid.',CR,LF,0
000026DD                          2498  
000026DD                          2499                
000026DD  =0000000D               2500  CR              EQU         $0D
000026DD  =0000000A               2501  LF              EQU         $0A
000026DD                          2502  
000026DD= 20 20 00                2503  SPACE_MSG:      DC.B        '  ',0
000026E0                          2504  
000026E0= 30 00                   2505  ZERO_MSG:       DC.B        '0',0
000026E2= 31 00                   2506  ONE_MSG:        DC.B        '1',0
000026E4= 32 00                   2507  TWO_MSG:        DC.B        '2',0
000026E6= 33 00                   2508  THREE_MSG:      DC.B        '3',0
000026E8= 34 00                   2509  FOUR_MSG:       DC.B        '4',0
000026EA= 35 00                   2510  FIVE_MSG:       DC.B        '5',0
000026EC= 36 00                   2511  SIX_MSG:        DC.B        '6',0
000026EE= 37 00                   2512  SEVEN_MSG:      DC.B        '7',0
000026F0= 38 00                   2513  EIGHT_MSG:      DC.B        '8',0
000026F2= 39 00                   2514  NINE_MSG:       DC.B        '9',0
000026F4= 41 00                   2515  A_MSG:          DC.B        'A',0
000026F6= 42 00                   2516  B_MSG:          DC.B        'B',0
000026F8= 43 00                   2517  C_MSG:          DC.B        'C',0
000026FA= 44 00                   2518  D_MSG:          DC.B        'D',0
000026FC= 45 00                   2519  E_MSG:          DC.B        'E',0
000026FE= 46 00                   2520  F_MSG:          DC.B        'F',0
00002700                          2521                  
00002700= 45 72 72 6F 72 00       2522  ERROR_MSG:      DC.B        'Error',0
00002706= 53 75 63 63 65 73 ...   2523  SUCCESS_MSG:    DC.B        'Success',0
0000270E                          2524  
0000270E= 0D 0A 00                2525  NEW_LINE:       DC.B        '',CR,LF,0
00002711                          2526  
00002711= 50 6C 65 61 73 65 ...   2527  NEXT_PAGE_MSG:  DC.B        'Please press enter to continue: ',CR,LF,0
00002734                          2528  
00002734                          2529    
00002734                          2530                  
00002734                          2531                  
00002734                          2532  STA_ADDR        DS.B        40
0000275C                          2533  END_ADDR        DS.B        40
00002784                          2534  
00002784                          2535  
00002784                          2536  
00002784                          2537  
00002784                          2538                  
00002784                          2539                  
00002784                          2540          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_DATASRC_EA      1E66
ADDA_MSG            1D47
ADDI_MSG            1CEF
ADDQ_MSG            1CCC
ADD_MSG             1D43
ANDI_MSG            1CE5
ASCII_DONE          10F4
ASL_MEM             1C0C
ASL_MSG             1D4C
ASL_REG             1B28
ASR_MEM             1C6C
ASR_MSG             1D50
ASR_REG             1B70
AS_COUNT            1F16
AS_FIX              2238
AS_REGISTER         1F54
A_MSG               26F4
BAD_ADDR_MSG        26B8
BEQ_MSG             1D1C
BIT0                1698
BIT5                16A8
BIT6                16B8
BITS11TO6           1674
BITS11TO8           1680
BITS11TO9           168C
BITS2TO0            15EC
BITS3TO0            15F8
BITS4TO3            1614
BITS5TO3            1604
BITS7TO0            1624
BITS7TO4            162C
BITS7TO6            1638
BITS8TO3            1644
BITS8TO4            1650
BITS8TO6            165C
BITS9TO7            1668
BRA_BYTE            2130
BRA_LONG            2196
BRA_MSG             1D14
BRA_WORD            2162
BSR_MSG             1D18
BYTE_MSG            1D6E
B_MSG               26F6
CHECK_DATA          1098
CHECK_ODD           108A
CLEAR_ALL_REG       10A0
CMPI_MSG            1CF9
CMP_MSG             1D35
CONVERT_ASCII       10DC
CONVERT_HEX         242C
CR                  D
C_MSG               26F8
DATASRC_EA          1E4E
DATA_B              23D8
DATA_L              2412
DATA_MSG            25ED
DATA_TABLE          23B2
DATA_W              23F6
DISPLAY_REG         2318
DIVISOR_MSG         25DE
DIVS_MSG            1D2C
DIVU_MSG            1D27
DOLLAR              1D6A
DOLLAR_MSG          25F1
DONE                139C
DONE_CHECK          137E
D_MSG               26FA
EA_ADD              1E9C
EA_ADDQ             220A
EA_AS               1F04
EA_ASRC             1EC0
EA_BRA              2116
EA_DSRC             1EE2
EA_GENERIC          1E3A
EA_LEA              223E
EA_MOVE             1E00
EA_MOVEM            1F92
EA_MOVEQ            21C8
EIGHT_MSG           26F0
END_ADDR            275C
END_ADDR_CHECK      105A
END_MSG             1DE7
EORI_MSG            1CF4
ERROR_INSTR         1DA7
ERROR_MSG           2700
ERROR_OP_MSG        1D77
ERROR_SIZE_MSG      1DB7
EXT_MSG             1D64
E_MSG               26FC
FILE_LOOP           1320
FIVE_MSG            26EA
FLIP_DONE           1176
FLIP_LOOP           1158
FLIP_START          1148
FOUR_MSG            26E8
F_MSG               26FE
GOODBYE_MSG         2684
GREETING_MSG        2617
HEX_DONE            24C4
IMPLEMENT_MSG       1D8B
INVALID_INSTR       15DE
JMP_MSG             1D10
JSR_MSG             1D0C
JUMP_0              1430
JUMP_1              146E
JUMP_2              147C
JUMP_3              1494
JUMP_4              14AC
JUMP_5              14F0
JUMP_6              1502
JUMP_7              1528
JUMP_8              1530
JUMP_9              154E
JUMP_A              1554
JUMP_B              155A
JUMP_C              1580
JUMP_D              159E
JUMP_E              15BA
JUMP_ERROR          15D0
JUMP_OP_CODE        13AE
J_ABS               2288
J_ABS_ERROR         23B0
J_ABS_TABLE         2322
J_MOVEA_L           16E6
J_MOVEA_W           172E
J_MOVE_L            170A
J_MOVE_W            1752
J_SUBCLASS_0        2356
J_SUBCLASS_1        237E
J_TBL_A             2290
J_TBL_A_DECR        22F8
J_TBL_A_INCR        22D8
J_TBL_A_P           22B8
J_TBL_D             22A4
LEA_MSG             1D08
LEFT_MEM            1BCC
LEFT_REG            1AE0
LET_ASCII           110A
LF                  A
LONG_MSG            1D74
LSL_MEM             1C2C
LSL_MSG             1D54
LSL_REG             1B40
LSR_MEM             1C8C
LSR_MSG             1D58
LSR_REG             1B88
MODE_0_MSG          25CA
MODE_1_MSG          25CD
MODE_A_1_MSG        25D4
MODE_A_2_MSG        25D6
MODE_A_MSG          25D0
MODE_MINUS_MSG      25D9
MODE_TABLE          2256
MOVEA_MSG           1CDB
MOVEM0_MSG          25C6
MOVEM1_MSG          25C8
MOVEM_0             2050
MOVEM_1             2058
MOVEM_2             2060
MOVEM_3             2068
MOVEM_CHECK_PRINT   2070
MOVEM_DIVISOR       207C
MOVEM_DONE          204E
MOVEM_L             18A0
MOVEM_LOOP          201C
MOVEM_MODE0         20AA
MOVEM_MODE1         20C4
MOVEM_MODE2         20E0
MOVEM_MODE3         20FA
MOVEM_MSG           1D02
MOVEM_OR_EXT        1870
MOVEM_PRINT_MODE    208C
MOVEM_REG           1FA2
MOVEM_SRC           1FD6
MOVEM_START         200A
MOVEM_W             187C
MOVEQ_MSG           1D20
MOVE_MSG            1CD6
MULS_MSG            1D3E
MULU_MSG            1D39
NEW_LINE            270E
NEXT_PAGE_MSG       2711
NINE_MSG            26F2
NOP_MSG             1CFE
NUM_ASCII           10F6
ONE_MSG             26E2
OPMODE              196A
OPMODE_ADDA         19A4
OPMODE_ASHIFT       19BE
OP_CODE_ADD         1A9C
OP_CODE_ADDA        1AB4
OP_CODE_ADDI        17C4
OP_CODE_ADDQ        18D2
OP_CODE_ANDI        1790
OP_CODE_ASD_MEM     1BB8
OP_CODE_ASD_REG     1ACC
OP_CODE_BASE_MOVE   16C8
OP_CODE_BEQ         1A4C
OP_CODE_BRA         1A24
OP_CODE_BSR         1A38
OP_CODE_CMP         1906
OP_CODE_CMPI        17F8
OP_CODE_DIVS        1938
OP_CODE_DIVU        1920
OP_CODE_EORI        17DE
OP_CODE_EXT         18C4
OP_CODE_JMP         1834
OP_CODE_JSR         1820
OP_CODE_LEA         1848
OP_CODE_MOVEM       1862
OP_CODE_MOVEQ       1A60
OP_CODE_MULS        1A74
OP_CODE_MULU        1A88
OP_CODE_NOP         1812
OP_CODE_ORI         1776
OP_CODE_SUB         1950
OP_CODE_SUBI        17AA
OP_CODE_SUBQ        18EC
ORI_MSG             1CE1
PERCENT             1D6C
POUND               1D68
POUND_MSG           25E2
PRINT_ADDRESS       111E
PRINT_ADDRESS_EXIT  1212
PRINT_ADDRESS_LOOP  1178
PRINT_ADR0          1220
PRINT_ADR1          1230
PRINT_ADR2          1240
PRINT_ADR3          1250
PRINT_ADR4          1260
PRINT_ADR5          1270
PRINT_ADR6          1280
PRINT_ADR7          1290
PRINT_ADR8          12A0
PRINT_ADR9          12B0
PRINT_ADRA          12C0
PRINT_ADRB          12D0
PRINT_ADRC          12E0
PRINT_ADRD          12F0
PRINT_ADRE          1300
PRINT_ADRF          1310
PRINT_ASCII0        24C6
PRINT_ASCII1        24D6
PRINT_ASCII2        24E6
PRINT_ASCII3        24F6
PRINT_ASCII4        2506
PRINT_ASCII5        2516
PRINT_ASCII6        2526
PRINT_ASCII7        2536
PRINT_ASCII8        2546
PRINT_ASCII9        2556
PRINT_ASCIIA        2566
PRINT_ASCIIB        2576
PRINT_ASCIIC        2586
PRINT_ASCIID        2596
PRINT_ASCIIE        25A6
PRINT_ASCIIF        25B6
PRINT_BYTE          19E0
PRINT_DELAY         135E
PRINT_LONG          1A04
PRINT_WORD          19F2
REPEAT_MSG          2642
REVERSESRC_EA       1E7E
RIGHT_MEM           1BEC
RIGHT_REG           1B04
ROL_MEM             1C4C
ROL_MSG             1D5C
ROL_REG             1B58
ROR_MEM             1CAC
ROR_MSG             1D60
ROR_REG             1BA0
SAVE_END            109A
SAVE_START          104C
SEPERATOR           25E0
SEVEN_MSG           26EE
SIX_MSG             26EC
SPACE_MSG           26DD
START               1000
START_ADDR_CHECK    1016
START_MSG           1DCD
STA_ADDR            2734
SUBCLASS1_1         25E5
SUBCLASS1_2         25E9
SUBCLASS_CHECK      233C
SUBI_MSG            1CEA
SUBQ_MSG            1CD1
SUB_MSG             1D31
SUCCESS_MSG         2706
TEMP_MSG            25F3
THREE_MSG           26E6
TMP_STR             25F7
TWO_MSG             26E4
WORD_MSG            1D71
WRONG_SIZE          1A16
ZERO_MSG            26E0
