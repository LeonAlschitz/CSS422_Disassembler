00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/13/2021 6:57:11 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; D0 is used to store values that will get compared
00001000                            13      
00001000                            14  START:
00001000                            15  
00001000                            16          ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001000  43F9 00001A78             17          LEA         START_MSG, A1
00001006  103C 000E                 18          MOVE.B      #14, D0    
0000100A  4E4F                      19          TRAP        #15
0000100C                            20          
0000100C  43F9 00001ADF             21          LEA         STA_ADDR, A1
00001012  103C 0002                 22          MOVE.B      #2, D0
00001016  4E4F                      23          TRAP        #15             ; D1 has the length of the address
00001018                            24          
00001018                            25          
00001018  4282                      26          CLR.L       D2
0000101A  4284                      27          CLR.L       D4
0000101C  4287                      28          CLR.L       D7
0000101E  4EB9 00001052             29          JSR         CONVERT_ASCII
00001024  2647                      30          MOVEA.L     D7, A3
00001026                            31          
00001026                            32          
00001026                            33          
00001026                            34          
00001026                            35          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
00001026                            36          
00001026  43F9 00001A92             37          LEA         END_MSG, A1
0000102C  103C 000E                 38          MOVE.B      #14, D0    
00001030  4E4F                      39          TRAP        #15
00001032                            40          
00001032  43F9 00001B07             41          LEA         END_ADDR, A1
00001038  103C 0002                 42          MOVE.B      #2, D0
0000103C  4E4F                      43          TRAP        #15
0000103E                            44          
0000103E  4282                      45          CLR.L       D2
00001040  4284                      46          CLR.L       D4
00001042  4287                      47          CLR.L       D7
00001044  4EB9 00001052             48          JSR         CONVERT_ASCII
0000104A  2847                      49          MOVEA.L     D7, A4
0000104C                            50          
0000104C                            51          
0000104C                            52          ; add loop later that checks if data entered is valid for both messages
0000104C                            53          
0000104C                            54          
0000104C  4EB9 00001296             55          JSR         FILE_LOOP
00001052                            56          
00001052                            57  
00001052                            58  
00001052                            59  
00001052                            60  
00001052                            61  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
00001052  0C01 0000                 62          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001056  6700 0012                 63          BEQ         ASCII_DONE
0000105A                            64      
0000105A  1419                      65          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
0000105C                            66          
0000105C                            67  
0000105C                            68      
0000105C  103C 0039                 69          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
00001060  B400                      70          CMP.B       D0, D2
00001062                            71          
00001062                            72  
00001062  6F00 0008                 73          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
00001066  6000 0018                 74          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
0000106A                            75  
0000106A                            76  ASCII_DONE:
0000106A  4E75                      77          RTS
0000106C                            78  
0000106C                            79  
0000106C                            80  NUM_ASCII:
0000106C  5301                      81          SUBI.B      #$1, D1
0000106E                            82          
0000106E  103C 0030                 83          MOVE.B      #$30, D0
00001072  9400                      84          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
00001074  DE02                      85          ADD.B       D2, D7      ; new ASCII number stored at D7
00001076                            86          
00001076                            87  
00001076  0C01 0000                 88          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000107A  67EE                      89          BEQ         ASCII_DONE
0000107C                            90          
0000107C  E987                      91          ASL.L       #4, D7
0000107E                            92        
0000107E  60D2                      93          BRA         CONVERT_ASCII
00001080                            94          
00001080                            95          
00001080                            96  LET_ASCII:
00001080  5301                      97          SUBI.B      #$1, D1
00001082                            98                 
00001082                            99  
00001082  103C 0037                100          MOVE.B      #$37, D0
00001086  9400                     101          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001088  DE02                     102          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
0000108A                           103                                  ; 46 is used to represent F in Hex. 46 - 37 = F
0000108A                           104          
0000108A  0C01 0000                105          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000108E  67DA                     106          BEQ         ASCII_DONE
00001090                           107          
00001090  E987                     108          ASL.L       #4, D7
00001092                           109          
00001092                           110          
00001092  60BE                     111          BRA         CONVERT_ASCII
00001094                           112  
00001094                           113  PRINT_ADDRESS:
00001094                           114          ; SIMHALT 0000 0000
00001094  4281                     115          CLR.L       D1
00001096  4282                     116          CLR.L       D2
00001098  240B                     117          MOVE.L      A3, D2
0000109A                           118          
0000109A                           119          
0000109A                           120  
0000109A                           121          
0000109A  4EB9 000010BE            122          JSR         FLIP_START
000010A0  2607                     123          MOVE.L      D7, D3
000010A2                           124  
000010A2  4281                     125          CLR.L       D1
000010A4  4282                     126          CLR.L       D2
000010A6  4287                     127          CLR.L       D7
000010A8                           128          
000010A8  123C 0008                129          MOVE.B      #$8, D1
000010AC  6000 0040                130          BRA         PRINT_ADDRESS_LOOP
000010B0                           131  
000010B0  43F9 00001AAB            132          LEA         SPACE_MSG, A1
000010B6  103C 000E                133          MOVE.B      #14, D0    
000010BA  4E4F                     134          TRAP        #15
000010BC                           135          
000010BC  4E75                     136          RTS
000010BE                           137          
000010BE                           138  FLIP_START:        
000010BE  4281                     139          CLR.L       D1
000010C0  4287                     140          CLR.L       D7
000010C2                           141          
000010C2  123C 0008                142          MOVE.B      #$8, D1
000010C6                           143          
000010C6  4EB9 000010CE            144          JSR         FLIP_LOOP
000010CC                           145          
000010CC                           146          
000010CC  4E75                     147          RTS
000010CE                           148          
000010CE                           149  FLIP_LOOP:
000010CE                           150  
000010CE                           151          ; SIMHALT
000010CE                           152          
000010CE  0C01 0000                153          CMPI.B      #$0, D1
000010D2  6700 0018                154          BEQ         FLIP_DONE
000010D6  5301                     155          SUBI.B      #$1, D1
000010D8  E987                     156          ASL.L       #4, D7
000010DA                           157          
000010DA  4285                     158          CLR.L       D5
000010DC                           159          
000010DC  1A02                     160          MOVE.B      D2, D5
000010DE                           161          
000010DE  103C 001C                162          MOVE.B      #28,D0    
000010E2  E1AD                     163          LSL.L       D0, D5     
000010E4  E99D                     164          ROL.L       #4, D5
000010E6                           165          
000010E6  DE05                     166          ADD.B       D5, D7
000010E8                           167          
000010E8                           168          
000010E8  E882                     169          ASR.L       #4, D2
000010EA                           170          
000010EA  60E2                     171          BRA         FLIP_LOOP
000010EC                           172  
000010EC                           173  FLIP_DONE:
000010EC  4E75                     174          RTS
000010EE                           175  
000010EE                           176  
000010EE                           177          
000010EE                           178  
000010EE                           179  PRINT_ADDRESS_LOOP:
000010EE                           180          ; SIMHALT
000010EE                           181          
000010EE  0C01 0000                182          CMPI.B      #$0, D1
000010F2  6700 0094                183          BEQ         PRINT_ADDRESS_EXIT
000010F6                           184          
000010F6                           185          
000010F6  5301                     186          SUBI.B      #$1, D1
000010F8                           187          
000010F8  1403                     188          MOVE.B      D3, D2
000010FA  103C 001C                189          MOVE.B      #28,D0    
000010FE  E1AA                     190          LSL.L       D0,D2     
00001100  E99A                     191          ROL.L       #4,D2 
00001102                           192          
00001102                           193          
00001102  E883                     194          ASR.L       #4, D3
00001104                           195          
00001104                           196          
00001104  B43C 0000                197          CMP.B       #0,D2
00001108  6700 008C                198          BEQ         PRINT_ADR0
0000110C  B43C 0001                199          CMP.B       #1,D2
00001110  6700 0094                200          BEQ         PRINT_ADR1
00001114  B43C 0002                201          CMP.B       #2,D2
00001118  6700 009C                202          BEQ         PRINT_ADR2
0000111C  B43C 0003                203          CMP.B       #3,D2
00001120  6700 00A4                204          BEQ         PRINT_ADR3
00001124  B43C 0004                205          CMP.B       #4,D2
00001128  6700 00AC                206          BEQ         PRINT_ADR4
0000112C  B43C 0005                207          CMP.B       #5,D2
00001130  6700 00B4                208          BEQ         PRINT_ADR5
00001134  B43C 0006                209          CMP.B       #6,D2
00001138  6700 00BC                210          BEQ         PRINT_ADR6
0000113C  B43C 0007                211          CMP.B       #7,D2
00001140  6700 00C4                212          BEQ         PRINT_ADR7
00001144  B43C 0008                213          CMP.B       #8,D2
00001148  6700 00CC                214          BEQ         PRINT_ADR8
0000114C  B43C 0009                215          CMP.B       #9,D2
00001150  6700 00D4                216          BEQ         PRINT_ADR9
00001154  B43C 000A                217          CMP.B       #$A,D2
00001158  6700 00DC                218          BEQ         PRINT_ADRA
0000115C  B43C 000B                219          CMP.B       #$B,D2
00001160  6700 00E4                220          BEQ         PRINT_ADRB
00001164  B43C 000C                221          CMP.B       #$C,D2
00001168  6700 00EC                222          BEQ         PRINT_ADRC
0000116C  B43C 000D                223          CMP.B       #$D,D2
00001170  6700 00F4                224          BEQ         PRINT_ADRD
00001174  B43C 000E                225          CMP.B       #$E,D2
00001178  6700 00FC                226          BEQ         PRINT_ADRE
0000117C  B43C 000F                227          CMP.B       #$F,D2
00001180  6700 0104                228          BEQ         PRINT_ADRF
00001184                           229  
00001184                           230  
00001184                           231  
00001184  6000 FF68                232          BRA         PRINT_ADDRESS_LOOP
00001188                           233          
00001188                           234  
00001188                           235          
00001188                           236  
00001188                           237  PRINT_ADDRESS_EXIT:
00001188  43F9 00001AAB            238          LEA         SPACE_MSG, A1
0000118E  103C 000E                239          MOVE.B      #14, D0    
00001192  4E4F                     240          TRAP        #15
00001194                           241          
00001194  4E75                     242          RTS
00001196                           243          
00001196                           244  PRINT_ADR0:
00001196  43F9 00001AAE            245          LEA         ZERO_MSG, A1
0000119C  103C 000E                246          MOVE.B      #14, D0    
000011A0  4E4F                     247          TRAP        #15
000011A2  6000 FF4A                248          BRA         PRINT_ADDRESS_LOOP
000011A6                           249  PRINT_ADR1:
000011A6  43F9 00001AB0            250          LEA         ONE_MSG, A1
000011AC  103C 000E                251          MOVE.B      #14, D0    
000011B0  4E4F                     252          TRAP        #15
000011B2  6000 FF3A                253          BRA         PRINT_ADDRESS_LOOP
000011B6                           254  PRINT_ADR2:
000011B6  43F9 00001AB2            255          LEA         TWO_MSG, A1
000011BC  103C 000E                256          MOVE.B      #14, D0    
000011C0  4E4F                     257          TRAP        #15
000011C2  6000 FF2A                258          BRA         PRINT_ADDRESS_LOOP
000011C6                           259  PRINT_ADR3:
000011C6  43F9 00001AB4            260          LEA         THREE_MSG, A1
000011CC  103C 000E                261          MOVE.B      #14, D0    
000011D0  4E4F                     262          TRAP        #15
000011D2  6000 FF1A                263          BRA         PRINT_ADDRESS_LOOP
000011D6                           264  PRINT_ADR4:
000011D6  43F9 00001AB6            265          LEA         FOUR_MSG, A1
000011DC  103C 000E                266          MOVE.B      #14, D0    
000011E0  4E4F                     267          TRAP        #15
000011E2  6000 FF0A                268          BRA         PRINT_ADDRESS_LOOP
000011E6                           269  PRINT_ADR5:
000011E6  43F9 00001AB8            270          LEA         FIVE_MSG, A1
000011EC  103C 000E                271          MOVE.B      #14, D0    
000011F0  4E4F                     272          TRAP        #15
000011F2  6000 FEFA                273          BRA         PRINT_ADDRESS_LOOP
000011F6                           274  PRINT_ADR6:
000011F6  43F9 00001ABA            275          LEA         SIX_MSG, A1
000011FC  103C 000E                276          MOVE.B      #14, D0    
00001200  4E4F                     277          TRAP        #15
00001202  6000 FEEA                278          BRA         PRINT_ADDRESS_LOOP
00001206                           279  PRINT_ADR7:
00001206  43F9 00001ABC            280          LEA         SEVEN_MSG, A1
0000120C  103C 000E                281          MOVE.B      #14, D0    
00001210  4E4F                     282          TRAP        #15
00001212  6000 FEDA                283          BRA         PRINT_ADDRESS_LOOP
00001216                           284  PRINT_ADR8:
00001216  43F9 00001ABE            285          LEA         EIGHT_MSG, A1
0000121C  103C 000E                286          MOVE.B      #14, D0    
00001220  4E4F                     287          TRAP        #15
00001222  6000 FECA                288          BRA         PRINT_ADDRESS_LOOP
00001226                           289  PRINT_ADR9:
00001226  43F9 00001AC0            290          LEA         NINE_MSG, A1
0000122C  103C 000E                291          MOVE.B      #14, D0    
00001230  4E4F                     292          TRAP        #15
00001232  6000 FEBA                293          BRA         PRINT_ADDRESS_LOOP
00001236                           294  PRINT_ADRA:
00001236  43F9 00001AC2            295          LEA         A_MSG, A1
0000123C  103C 000E                296          MOVE.B      #14, D0    
00001240  4E4F                     297          TRAP        #15
00001242  6000 FEAA                298          BRA         PRINT_ADDRESS_LOOP
00001246                           299  PRINT_ADRB:
00001246  43F9 00001AC4            300          LEA         B_MSG, A1
0000124C  103C 000E                301          MOVE.B      #14, D0    
00001250  4E4F                     302          TRAP        #15
00001252  6000 FE9A                303          BRA         PRINT_ADDRESS_LOOP
00001256                           304  PRINT_ADRC:
00001256  43F9 00001AC6            305          LEA         C_MSG, A1
0000125C  103C 000E                306          MOVE.B      #14, D0    
00001260  4E4F                     307          TRAP        #15
00001262  6000 FE8A                308          BRA         PRINT_ADDRESS_LOOP
00001266                           309  PRINT_ADRD:
00001266  43F9 00001AC8            310          LEA         D_MSG, A1
0000126C  103C 000E                311          MOVE.B      #14, D0    
00001270  4E4F                     312          TRAP        #15
00001272  6000 FE7A                313          BRA         PRINT_ADDRESS_LOOP
00001276                           314  PRINT_ADRE:
00001276  43F9 00001ACA            315          LEA         E_MSG, A1
0000127C  103C 000E                316          MOVE.B      #14, D0    
00001280  4E4F                     317          TRAP        #15
00001282  6000 FE6A                318          BRA         PRINT_ADDRESS_LOOP
00001286                           319  PRINT_ADRF:
00001286  43F9 00001ACC            320          LEA         F_MSG, A1
0000128C  103C 000E                321          MOVE.B      #14, D0    
00001290  4E4F                     322          TRAP        #15
00001292  6000 FE5A                323          BRA         PRINT_ADDRESS_LOOP
00001296                           324  
00001296                           325  
00001296                           326  FILE_LOOP:
00001296  4280                     327          CLR.L       D0
00001298  4281                     328          CLR.L       D1
0000129A  4282                     329          CLR.L       D2
0000129C  4283                     330          CLR.L       D3
0000129E  4284                     331          CLR.L       D4
000012A0  4285                     332          CLR.L       D5
000012A2  4286                     333          CLR.L       D6
000012A4  4287                     334          CLR.L       D7
000012A6                           335          
000012A6                           336  
000012A6                           337  
000012A6                           338  
000012A6                           339          ;       Add branch here that will take the current address in A3
000012A6                           340          ;       Turn it into characters and print it to the screen with space
000012A6  4EB8 1094                341          JSR         PRINT_ADDRESS
000012AA                           342          
000012AA                           343          
000012AA  381B                     344          MOVE.W      (A3)+, D4
000012AC                           345          ; SIMHALT
000012AC  4EB9 000012D0            346          JSR         JUMP_OP_CODE
000012B2                           347          
000012B2  43F9 00001ADC            348          LEA         NEW_LINE, A1
000012B8  103C 000E                349          MOVE.B      #14, D0
000012BC  4E4F                     350          TRAP        #15
000012BE                           351  
000012BE                           352  
000012BE  B9CB                     353          CMP.L      A3, A4
000012C0                           354          ;       If our pointer is at the end or beyond, BRA to DONE
000012C0                           355          ; SIMHALT
000012C0                           356          
000012C0                           357          
000012C0                           358          
000012C0  6700 0008                359          BEQ         DONE
000012C4  6F00 0004                360          BLE         DONE       
000012C8  60CC                     361          BRA         FILE_LOOP
000012CA                           362  
000012CA                           363  
000012CA                           364  
000012CA                           365  
000012CA                           366  
000012CA                           367  DONE:   
000012CA  103C 0009                368          MOVE.B      #9, D0
000012CE  4E4F                     369          TRAP        #15
000012D0                           370          
000012D0                           371          
000012D0                           372          
000012D0                           373  * Put variables and constants here
000012D0                           374                  INCLUDE     'Disassembler_OP_Codes.x68'
000012D0                           375  
000012D0                           376  
000012D0                           377  
000012D0                           378  ; D4 Contains Original hex code
000012D0                           379  ; D3 Contains modified hex code
000012D0                           380  
000012D0                           381  ; D1 is used to bit shift
000012D0                           382  
000012D0                           383  
000012D0                           384  ; D4 = XXXX YYYY YYYY YYYY
000012D0                           385  JUMP_OP_CODE:
000012D0                           386          ; SIMHALT
000012D0  4283                     387          CLR.L       D3
000012D2  2604                     388          MOVE.L      D4, D3
000012D4  4281                     389          CLR.L       D1
000012D6  4282                     390          CLR.L       D2
000012D8  123C 000C                391          MOVE.B      #12, D1
000012DC  E26B                     392          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000012DE                           393  
000012DE                           394  
000012DE  B63C 0000                395          CMP.B       #$0, D3
000012E2  6700 004E                396          BEQ         JUMP_0 
000012E6  B63C 0001                397          CMP.B       #$1, D3
000012EA  6700 0058                398          BEQ         JUMP_1 
000012EE  B63C 0002                399          CMP.B       #$2, D3
000012F2  6700 005E                400          BEQ         JUMP_2
000012F6  B63C 0003                401          CMP.B       #$3, D3
000012FA  6700 006E                402          BEQ         JUMP_3
000012FE  B63C 0004                403          CMP.B       #$4, D3
00001302  6700 0090                404          BEQ         JUMP_4
00001306  B63C 0005                405          CMP.B       #$5, D3
0000130A  6700 00BA                406          BEQ         JUMP_5
0000130E  B63C 0006                407          CMP.B       #$6, D3
00001312  6700 00C4                408          BEQ         JUMP_6
00001316  B63C 0007                409          CMP.B       #$7, D3
0000131A  6700 00C2                410          BEQ         JUMP_7
0000131E  B63C 0008                411          CMP.B       #$8, D3
00001322  6700 00C0                412          BEQ         JUMP_8
00001326  B63C 0009                413          CMP.B       #$9, D3
0000132A  6700 00BE                414          BEQ         JUMP_9
0000132E                           415  
0000132E  6000 00E4                416          BRA         JUMP_ERROR
00001332                           417  
00001332                           418  
00001332                           419  
00001332                           420  
00001332                           421         
00001332                           422          
00001332                           423  JUMP_0:
00001332                           424          *ORI
00001332  4EB9 000014B4            425          JSR         Bits11to8
00001338  B43C 0000                426          CMP.B       #$0, D2  
0000133C  6700 023C                427          BEQ         OP_CODE_ORI
00001340                           428          
00001340  6000 00E0                429          BRA         INVALID_INSTR
00001344                           430          
00001344                           431  JUMP_1:
00001344                           432  
00001344  4EB9 000014CC            433          JSR         OP_CODE_BASE_MOVE
0000134A  4EB9 00001688            434          JSR         EA_MOVE 
00001350  4E75                     435          RTS
00001352                           436  
00001352                           437  
00001352                           438  JUMP_2:
00001352                           439  
00001352  4EB9 00001490            440          JSR         Bits8to6
00001358  B43C 0001                441          CMP.B       #$1, D2 
0000135C  6700 018C                442          BEQ         J_MOVEA_L 
00001360  6600 01AC                443          BNE         J_MOVE_L
00001364                           444  
00001364                           445  
00001364  6000 00BC                446          BRA         INVALID_INSTR
00001368  4E75                     447          RTS
0000136A                           448          
0000136A                           449  JUMP_3:
0000136A                           450  
0000136A  4EB9 00001490            451          JSR         Bits8to6
00001370  0C02 0001                452          CMPI.B       #$1, D2 
00001374  6700 01BC                453          BEQ         J_MOVEA_W
00001378  6600 01DC                454          BNE         J_MOVE_W
0000137C                           455          
0000137C                           456          
0000137C                           457          
0000137C  6000 00A4                458          BRA INVALID_INSTR
00001380                           459          
00001380  4E75                     460          RTS
00001382                           461  MOVEM_CHECK:
00001382  4282                     462          CLR.L       D2
00001384  2404                     463          MOVE.L      D4, D2
00001386  0802 000B                464          BTST        #11,D2 ;
0000138A  6600 022A                465          BNE         OP_CODE_MOVEM
0000138E  4EF9 00001422            466          JMP         INVALID_INSTR
00001394                           467          
00001394                           468  JUMP_4:
00001394                           469  
00001394  4282                     470          CLR.L       D2
00001396  3404                     471          MOVE.W      D4, D2
00001398  B67C 4E71                472          CMP.W       #$4E71, D3 ;NOP 
0000139C  6700 01EA                473          BEQ         OP_CODE_NOP
000013A0                           474          
000013A0  4EB9 0000146C            475          JSR         Bits7to6     ;
000013A6  0C02 0002                476          CMPI.B      #2, D2
000013AA  6700 01EA                477          BEQ         OP_CODE_JSR ;JSR
000013AE  4EF8 1382                478          JMP         MOVEM_CHECK ;
000013B2                           479          
000013B2  4EB9 00001490            480          JSR         Bits8to6     ;
000013B8  0C02 0007                481          CMPI.B      #7, D2
000013BC  6700 01E6                482          BEQ         OP_CODE_LEA ;LEA
000013C0                           483          
000013C0                           484          
000013C0  6000 0060                485          BRA INVALID_INSTR
000013C4                           486          
000013C4  4E75                     487          RTS  
000013C6                           488  
000013C6                           489  
000013C6                           490  
000013C6                           491  JUMP_5:
000013C6  4282                     492          CLR.L       D2
000013C8  2404                     493          MOVE.L      D4, D2
000013CA  0802 0008                494          BTST        #8,D2 
000013CE  6700 0218                495          BEQ         OP_CODE_ADDQ  
000013D2  6000 004E                496          BRA         INVALID_INSTR
000013D6  4E75                     497          RTS  
000013D8                           498          
000013D8                           499  JUMP_6:
000013D8                           500  
000013D8  6000 0048                501          BRA         INVALID_INSTR
000013DC  4E75                     502          RTS  
000013DE                           503  JUMP_7:
000013DE  6000 0042                504          BRA         INVALID_INSTR 
000013E2  4E75                     505          RTS
000013E4                           506  JUMP_8:
000013E4  6000 003C                507          BRA         INVALID_INSTR
000013E8  4E75                     508          RTS
000013EA                           509  
000013EA                           510  JUMP_9:
000013EA  6000 0036                511          BRA         INVALID_INSTR
000013EE  4E75                     512          RTS         
000013F0                           513  
000013F0                           514  JUMP_A:
000013F0  6000 0030                515          BRA         INVALID_INSTR
000013F4  4E75                     516          RTS 
000013F6                           517  JUMP_B:
000013F6  6000 002A                518          BRA         INVALID_INSTR
000013FA  4E75                     519          RTS         
000013FC                           520  
000013FC                           521  JUMP_C:
000013FC  6000 0024                522          BRA         INVALID_INSTR
00001400  4E75                     523          RTS 
00001402                           524  
00001402                           525  JUMP_D:
00001402  6000 001E                526          BRA         INVALID_INSTR
00001406  4E75                     527          RTS 
00001408                           528   
00001408                           529  JUMP_E:
00001408  4EB9 0000146C            530          JSR         Bits7to6
0000140E                           531          
0000140E  6000 0012                532          BRA         INVALID_INSTR
00001412  4E75                     533          RTS  
00001414                           534           
00001414                           535  JUMP_ERROR:       
00001414  43F9 00001678            536          LEA         ERROR_INSTR, A1
0000141A  103C 000E                537          MOVE.B      #14, D0
0000141E  4E4F                     538          TRAP        #15
00001420                           539  
00001420  4E75                     540          RTS
00001422                           541  
00001422                           542  INVALID_INSTR:
00001422  43F9 00001660            543          LEA         IMPLEMENT_MSG, A1
00001428  103C 000E                544          MOVE.B      #14, D0
0000142C  4E4F                     545          TRAP        #15
0000142E  4E75                     546          RTS
00001430                           547  
00001430                           548  
00001430                           549  Bits2to0:
00001430  3404                     550          MOVE.W      D4, D2
00001432  103C 000D                551          MOVE.B      #13, D0     ; Shifting 13 bits
00001436  E16A                     552          LSL.W       D0, D2      ; shorten to two bits
00001438  E06A                     553          LSR.W       D0, D2      ; isolate two bits
0000143A  4E75                     554          RTS
0000143C                           555      
0000143C                           556  Bits3to0:
0000143C  3404                     557          MOVE.W      D4, D2
0000143E  103C 000C                558          MOVE.B      #12, D0     ; Shift 12 bits
00001442  E16A                     559          LSL.W       D0, D2      ; Shorten to 4th bit
00001444  E06A                     560          LSR.W       D0, D2      ; Isolate 4 bits
00001446  4E75                     561          RTS
00001448                           562      
00001448                           563  Bits5to3:
00001448  3404                     564          MOVE.W      D4, D2
0000144A  103C 000A                565          MOVE.B      #10, D0     ; Shift 10 bits
0000144E  E16A                     566          LSL.W       D0, D2      ; cut to 5th bit
00001450  103C 000D                567          MOVE.B      #13, D0     ; Shift 13 bits
00001454  E06A                     568          LSR.W       D0, D2      ; Isolate bits 5-3
00001456  4E75                     569          RTS
00001458                           570  
00001458                           571  Bits7to0:
00001458  3404                     572          MOVE.W      D4, D2
0000145A  E14A                     573          LSL.W       #8, D2      ; cut to 8th bit
0000145C  E04A                     574          LSR.W       #8, D2      ; Isolate 7-0
0000145E  4E75                     575          RTS
00001460                           576  Bits7to4: 
00001460  3404                     577          MOVE.W      D4, D2
00001462  E14A                     578          LSL.W       #8, D2      ; cut to 8th bit
00001464  103C 000C                579          MOVE.B      #12, D0     ; shift 12 bits
00001468  E06A                     580          LSR.W       D0, D2      ; isolate 7-4
0000146A  4E75                     581          RTS
0000146C                           582      
0000146C                           583  Bits7to6:
0000146C  3404                     584          MOVE.W      D4, D2
0000146E  E14A                     585          LSL.W       #8, D2      ; cut to 8th bit
00001470  103C 000E                586          MOVE.B      #14, D0     ; shift 14 bits
00001474  E06A                     587          LSR.W       D0, D2      ; isolate 7-6
00001476  4E75                     588          RTS
00001478                           589      
00001478                           590  Bits8to3:
00001478  3404                     591          MOVE.W      D4, D2
0000147A  EF4A                     592          LSL.W       #7, D2      ; cut to 9th bit
0000147C  103C 000A                593          MOVE.B      #10, D0     ; shift 10 bits
00001480  E06A                     594          LSR.W       D0, D2      ; isolate 8-3
00001482  4E75                     595          RTS
00001484                           596      
00001484                           597  Bits8to4:
00001484  3404                     598          MOVE.W      D4, D2
00001486  EF4A                     599          LSL.W       #7, D2      ; cut to 9th bit
00001488  103C 000B                600          MOVE.B      #11, D0     ; shift 11 bits
0000148C  E06A                     601          LSR.W       D0, D2      ; isolate 8-4
0000148E  4E75                     602          RTS
00001490                           603      
00001490                           604  Bits8to6:
00001490  3404                     605          MOVE.W      D4, D2
00001492  EF4A                     606          LSL.W       #7, D2      ; cut to 9th bit
00001494  103C 000D                607          MOVE.B      #13, D0     ; shift 13 bits
00001498  E06A                     608          LSR.W       D0, D2      ; isolate 8-6
0000149A  4E75                     609          RTS
0000149C                           610  Bits9to7:
0000149C  3404                     611          MOVE.W      D4, D2
0000149E  ED4A                     612          LSL.W       #6, D2      ; cut to 10th bit
000014A0  103C 000D                613          MOVE.B      #13, D0     ; shift 13 bits
000014A4  E06A                     614          LSR.W       D0, D2      ; isolate 8-6
000014A6  4E75                     615          RTS
000014A8                           616  Bits11to6:
000014A8  3404                     617          MOVE.W      D4, D2
000014AA  E94A                     618          LSL.W       #4, D2      ; cut to 12th bit
000014AC  103C 000A                619          MOVE.B      #10, D0     ; shift 10 bits
000014B0  E06A                     620          LSR.W       D0, D2      ; isolate 11-6
000014B2  4E75                     621          RTS
000014B4                           622  
000014B4                           623       
000014B4                           624  Bits11to8:
000014B4  3404                     625          MOVE.W      D4, D2
000014B6  E94A                     626          LSL.W       #4, D2      ; cut to 12th bit
000014B8  103C 000C                627          MOVE.B      #12, D0     ; shift 12 bits
000014BC  E06A                     628          LSR.W       D0, D2      ; isolate 11-8
000014BE  4E75                     629          RTS
000014C0                           630  
000014C0                           631  Bits11to9:
000014C0  3404                     632          MOVE.W      D4, D2
000014C2  E94A                     633          LSL.W       #4, D2      ; cut to 12th bit
000014C4  103C 000D                634          MOVE.B      #13, D0     ; shift 13 bits
000014C8  E06A                     635          LSR.W       D0, D2      ; isolate 11-9
000014CA  4E75                     636          RTS
000014CC                           637  
000014CC                           638  
000014CC                           639  OP_CODE_BASE_MOVE:
000014CC                           640          ; This should only execute for Move.B
000014CC  43F9 000015FB            641          LEA         MOVE_MSG, A1
000014D2  103C 000E                642          MOVE.B      #14, D0
000014D6  4E4F                     643          TRAP        #15
000014D8  43F9 00001657            644          LEA         BYTE_MSG, A1
000014DE  103C 000E                645          MOVE.B      #14, D0
000014E2  4E4F                     646          TRAP        #15
000014E4                           647          
000014E4  163C 0000                648          MOVE.B      #0, D3
000014E8                           649          
000014E8                           650          
000014E8                           651          
000014E8  4E75                     652          RTS         
000014EA                           653  
000014EA                           654  J_MOVEA_L:
000014EA  43F9 00001600            655          LEA         MOVEA_MSG, A1
000014F0  103C 000E                656          MOVE.B      #14, D0
000014F4  4E4F                     657          TRAP        #15
000014F6  43F9 0000165D            658          LEA         LONG_MSG, A1
000014FC  103C 000E                659          MOVE.B      #14, D0
00001500  4E4F                     660          TRAP        #15
00001502                           661          
00001502  163C 0002                662          MOVE.B      #2, D3
00001506  4EB9 00001688            663          JSR         EA_MOVE
0000150C  4E75                     664          RTS    
0000150E                           665  J_MOVE_L:
0000150E  43F9 000015FB            666          LEA         MOVE_MSG, A1
00001514  103C 000E                667          MOVE.B      #14, D0
00001518  4E4F                     668          TRAP        #15
0000151A  43F9 0000165D            669          LEA         LONG_MSG, A1
00001520  103C 000E                670          MOVE.B      #14, D0
00001524  4E4F                     671          TRAP        #15
00001526                           672          
00001526  163C 0002                673          MOVE.B      #2, D3
0000152A  4EB9 00001688            674          JSR         EA_MOVE
00001530                           675          
00001530  4E75                     676          RTS
00001532                           677  
00001532                           678  
00001532                           679  
00001532                           680  J_MOVEA_W:
00001532  43F9 00001600            681          LEA         MOVEA_MSG, A1
00001538  103C 000E                682          MOVE.B      #14, D0
0000153C  4E4F                     683          TRAP        #15
0000153E  43F9 0000165A            684          LEA         WORD_MSG, A1
00001544  103C 000E                685          MOVE.B      #14, D0
00001548  4E4F                     686          TRAP        #15
0000154A                           687          
0000154A  163C 0001                688          MOVE.B      #1, D3
0000154E  4EB9 00001688            689          JSR         EA_MOVE
00001554                           690          
00001554  4E75                     691          RTS  
00001556                           692      
00001556                           693  J_MOVE_W:
00001556  43F9 000015FB            694          LEA         MOVE_MSG, A1
0000155C  103C 000E                695          MOVE.B      #14, D0
00001560  4E4F                     696          TRAP        #15
00001562  43F9 0000165A            697          LEA         WORD_MSG, A1
00001568  103C 000E                698          MOVE.B      #14, D0
0000156C  4E4F                     699          TRAP        #15
0000156E                           700          
0000156E  163C 0001                701          MOVE.B      #1, D3
00001572  4EB9 00001688            702          JSR         EA_MOVE
00001578                           703          
00001578  4E75                     704          RTS  
0000157A                           705      
0000157A                           706  OP_CODE_ORI:
0000157A  43F9 00001606            707          LEA         ORI_MSG, A1
00001580  103C 000E                708          MOVE.B      #14, D0
00001584  4E4F                     709          TRAP        #15
00001586                           710  
00001586  4E75                     711          RTS
00001588                           712  
00001588                           713  
00001588                           714  OP_CODE_NOP:
00001588  43F9 0000160A            715          LEA         NOP_MSG, A1
0000158E  103C 000E                716          MOVE.B      #14, D0
00001592  4E4F                     717          TRAP        #15
00001594                           718  
00001594  4E75                     719          RTS
00001596                           720             
00001596                           721  
00001596                           722  OP_CODE_JSR:
00001596  43F9 00001618            723          LEA         JSR_MSG, A1
0000159C  103C 000E                724          MOVE.B      #14, D0
000015A0  4E4F                     725          TRAP        #15
000015A2                           726          
000015A2                           727          *STORE DEST AND STORE IN REGISTER
000015A2                           728          *EA
000015A2                           729  
000015A2  4E75                     730          RTS
000015A4                           731          
000015A4                           732  OP_CODE_LEA:
000015A4  43F9 00001614            733          LEA         LEA_MSG, A1
000015AA  103C 000E                734          MOVE.B      #14, D0
000015AE  4E4F                     735          TRAP        #15
000015B0  103C 0002                736          MOVE.B      #2, D0
000015B4                           737  
000015B4                           738          *EA
000015B4                           739          *JSR         EA_LEA
000015B4                           740  
000015B4  4E75                     741          RTS
000015B6                           742  
000015B6                           743  OP_CODE_MOVEM:
000015B6  4EB8 149C                744          JSR         Bits9to7 ;check for MOVEM and EXT
000015BA  B43C 0001                745          CMP.B       #1, D2   ;
000015BE                           746          
000015BE                           747  MOVEM_OR_EXT:
000015BE  4EB8 1448                748          JSR         Bits5to3  ;
000015C2  B43C 0000                749          CMP.B       #0, D2    ;
000015C6  6700 0008                750          BEQ         OP_CODE_EXT ;
000015CA                           751          
000015CA  3404                     752          MOVE.W      D4, D2
000015CC  0802 000A                753          BTST        #10, D2
000015D0                           754   
000015D0                           755  OP_CODE_EXT:
000015D0  43F9 0000164D            756          LEA         EXT_MSG, A1
000015D6  103C 000E                757          MOVE.B      #14, D0
000015DA  4E4F                     758          TRAP        #15
000015DC                           759                 
000015DC                           760          
000015DC                           761  MOVEM_DISPLAY:
000015DC  43F9 0000160E            762          LEA         MOVEM_MSG, A1
000015E2  103C 000E                763          MOVE.B      #14, D0
000015E6  4E4F                     764          TRAP        #15
000015E8                           765  
000015E8                           766  OP_CODE_ADDQ:
000015E8  43F9 000015F6            767          LEA         ADDQ_MSG, A1
000015EE  103C 000E                768          MOVE.B      #14, D0
000015F2  4E4F                     769          TRAP        #15
000015F4                           770          
000015F4  4E75                     771          RTS
000015F6                           772          ;JSR         Bits7to6  
000015F6                           773          ;MOVE        #5, TAB
000015F6                           774          ;JSR         SizeTwoBits 
000015F6                           775   *EA STUFF, MAYBE CHECK FOR DISPLACEMENT COUNT?
000015F6                           776  
000015F6                           777  
000015F6                           778  
000015F6                           779  
000015F6= 41 44 44 51 00           780  ADDQ_MSG:       DC.B        'ADDQ',0
000015FB= 4D 4F 56 45 00           781  MOVE_MSG:       DC.B        'MOVE',0
00001600= 4D 4F 56 45 41 00        782  MOVEA_MSG:      DC.B        'MOVEA',0
00001606= 4F 52 49 00              783  ORI_MSG:        DC.B        'ORI',0
0000160A= 4E 4F 50 00              784  NOP_MSG:        DC.B        'NOP',0
0000160E= 4D 4F 56 45 4D 00        785  MOVEM_MSG:      DC.B        'MOVEM',0
00001614= 4C 45 41 00              786  LEA_MSG:        DC.B        'LEA',0
00001618= 4A 53 52 00              787  JSR_MSG:        DC.B        'JSR',0
0000161C= 42 52 41 00              788  BRA_MSG:        DC.B        'BRA',0
00001620= 42 53 52 00              789  BSR_MSG:        DC.B        'BSR',0
00001624= 4D 4F 56 45 51 00        790  MOVEQ_MSG:      DC.B        'MOVEQ',0
0000162A= 44 49 56 55 00           791  DIVU_MSG:       DC.B        'DIVU',0
0000162F= 53 55 42 00              792  SUB_MSG:        DC.B        'SUB',0
00001633= 43 4D 50 00              793  CMP_MSG:        DC.B        'CMP',0
00001637= 4D 55 4C 55 00           794  MULU_MSG:       DC.B        'MULU',0
0000163C= 41 44 44 00              795  ADD_MSG:        DC.B        'ADD',0
00001640= 41 44 44 41 00           796  ADDA_MSG:       DC.B        'ADDA',0
00001645= 41 53 4C 00              797  ASL_MSG:        DC.B        'ASL',0
00001649= 41 53 52 00              798  ASR_MSG:        DC.B        'ASR',0
0000164D= 45 58 54 00              799  EXT_MSG:        DC.B        'EXT',0
00001651= 23 00                    800  POUND:          DC.B        '#',0
00001653= 24 00                    801  DOLLAR:         DC.B        '$',0
00001655= 25 00                    802  PERCENT:        DC.B        '%',0
00001657                           803  
00001657                           804  ; Size messages
00001657                           805  
00001657= 2E 42 00                 806  BYTE_MSG:       DC.B        '.B',0
0000165A= 2E 57 00                 807  WORD_MSG:       DC.B        '.W',0
0000165D= 2E 4C 00                 808  LONG_MSG:       DC.B        '.L',0
00001660= 4F 50 2D 43 4F 44 ...    809  IMPLEMENT_MSG:  DC.B        'OP-CODE NOT IMPLEMENTED',0
00001678= 49 4E 56 41 4C 49 ...    810  ERROR_INSTR:    DC.B  'INVALID OP-CODE',0
00001688                           811  
00001688                           812  
00001688                           813  
00001688                           814  
00001688                           815  
00001688                           816  
00001688                           817  
00001688                           818  
00001688                           819  
00001688                           820  
00001688                           821  
00001688                           822  
00001688                           823  
00001688                           824  
00001688                           825  
00001688                           826  
00001688                           827  
00001688                           828  
00001688                           829  
00001688                           830  
00001688                           831  
00001688                           832  
00001688                           833  -------------------- end include --------------------
00001688                           834                
00001688                           835                  INCLUDE     'Disassembler_EA_Codes.x68'
00001688                           836  
00001688                           837  
00001688                           838  ; D3 = OP size. ie. Byte, Word, Long
00001688                           839  ; D4 = Original hex code
00001688                           840  ; D5 = Current Mode being isolated
00001688                           841  ; D6 = Current Register being isolated
00001688                           842  
00001688                           843  ; A3 will store starting address
00001688                           844  ; A4 will store ending address
00001688                           845  
00001688                           846  
00001688                           847  
00001688                           848  ; based on the size of the move operation Print out an amount of data as is.
00001688                           849  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001688                           850  EA_MOVE:
00001688                           851          
00001688                           852  ; A = Size
00001688                           853  ; B = Destination Register
00001688                           854  ; C = Destination Mode
00001688                           855  ; D = Source Mode
00001688                           856  ; E = Source Register
00001688                           857  
00001688                           858  ; 00AA BBBC CCDD DEEE 
00001688                           859          ;SIMHALT
00001688  4281                     860          CLR.L       D1
0000168A  4285                     861          CLR.L       D5
0000168C  4286                     862          CLR.L       D6
0000168E                           863          
0000168E  3A04                     864          MOVE.W      D4, D5
00001690  3C04                     865          MOVE.W      D4, D6
00001692                           866          
00001692                           867          
00001692  123C 000A                868          MOVE.B      #10,D1
00001696  E36D                     869          LSL.W       D1,D5       
00001698  123C 000D                870          MOVE.B      #13,D1
0000169C  E26D                     871          LSR.W       D1,D5
0000169E                           872          ; 0000 0000 00DD D000
0000169E                           873          ; Isolating Source Mode
0000169E                           874          
0000169E                           875          
0000169E  E36E                     876          LSL.W       D1,D6
000016A0  E26E                     877          LSR.W       D1,D6
000016A2                           878          ; 0000 0000 0000 0EEE
000016A2                           879          ; Isolating Source Register 
000016A2                           880         
000016A2  4EB9 000016EC            881          JSR         MODE_TABLE
000016A8                           882          
000016A8                           883          ; Print Out ", "
000016A8  43F9 00001A48            884          LEA         SEPERATOR, A1
000016AE  103C 000E                885          MOVE.B      #14, D0
000016B2  4E4F                     886          TRAP        #15
000016B4                           887          ;SIMHALT
000016B4  4285                     888          CLR.L       D5
000016B6  4286                     889          CLR.L       D6
000016B8  3A04                     890          MOVE.W      D4, D5
000016BA  3C04                     891          MOVE.W      D4, D6
000016BC                           892          
000016BC  123C 0007                893          MOVE.B      #7,D1     
000016C0  E36D                     894          LSL.W       D1,D5       
000016C2  123C 000D                895          MOVE.B      #13,D1
000016C6  E26D                     896          LSR.W       D1,D5
000016C8                           897          ; 0000 000C CC00 0000
000016C8                           898          ; Isolating Destination Mode  
000016C8                           899              
000016C8  E94E                     900          LSL.W       #4,D6  
000016CA  E26E                     901          LSR.W       D1,D6
000016CC                           902          ; 0000 BBB0 0000 0000
000016CC                           903          ; Isolating Destination Register
000016CC                           904          
000016CC  4EB9 000016EC            905          JSR         MODE_TABLE
000016D2                           906  
000016D2                           907  
000016D2  4E75                     908          RTS
000016D4                           909          
000016D4                           910          
000016D4                           911  ; X+Y = Effective addressing
000016D4                           912  ; XXX = Mode
000016D4                           913  ; YYY = Register
000016D4                           914      
000016D4                           915  ; 0000 0000 00XX XYYY
000016D4                           916  EA_LEA:
000016D4  4281                     917          CLR.L       D1
000016D6  4285                     918          CLR.L       D5
000016D8  4286                     919          CLR.L       D6
000016DA                           920  
000016DA  3A04                     921          MOVE.W      D4, D5
000016DC  3C04                     922          MOVE.W      D4, D6
000016DE                           923  
000016DE                           924  
000016DE                           925          ; Print Out ", "
000016DE  43F9 00001A48            926          LEA         SEPERATOR, A1
000016E4  103C 000E                927          MOVE.B      #14, D0
000016E8  4E4F                     928          TRAP        #15
000016EA                           929  
000016EA                           930  
000016EA  4E75                     931          RTS
000016EC                           932  
000016EC                           933  
000016EC                           934  
000016EC                           935  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
000016EC                           936  MODE_TABLE:
000016EC                           937  
000016EC  BA3C 0000                938          CMP.B       #0,D5
000016F0  6700 0048                939          BEQ         J_TBL_D
000016F4  BA3C 0001                940          CMP.B       #1,D5
000016F8  6700 002C                941          BEQ         J_TBL_A
000016FC  BA3C 0002                942          CMP.B       #2,D5
00001700  6700 004C                943          BEQ         J_TBL_A_P
00001704  BA3C 0003                944          CMP.B       #3,D5
00001708  6700 0064                945          BEQ         J_TBL_A_INCR
0000170C  BA3C 0004                946          CMP.B       #4,D5
00001710  6700 007C                947          BEQ         J_TBL_A_DECR
00001714  BA3C 0007                948          CMP.B       #7,D5
00001718  6700 0004                949          BEQ         J_ABS
0000171C                           950          
0000171C  4E75                     951          RTS
0000171E                           952          ;   deal with errors here
0000171E                           953  
0000171E                           954  J_ABS:
0000171E  4EB9 000017B8            955          JSR         J_ABS_TABLE
00001724  4E75                     956          RTS
00001726                           957  
00001726                           958  J_TBL_A:
00001726  43F9 00001A37            959          LEA         MODE_1_MSG, A1 ; A#
0000172C  103C 000E                960          MOVE.B      #14, D0
00001730  4E4F                     961          TRAP        #15
00001732  4EB9 000017AE            962          JSR         DISPLAY_REG
00001738                           963  
00001738  4E75                     964          RTS
0000173A                           965  
0000173A                           966  
0000173A                           967  J_TBL_D:
0000173A  43F9 00001A34            968          LEA         MODE_0_MSG, A1 ; D#
00001740  103C 000E                969          MOVE.B      #14, D0
00001744  4E4F                     970          TRAP        #15
00001746  4EB9 000017AE            971          JSR         DISPLAY_REG
0000174C  4E75                     972          RTS
0000174E                           973  
0000174E                           974  J_TBL_A_P:
0000174E                           975  
0000174E  43F9 00001A3A            976          LEA         MODE_A_MSG, A1 ; (A#)
00001754  103C 000E                977          MOVE.B      #14, D0
00001758  4E4F                     978          TRAP        #15
0000175A  4EB9 000017AE            979          JSR         DISPLAY_REG
00001760                           980          
00001760  43F9 00001A3E            981          LEA         MODE_A_1_MSG, A1
00001766  103C 000E                982          MOVE.B      #14, D0
0000176A  4E4F                     983          TRAP        #15
0000176C                           984  
0000176C                           985          
0000176C  4E75                     986          RTS
0000176E                           987      
0000176E                           988  J_TBL_A_INCR:
0000176E  43F9 00001A3A            989          LEA         MODE_A_MSG, A1 ; (A#)+
00001774  103C 000E                990          MOVE.B      #14, D0
00001778  4E4F                     991          TRAP        #15
0000177A  4EB9 000017AE            992          JSR         DISPLAY_REG
00001780                           993          
00001780  43F9 00001A40            994          LEA         MODE_A_2_MSG, A1
00001786  103C 000E                995          MOVE.B      #14, D0
0000178A  4E4F                     996          TRAP        #15
0000178C                           997  
0000178C  4E75                     998          RTS
0000178E                           999          
0000178E                          1000  J_TBL_A_DECR:
0000178E  43F9 00001A43           1001          LEA         MODE_MINUS_MSG, A1 ; -(A#)
00001794  103C 000E               1002          MOVE.B      #14, D0
00001798  4E4F                    1003          TRAP        #15
0000179A  4EB9 000017AE           1004          JSR         DISPLAY_REG
000017A0                          1005          
000017A0  43F9 00001A3E           1006          LEA         MODE_A_1_MSG, A1
000017A6  103C 000E               1007          MOVE.B      #14, D0
000017AA  4E4F                    1008          TRAP        #15
000017AC                          1009  
000017AC  4E75                    1010          RTS
000017AE                          1011          
000017AE                          1012          
000017AE                          1013  DISPLAY_REG:
000017AE  1206                    1014          MOVE.B      D6, D1
000017B0  103C 0003               1015          MOVE.B      #$3, D0
000017B4  4E4F                    1016          TRAP        #15
000017B6  4E75                    1017          RTS
000017B8                          1018  
000017B8                          1019  J_ABS_TABLE:
000017B8                          1020          ; SIMHALT
000017B8  BC3C 0000               1021          CMP.B       #0,D6
000017BC  6700 0014               1022          BEQ         J_ABS_W
000017C0                          1023              
000017C0  BC3C 0001               1024          CMP.B       #1,D6
000017C4  6700 0032               1025          BEQ         J_ABS_L
000017C8                          1026              
000017C8  BC3C 0004               1027          CMP.B       #4,D6
000017CC  6700 0052               1028          BEQ         DATA_TABLE
000017D0                          1029              
000017D0  4E75                    1030          RTS
000017D2                          1031          
000017D2                          1032  ;   Word
000017D2                          1033  J_ABS_W:
000017D2                          1034          ;SIMHALT
000017D2  43F9 00001A4D           1035          LEA         DOLLAR_MSG, A1
000017D8  103C 000E               1036          MOVE.B      #14, D0
000017DC  4E4F                    1037          TRAP        #15
000017DE                          1038         
000017DE                          1039  
000017DE  325B                    1040          MOVE.W      (A3)+, A1
000017E0                          1041          
000017E0                          1042  
000017E0                          1043          
000017E0  4281                    1044          CLR.L       D1
000017E2  4282                    1045          CLR.L       D2
000017E4  4287                    1046          CLR.L       D7
000017E6  123C 0004               1047          MOVE.B      #4, D1
000017EA  4EB8 1052               1048          JSR         CONVERT_ASCII
000017EE                          1049          
000017EE  2247                    1050          MOVE.L      D7, A1
000017F0  103C 000E               1051          MOVE.B      #14, D0
000017F4  4E4F                    1052          TRAP        #15
000017F6                          1053  
000017F6  4E75                    1054          RTS
000017F8                          1055  ;   Long
000017F8                          1056  J_ABS_L:
000017F8                          1057          ;SIMHALT
000017F8  43F9 00001A4D           1058          LEA         DOLLAR_MSG, A1
000017FE  103C 000E               1059          MOVE.B      #14, D0
00001802  4E4F                    1060          TRAP        #15
00001804                          1061  
00001804  4281                    1062          CLR.L       D1
00001806  4282                    1063          CLR.L       D2
00001808  4287                    1064          CLR.L       D7
0000180A                          1065  
0000180A                          1066  
0000180A                          1067          
0000180A  241B                    1068          MOVE.L      (A3)+, D2
0000180C                          1069          
0000180C  4EB8 10BE               1070          JSR         FLIP_START
00001810                          1071  
00001810  4282                    1072          CLR.L       D2
00001812                          1073          
00001812                          1074  
00001812  123C 0008               1075          MOVE.B      #8, D1
00001816  4EB9 0000189A           1076          JSR         CONVERT_HEX
0000181C                          1077  
0000181C                          1078  
0000181C                          1079          
0000181C                          1080          
0000181C  4E75                    1081          RTS
0000181E                          1082  
0000181E                          1083  ;   Error
0000181E                          1084  J_ABS_ERROR:
0000181E  4E75                    1085          RTS
00001820                          1086  
00001820                          1087  ;   Hard Coded Data
00001820                          1088  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00001820                          1089  
00001820                          1090  ;   Size num 0 = Byte 1 = Word 2 Long
00001820                          1091  
00001820                          1092  DATA_TABLE:
00001820                          1093          ;SIMHALT
00001820  43F9 00001A50           1094          LEA         DATA_MSG, A1
00001826  103C 000E               1095          MOVE.B      #14, D0
0000182A  4E4F                    1096          TRAP        #15
0000182C                          1097  
0000182C                          1098  
0000182C  B63C 0000               1099          CMP.B       #0,D3 
00001830  6700 0014               1100          BEQ         DATA_B
00001834                          1101  
00001834  B63C 0001               1102          CMP.B       #1,D3 
00001838  6700 002A               1103          BEQ         DATA_W
0000183C                          1104          
0000183C  B63C 0002               1105          CMP.B       #2,D3 
00001840  6700 003E               1106          BEQ         DATA_L
00001844                          1107          
00001844  4E75                    1108          RTS
00001846                          1109  
00001846                          1110  DATA_B:
00001846  4281                    1111          CLR.L       D1
00001848  4282                    1112          CLR.L       D2
0000184A  4287                    1113          CLR.L       D7
0000184C                          1114          
0000184C  341B                    1115          MOVE.W      (A3)+, D2
0000184E                          1116          * Only read first byte from the word 
0000184E                          1117          
0000184E  4EB8 10BE               1118          JSR         FLIP_START
00001852  4847                    1119          SWAP        D7
00001854  E09F                    1120          ROR.L       #8,D7
00001856  4282                    1121          CLR.L       D2
00001858                          1122          
00001858                          1123  
00001858  123C 0002               1124          MOVE.B      #2, D1
0000185C  4EB9 0000189A           1125          JSR         CONVERT_HEX
00001862                          1126  
00001862                          1127  
00001862                          1128  
00001862  4E75                    1129          RTS
00001864                          1130  
00001864                          1131  DATA_W:
00001864  4281                    1132          CLR.L       D1
00001866  4282                    1133          CLR.L       D2
00001868  4287                    1134          CLR.L       D7
0000186A                          1135          
0000186A  341B                    1136          MOVE.W      (A3)+, D2
0000186C                          1137          
0000186C  4EB8 10BE               1138          JSR         FLIP_START
00001870                          1139  
00001870  4847                    1140          SWAP        D7
00001872                          1141  
00001872  4282                    1142          CLR.L       D2
00001874                          1143          
00001874  123C 0004               1144          MOVE.B      #4, D1
00001878                          1145          
00001878                          1146          
00001878  4EB9 0000189A           1147          JSR         CONVERT_HEX
0000187E                          1148  
0000187E                          1149          
0000187E                          1150  
0000187E  4E75                    1151          RTS
00001880                          1152  
00001880                          1153  DATA_L:
00001880                          1154          ;SIMHALT
00001880  4281                    1155          CLR.L       D1
00001882  4282                    1156          CLR.L       D2
00001884  4287                    1157          CLR.L       D7
00001886                          1158          
00001886  241B                    1159          MOVE.L      (A3)+, D2
00001888                          1160          
00001888  4EB8 10BE               1161          JSR         FLIP_START
0000188C                          1162  
0000188C  4282                    1163          CLR.L       D2
0000188E                          1164          
0000188E                          1165  
0000188E  123C 0008               1166          MOVE.B      #8, D1
00001892  4EB9 0000189A           1167          JSR         CONVERT_HEX
00001898                          1168  
00001898                          1169          
00001898                          1170  
00001898  4E75                    1171          RTS
0000189A                          1172  
0000189A                          1173  
0000189A                          1174  CONVERT_HEX:
0000189A                          1175          ; SIMHALT    
0000189A  0C01 0000               1176          CMPI.B      #$0, D1    
0000189E  6700 0092               1177          BEQ         HEX_DONE
000018A2                          1178          
000018A2  5301                    1179          SUBI.B      #$1, D1       
000018A4                          1180  
000018A4  4282                    1181          CLR.L       D2
000018A6                          1182      
000018A6  1407                    1183          MOVE.B      D7,D2
000018A8                          1184              
000018A8  103C 001C               1185          MOVE.B      #28,D0    
000018AC  E1AA                    1186          LSL.L       D0,D2     
000018AE  E99A                    1187          ROL.L       #4,D2
000018B0                          1188          
000018B0  E887                    1189          ASR.L       #4, D7
000018B2                          1190          
000018B2                          1191          
000018B2  B43C 0000               1192          CMP.B       #0,D2
000018B6  6700 007C               1193          BEQ         PRINT_ASCII0
000018BA  B43C 0001               1194          CMP.B       #1,D2
000018BE  6700 0084               1195          BEQ         PRINT_ASCII1
000018C2  B43C 0002               1196          CMP.B       #2,D2
000018C6  6700 008C               1197          BEQ         PRINT_ASCII2
000018CA  B43C 0003               1198          CMP.B       #3,D2
000018CE  6700 0094               1199          BEQ         PRINT_ASCII3
000018D2  B43C 0004               1200          CMP.B       #4,D2
000018D6  6700 009C               1201          BEQ         PRINT_ASCII4
000018DA  B43C 0005               1202          CMP.B       #5,D2
000018DE  6700 00A4               1203          BEQ         PRINT_ASCII5
000018E2  B43C 0006               1204          CMP.B       #6,D2
000018E6  6700 00AC               1205          BEQ         PRINT_ASCII6
000018EA  B43C 0007               1206          CMP.B       #7,D2
000018EE  6700 00B4               1207          BEQ         PRINT_ASCII7
000018F2  B43C 0008               1208          CMP.B       #8,D2
000018F6  6700 00BC               1209          BEQ         PRINT_ASCII8
000018FA  B43C 0009               1210          CMP.B       #9,D2
000018FE  6700 00C4               1211          BEQ         PRINT_ASCII9
00001902  B43C 000A               1212          CMP.B       #$A,D2
00001906  6700 00CC               1213          BEQ         PRINT_ASCIIA
0000190A  B43C 000B               1214          CMP.B       #$B,D2
0000190E  6700 00D4               1215          BEQ         PRINT_ASCIIB
00001912  B43C 000C               1216          CMP.B       #$C,D2
00001916  6700 00DC               1217          BEQ         PRINT_ASCIIC
0000191A  B43C 000D               1218          CMP.B       #$D,D2
0000191E  6700 00E4               1219          BEQ         PRINT_ASCIID
00001922  B43C 000E               1220          CMP.B       #$E,D2
00001926  6700 00EC               1221          BEQ         PRINT_ASCIIE
0000192A  B43C 000F               1222          CMP.B       #$F,D2
0000192E  6700 00F4               1223          BEQ         PRINT_ASCIIF
00001932                          1224          
00001932                          1225          ; error handling here
00001932                          1226          
00001932                          1227          
00001932                          1228  
00001932                          1229  HEX_DONE:
00001932  4E75                    1230          RTS
00001934                          1231  
00001934                          1232  
00001934                          1233  
00001934                          1234  PRINT_ASCII0:
00001934  43F9 00001AAE           1235          LEA         ZERO_MSG, A1
0000193A  103C 000E               1236          MOVE.B      #14, D0    
0000193E  4E4F                    1237          TRAP        #15
00001940  6000 FF58               1238          BRA         CONVERT_HEX
00001944                          1239  PRINT_ASCII1:
00001944  43F9 00001AB0           1240          LEA         ONE_MSG, A1
0000194A  103C 000E               1241          MOVE.B      #14, D0    
0000194E  4E4F                    1242          TRAP        #15
00001950  6000 FF48               1243          BRA         CONVERT_HEX
00001954                          1244  PRINT_ASCII2:
00001954  43F9 00001AB2           1245          LEA         TWO_MSG, A1
0000195A  103C 000E               1246          MOVE.B      #14, D0    
0000195E  4E4F                    1247          TRAP        #15
00001960  6000 FF38               1248          BRA         CONVERT_HEX
00001964                          1249  PRINT_ASCII3:
00001964  43F9 00001AB4           1250          LEA         THREE_MSG, A1
0000196A  103C 000E               1251          MOVE.B      #14, D0    
0000196E  4E4F                    1252          TRAP        #15
00001970  6000 FF28               1253          BRA         CONVERT_HEX
00001974                          1254  PRINT_ASCII4:
00001974  43F9 00001AB6           1255          LEA         FOUR_MSG, A1
0000197A  103C 000E               1256          MOVE.B      #14, D0    
0000197E  4E4F                    1257          TRAP        #15
00001980  6000 FF18               1258          BRA         CONVERT_HEX
00001984                          1259  PRINT_ASCII5:
00001984  43F9 00001AB8           1260          LEA         FIVE_MSG, A1
0000198A  103C 000E               1261          MOVE.B      #14, D0    
0000198E  4E4F                    1262          TRAP        #15
00001990  6000 FF08               1263          BRA         CONVERT_HEX        
00001994                          1264  PRINT_ASCII6:
00001994  43F9 00001ABA           1265          LEA         SIX_MSG, A1
0000199A  103C 000E               1266          MOVE.B      #14, D0    
0000199E  4E4F                    1267          TRAP        #15
000019A0  6000 FEF8               1268          BRA         CONVERT_HEX
000019A4                          1269  PRINT_ASCII7:
000019A4  43F9 00001ABC           1270          LEA         SEVEN_MSG, A1
000019AA  103C 000E               1271          MOVE.B      #14, D0    
000019AE  4E4F                    1272          TRAP        #15
000019B0  6000 FEE8               1273          BRA         CONVERT_HEX
000019B4                          1274  PRINT_ASCII8:
000019B4  43F9 00001ABE           1275          LEA         EIGHT_MSG, A1
000019BA  103C 000E               1276          MOVE.B      #14, D0    
000019BE  4E4F                    1277          TRAP        #15
000019C0  6000 FED8               1278          BRA         CONVERT_HEX
000019C4                          1279  PRINT_ASCII9:
000019C4  43F9 00001AC0           1280          LEA         NINE_MSG, A1
000019CA  103C 000E               1281          MOVE.B      #14, D0    
000019CE  4E4F                    1282          TRAP        #15
000019D0  6000 FEC8               1283          BRA         CONVERT_HEX
000019D4                          1284  PRINT_ASCIIA:
000019D4  43F9 00001AC2           1285          LEA         A_MSG, A1
000019DA  103C 000E               1286          MOVE.B      #14, D0    
000019DE  4E4F                    1287          TRAP        #15
000019E0  6000 FEB8               1288          BRA         CONVERT_HEX
000019E4                          1289  PRINT_ASCIIB:
000019E4  43F9 00001AC4           1290          LEA         B_MSG, A1
000019EA  103C 000E               1291          MOVE.B      #14, D0    
000019EE  4E4F                    1292          TRAP        #15
000019F0  6000 FEA8               1293          BRA         CONVERT_HEX
000019F4                          1294  PRINT_ASCIIC:
000019F4  43F9 00001AC6           1295          LEA         C_MSG, A1
000019FA  103C 000E               1296          MOVE.B      #14, D0    
000019FE  4E4F                    1297          TRAP        #15
00001A00  6000 FE98               1298          BRA         CONVERT_HEX
00001A04                          1299  PRINT_ASCIID:
00001A04  43F9 00001AC8           1300          LEA         D_MSG, A1
00001A0A  103C 000E               1301          MOVE.B      #14, D0    
00001A0E  4E4F                    1302          TRAP        #15
00001A10  6000 FE88               1303          BRA         CONVERT_HEX
00001A14                          1304  PRINT_ASCIIE:
00001A14  43F9 00001ACA           1305          LEA         E_MSG, A1
00001A1A  103C 000E               1306          MOVE.B      #14, D0    
00001A1E  4E4F                    1307          TRAP        #15
00001A20  6000 FE78               1308          BRA         CONVERT_HEX
00001A24                          1309  PRINT_ASCIIF:
00001A24  43F9 00001ACC           1310          LEA         F_MSG, A1
00001A2A  103C 000E               1311          MOVE.B      #14, D0    
00001A2E  4E4F                    1312          TRAP        #15
00001A30  6000 FE68               1313          BRA         CONVERT_HEX
00001A34                          1314  
00001A34                          1315  
00001A34                          1316  
00001A34                          1317  
00001A34                          1318  
00001A34                          1319  
00001A34                          1320  
00001A34= 20 44 00                1321  MODE_0_MSG:     DC.B        ' D',0
00001A37= 20 41 00                1322  MODE_1_MSG:     DC.B        ' A',0
00001A3A= 20 28 41 00             1323  MODE_A_MSG:     DC.B        ' (A',0
00001A3E= 29 00                   1324  MODE_A_1_MSG:   DC.B        ')',0
00001A40= 29 2B 00                1325  MODE_A_2_MSG:   DC.B        ')+',0
00001A43= 20 2D 28 41 00          1326  MODE_MINUS_MSG: DC.B        ' -(A',0
00001A48                          1327  
00001A48= 2C 00                   1328  SEPERATOR:      DC.B        ',',0
00001A4A                          1329  
00001A4A= 20 23 00                1330  POUND_MSG:      DC.B        ' #',0
00001A4D= 20 24 00                1331  DOLLAR_MSG:     DC.B        ' $',0
00001A50= 20 23 24 00             1332  DATA_MSG:       DC.B        ' #$',0
00001A54                          1333  
00001A54= 54 4D 50 00             1334  TEMP_MSG:       DC.B        'TMP',0
00001A58                          1335  
00001A58                          1336  
00001A58                          1337  
00001A58                          1338  TMP_STR         DS.B        32
00001A78                          1339  
00001A78                          1340  
00001A78                          1341  
00001A78                          1342  
00001A78                          1343  
00001A78                          1344  
00001A78                          1345  
00001A78                          1346  
00001A78                          1347  -------------------- end include --------------------
00001A78= 45 6E 74 65 72 20 ...   1348  START_MSG:      DC.B        'Enter a starting address:',0
00001A92= 45 6E 74 65 72 20 ...   1349  END_MSG:        DC.B        'Enter an ending address:',0
00001AAB                          1350                
00001AAB  =0000000D               1351  CR              EQU         $0D
00001AAB  =0000000A               1352  LF              EQU         $0A
00001AAB                          1353  
00001AAB= 20 20 00                1354  SPACE_MSG:      DC.B        '  ',0
00001AAE                          1355  
00001AAE= 30 00                   1356  ZERO_MSG:       DC.B        '0',0
00001AB0= 31 00                   1357  ONE_MSG:        DC.B        '1',0
00001AB2= 32 00                   1358  TWO_MSG:        DC.B        '2',0
00001AB4= 33 00                   1359  THREE_MSG:      DC.B        '3',0
00001AB6= 34 00                   1360  FOUR_MSG:       DC.B        '4',0
00001AB8= 35 00                   1361  FIVE_MSG:       DC.B        '5',0
00001ABA= 36 00                   1362  SIX_MSG:        DC.B        '6',0
00001ABC= 37 00                   1363  SEVEN_MSG:      DC.B        '7',0
00001ABE= 38 00                   1364  EIGHT_MSG:      DC.B        '8',0
00001AC0= 39 00                   1365  NINE_MSG:       DC.B        '9',0
00001AC2= 41 00                   1366  A_MSG:          DC.B        'A',0
00001AC4= 42 00                   1367  B_MSG:          DC.B        'B',0
00001AC6= 43 00                   1368  C_MSG:          DC.B        'C',0
00001AC8= 44 00                   1369  D_MSG:          DC.B        'D',0
00001ACA= 45 00                   1370  E_MSG:          DC.B        'E',0
00001ACC= 46 00                   1371  F_MSG:          DC.B        'F',0
00001ACE                          1372                  
00001ACE= 45 72 72 6F 72 00       1373  ERROR_MSG:      DC.B        'Error',0
00001AD4= 53 75 63 63 65 73 ...   1374  SUCCESS_MSG:    DC.B        'Success',0
00001ADC                          1375  
00001ADC= 0D 0A 00                1376  NEW_LINE:       DC.B        '',CR,LF,0
00001ADF                          1377  
00001ADF                          1378    
00001ADF                          1379                  
00001ADF                          1380                  
00001ADF                          1381  STA_ADDR        DS.B        40
00001B07                          1382  END_ADDR        DS.B        40
00001B2F                          1383  
00001B2F                          1384  
00001B2F                          1385  
00001B2F                          1386  
00001B2F                          1387                  
00001B2F                          1388                  
00001B2F                          1389          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            1640
ADDQ_MSG            15F6
ADD_MSG             163C
ASCII_DONE          106A
ASL_MSG             1645
ASR_MSG             1649
A_MSG               1AC2
BITS11TO6           14A8
BITS11TO8           14B4
BITS11TO9           14C0
BITS2TO0            1430
BITS3TO0            143C
BITS5TO3            1448
BITS7TO0            1458
BITS7TO4            1460
BITS7TO6            146C
BITS8TO3            1478
BITS8TO4            1484
BITS8TO6            1490
BITS9TO7            149C
BRA_MSG             161C
BSR_MSG             1620
BYTE_MSG            1657
B_MSG               1AC4
CMP_MSG             1633
CONVERT_ASCII       1052
CONVERT_HEX         189A
CR                  D
C_MSG               1AC6
DATA_B              1846
DATA_L              1880
DATA_MSG            1A50
DATA_TABLE          1820
DATA_W              1864
DISPLAY_REG         17AE
DIVU_MSG            162A
DOLLAR              1653
DOLLAR_MSG          1A4D
DONE                12CA
D_MSG               1AC8
EA_LEA              16D4
EA_MOVE             1688
EIGHT_MSG           1ABE
END_ADDR            1B07
END_MSG             1A92
ERROR_INSTR         1678
ERROR_MSG           1ACE
EXT_MSG             164D
E_MSG               1ACA
FILE_LOOP           1296
FIVE_MSG            1AB8
FLIP_DONE           10EC
FLIP_LOOP           10CE
FLIP_START          10BE
FOUR_MSG            1AB6
F_MSG               1ACC
HEX_DONE            1932
IMPLEMENT_MSG       1660
INVALID_INSTR       1422
JSR_MSG             1618
JUMP_0              1332
JUMP_1              1344
JUMP_2              1352
JUMP_3              136A
JUMP_4              1394
JUMP_5              13C6
JUMP_6              13D8
JUMP_7              13DE
JUMP_8              13E4
JUMP_9              13EA
JUMP_A              13F0
JUMP_B              13F6
JUMP_C              13FC
JUMP_D              1402
JUMP_E              1408
JUMP_ERROR          1414
JUMP_OP_CODE        12D0
J_ABS               171E
J_ABS_ERROR         181E
J_ABS_L             17F8
J_ABS_TABLE         17B8
J_ABS_W             17D2
J_MOVEA_L           14EA
J_MOVEA_W           1532
J_MOVE_L            150E
J_MOVE_W            1556
J_TBL_A             1726
J_TBL_A_DECR        178E
J_TBL_A_INCR        176E
J_TBL_A_P           174E
J_TBL_D             173A
LEA_MSG             1614
LET_ASCII           1080
LF                  A
LONG_MSG            165D
MODE_0_MSG          1A34
MODE_1_MSG          1A37
MODE_A_1_MSG        1A3E
MODE_A_2_MSG        1A40
MODE_A_MSG          1A3A
MODE_MINUS_MSG      1A43
MODE_TABLE          16EC
MOVEA_MSG           1600
MOVEM_CHECK         1382
MOVEM_DISPLAY       15DC
MOVEM_MSG           160E
MOVEM_OR_EXT        15BE
MOVEQ_MSG           1624
MOVE_MSG            15FB
MULU_MSG            1637
NEW_LINE            1ADC
NINE_MSG            1AC0
NOP_MSG             160A
NUM_ASCII           106C
ONE_MSG             1AB0
OP_CODE_ADDQ        15E8
OP_CODE_BASE_MOVE   14CC
OP_CODE_EXT         15D0
OP_CODE_JSR         1596
OP_CODE_LEA         15A4
OP_CODE_MOVEM       15B6
OP_CODE_NOP         1588
OP_CODE_ORI         157A
ORI_MSG             1606
PERCENT             1655
POUND               1651
POUND_MSG           1A4A
PRINT_ADDRESS       1094
PRINT_ADDRESS_EXIT  1188
PRINT_ADDRESS_LOOP  10EE
PRINT_ADR0          1196
PRINT_ADR1          11A6
PRINT_ADR2          11B6
PRINT_ADR3          11C6
PRINT_ADR4          11D6
PRINT_ADR5          11E6
PRINT_ADR6          11F6
PRINT_ADR7          1206
PRINT_ADR8          1216
PRINT_ADR9          1226
PRINT_ADRA          1236
PRINT_ADRB          1246
PRINT_ADRC          1256
PRINT_ADRD          1266
PRINT_ADRE          1276
PRINT_ADRF          1286
PRINT_ASCII0        1934
PRINT_ASCII1        1944
PRINT_ASCII2        1954
PRINT_ASCII3        1964
PRINT_ASCII4        1974
PRINT_ASCII5        1984
PRINT_ASCII6        1994
PRINT_ASCII7        19A4
PRINT_ASCII8        19B4
PRINT_ASCII9        19C4
PRINT_ASCIIA        19D4
PRINT_ASCIIB        19E4
PRINT_ASCIIC        19F4
PRINT_ASCIID        1A04
PRINT_ASCIIE        1A14
PRINT_ASCIIF        1A24
SEPERATOR           1A48
SEVEN_MSG           1ABC
SIX_MSG             1ABA
SPACE_MSG           1AAB
START               1000
START_MSG           1A78
STA_ADDR            1ADF
SUB_MSG             162F
SUCCESS_MSG         1AD4
TEMP_MSG            1A54
THREE_MSG           1AB4
TMP_STR             1A58
TWO_MSG             1AB2
WORD_MSG            165A
ZERO_MSG            1AAE
