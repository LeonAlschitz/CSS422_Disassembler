00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/16/2021 12:28:25 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; A5 will be used for paging
00001000                            13  ; D0 is used to store values that will get compared
00001000                            14      
00001000                            15  START:
00001000                            16  
00001000  4EB9 000010A0             17          JSR         CLEAR_ALL_REG
00001006                            18          
00001006  43F9 000025DB             19          LEA         GREETING_MSG, A1
0000100C  103C 000E                 20          MOVE.B      #14, D0    
00001010  4E4F                      21          TRAP        #15
00001012                            22          
00001012  6000 0002                 23          BRA         START_ADDR_CHECK
00001016                            24          
00001016                            25  START_ADDR_CHECK:
00001016                            26           ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001016  43F9 00001D91             27          LEA         START_MSG, A1
0000101C  103C 000E                 28          MOVE.B      #14, D0    
00001020  4E4F                      29          TRAP        #15
00001022                            30          
00001022  43F9 000026F8             31          LEA         STA_ADDR, A1
00001028  103C 0002                 32          MOVE.B      #2, D0
0000102C  4E4F                      33          TRAP        #15             ; D1 has the length of the address
0000102E                            34          
0000102E                            35          
0000102E  4282                      36          CLR.L       D2
00001030  4284                      37          CLR.L       D4
00001032  4287                      38          CLR.L       D7
00001034  4EB9 000010DC             39          JSR         CONVERT_ASCII
0000103A                            40          
0000103A  1807                      41          MOVE.B      D7, D4
0000103C  4EB9 00001698             42          JSR         Bit0        
00001042  B43C 0000                 43          CMP.B       #0, D2
00001046                            44          
00001046  66CE                      45          BNE         START_ADDR_CHECK
00001048  6000 0002                 46          BRA         SAVE_START
0000104C                            47  
0000104C                            48  SAVE_START:
0000104C  2647                      49          MOVEA.L     D7, A3
0000104E  2A4B                      50          MOVEA.L     A3, A5
00001050                            51  
00001050  DBFC 00000020             52          ADD.L       #32, A5
00001056  6000 0002                 53          BRA         END_ADDR_CHECK
0000105A                            54  
0000105A                            55  END_ADDR_CHECK:        
0000105A                            56          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
0000105A                            57          
0000105A  43F9 00001DAB             58          LEA         END_MSG, A1
00001060  103C 000E                 59          MOVE.B      #14, D0    
00001064  4E4F                      60          TRAP        #15
00001066                            61          
00001066  43F9 00002720             62          LEA         END_ADDR, A1
0000106C  103C 0002                 63          MOVE.B      #2, D0
00001070  4E4F                      64          TRAP        #15
00001072                            65          
00001072  4282                      66          CLR.L       D2
00001074  4284                      67          CLR.L       D4
00001076  4287                      68          CLR.L       D7
00001078  4EB9 000010DC             69          JSR         CONVERT_ASCII
0000107E                            70  
0000107E  4EB9 0000108A             71          JSR         CHECK_ODD
00001084  66D4                      72          BNE         END_ADDR_CHECK
00001086                            73          
00001086  6000 0012                 74          BRA         SAVE_END
0000108A                            75          
0000108A                            76  CHECK_ODD:
0000108A  1807                      77          MOVE.B      D7, D4
0000108C  4EB9 00001698             78          JSR         Bit0        
00001092  B43C 0000                 79          CMP.B       #0, D2
00001096  4E75                      80          RTS
00001098                            81  
00001098                            82  CHECK_DATA:
00001098                            83          
00001098  4E75                      84          RTS
0000109A                            85  
0000109A                            86  SAVE_END:
0000109A  2847                      87          MOVEA.L     D7, A4
0000109C  6000 0282                 88          BRA         FILE_LOOP
000010A0                            89      
000010A0                            90          
000010A0                            91  CLEAR_ALL_REG:
000010A0  4280                      92          CLR.L       D0
000010A2  4281                      93          CLR.L       D1
000010A4  4282                      94          CLR.L       D2
000010A6  4283                      95          CLR.L       D3
000010A8  4284                      96          CLR.L       D4
000010AA  4285                      97          CLR.L       D5
000010AC  4286                      98          CLR.L       D6
000010AE  4287                      99          CLR.L       D7
000010B0                           100  
000010B0  207C 00000000            101          MOVEA.L     #$00000000, A0
000010B6  227C 00000000            102          MOVEA.L     #$00000000, A1
000010BC  247C 00000000            103          MOVEA.L     #$00000000, A2
000010C2  267C 00000000            104          MOVEA.L     #$00000000, A3
000010C8  287C 00000000            105          MOVEA.L     #$00000000, A4
000010CE  2A7C 00000000            106          MOVEA.L     #$00000000, A5
000010D4  2C7C 00000000            107          MOVEA.L     #$00000000, A6
000010DA                           108          
000010DA                           109          
000010DA                           110  
000010DA  4E75                     111          RTS
000010DC                           112  
000010DC                           113  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
000010DC  0C01 0000                114          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010E0  6700 0012                115          BEQ         ASCII_DONE
000010E4                           116      
000010E4  1419                     117          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
000010E6                           118          
000010E6                           119  
000010E6                           120      
000010E6  103C 0039                121          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
000010EA  B400                     122          CMP.B       D0, D2
000010EC                           123          
000010EC                           124  
000010EC  6F00 0008                125          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
000010F0  6000 0018                126          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
000010F4                           127  
000010F4                           128  ASCII_DONE:
000010F4  4E75                     129          RTS
000010F6                           130  
000010F6                           131  
000010F6                           132  NUM_ASCII:
000010F6  5301                     133          SUBI.B      #$1, D1
000010F8                           134          
000010F8  103C 0030                135          MOVE.B      #$30, D0
000010FC  9400                     136          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
000010FE  DE02                     137          ADD.B       D2, D7      ; new ASCII number stored at D7
00001100                           138          
00001100                           139  
00001100  0C01 0000                140          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001104  67EE                     141          BEQ         ASCII_DONE
00001106                           142          
00001106  E987                     143          ASL.L       #4, D7
00001108                           144        
00001108  60D2                     145          BRA         CONVERT_ASCII
0000110A                           146          
0000110A                           147          
0000110A                           148  LET_ASCII:
0000110A  5301                     149          SUBI.B      #$1, D1
0000110C                           150                 
0000110C                           151  
0000110C  103C 0037                152          MOVE.B      #$37, D0
00001110  9400                     153          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001112  DE02                     154          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
00001114                           155                                  ; 46 is used to represent F in Hex. 46 - 37 = F
00001114                           156          
00001114  0C01 0000                157          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001118  67DA                     158          BEQ         ASCII_DONE
0000111A                           159          
0000111A  E987                     160          ASL.L       #4, D7
0000111C                           161          
0000111C                           162          
0000111C  60BE                     163          BRA         CONVERT_ASCII
0000111E                           164  
0000111E                           165  PRINT_ADDRESS:
0000111E                           166          ; SIMHALT 0000 0000
0000111E  4281                     167          CLR.L       D1
00001120  4282                     168          CLR.L       D2
00001122  240B                     169          MOVE.L      A3, D2
00001124                           170          
00001124                           171          
00001124                           172  
00001124                           173          
00001124  4EB9 00001148            174          JSR         FLIP_START
0000112A  2607                     175          MOVE.L      D7, D3
0000112C                           176  
0000112C  4281                     177          CLR.L       D1
0000112E  4282                     178          CLR.L       D2
00001130  4287                     179          CLR.L       D7
00001132                           180          
00001132  123C 0008                181          MOVE.B      #$8, D1
00001136  6000 0040                182          BRA         PRINT_ADDRESS_LOOP
0000113A                           183  
0000113A  43F9 000026A1            184          LEA         SPACE_MSG, A1
00001140  103C 000E                185          MOVE.B      #14, D0    
00001144  4E4F                     186          TRAP        #15
00001146                           187          
00001146  4E75                     188          RTS
00001148                           189          
00001148                           190  FLIP_START:        
00001148  4281                     191          CLR.L       D1
0000114A  4287                     192          CLR.L       D7
0000114C                           193          
0000114C  123C 0008                194          MOVE.B      #$8, D1
00001150                           195          
00001150  4EB9 00001158            196          JSR         FLIP_LOOP
00001156                           197          
00001156                           198          
00001156  4E75                     199          RTS
00001158                           200          
00001158                           201  FLIP_LOOP:
00001158                           202  
00001158                           203          ; SIMHALT
00001158                           204          
00001158  0C01 0000                205          CMPI.B      #$0, D1
0000115C  6700 0018                206          BEQ         FLIP_DONE
00001160  5301                     207          SUBI.B      #$1, D1
00001162  E987                     208          ASL.L       #4, D7
00001164                           209          
00001164  4285                     210          CLR.L       D5
00001166                           211          
00001166  1A02                     212          MOVE.B      D2, D5
00001168                           213          
00001168  103C 001C                214          MOVE.B      #28,D0    
0000116C  E1AD                     215          LSL.L       D0, D5     
0000116E  E99D                     216          ROL.L       #4, D5
00001170                           217          
00001170  DE05                     218          ADD.B       D5, D7
00001172                           219          
00001172                           220          
00001172  E882                     221          ASR.L       #4, D2
00001174                           222          
00001174  60E2                     223          BRA         FLIP_LOOP
00001176                           224  
00001176                           225  FLIP_DONE:
00001176  4E75                     226          RTS
00001178                           227  
00001178                           228  
00001178                           229          
00001178                           230  
00001178                           231  PRINT_ADDRESS_LOOP:
00001178                           232          ; SIMHALT
00001178                           233          
00001178  0C01 0000                234          CMPI.B      #$0, D1
0000117C  6700 0094                235          BEQ         PRINT_ADDRESS_EXIT
00001180                           236          
00001180                           237          
00001180  5301                     238          SUBI.B      #$1, D1
00001182                           239          
00001182  1403                     240          MOVE.B      D3, D2
00001184  103C 001C                241          MOVE.B      #28,D0    
00001188  E1AA                     242          LSL.L       D0,D2     
0000118A  E99A                     243          ROL.L       #4,D2 
0000118C                           244          
0000118C                           245          
0000118C  E883                     246          ASR.L       #4, D3
0000118E                           247          
0000118E                           248          
0000118E  B43C 0000                249          CMP.B       #0,D2
00001192  6700 008C                250          BEQ         PRINT_ADR0
00001196  B43C 0001                251          CMP.B       #1,D2
0000119A  6700 0094                252          BEQ         PRINT_ADR1
0000119E  B43C 0002                253          CMP.B       #2,D2
000011A2  6700 009C                254          BEQ         PRINT_ADR2
000011A6  B43C 0003                255          CMP.B       #3,D2
000011AA  6700 00A4                256          BEQ         PRINT_ADR3
000011AE  B43C 0004                257          CMP.B       #4,D2
000011B2  6700 00AC                258          BEQ         PRINT_ADR4
000011B6  B43C 0005                259          CMP.B       #5,D2
000011BA  6700 00B4                260          BEQ         PRINT_ADR5
000011BE  B43C 0006                261          CMP.B       #6,D2
000011C2  6700 00BC                262          BEQ         PRINT_ADR6
000011C6  B43C 0007                263          CMP.B       #7,D2
000011CA  6700 00C4                264          BEQ         PRINT_ADR7
000011CE  B43C 0008                265          CMP.B       #8,D2
000011D2  6700 00CC                266          BEQ         PRINT_ADR8
000011D6  B43C 0009                267          CMP.B       #9,D2
000011DA  6700 00D4                268          BEQ         PRINT_ADR9
000011DE  B43C 000A                269          CMP.B       #$A,D2
000011E2  6700 00DC                270          BEQ         PRINT_ADRA
000011E6  B43C 000B                271          CMP.B       #$B,D2
000011EA  6700 00E4                272          BEQ         PRINT_ADRB
000011EE  B43C 000C                273          CMP.B       #$C,D2
000011F2  6700 00EC                274          BEQ         PRINT_ADRC
000011F6  B43C 000D                275          CMP.B       #$D,D2
000011FA  6700 00F4                276          BEQ         PRINT_ADRD
000011FE  B43C 000E                277          CMP.B       #$E,D2
00001202  6700 00FC                278          BEQ         PRINT_ADRE
00001206  B43C 000F                279          CMP.B       #$F,D2
0000120A  6700 0104                280          BEQ         PRINT_ADRF
0000120E                           281  
0000120E                           282  
0000120E                           283  
0000120E  6000 FF68                284          BRA         PRINT_ADDRESS_LOOP
00001212                           285          
00001212                           286  
00001212                           287          
00001212                           288  
00001212                           289  PRINT_ADDRESS_EXIT:
00001212  43F9 000026A1            290          LEA         SPACE_MSG, A1
00001218  103C 000E                291          MOVE.B      #14, D0    
0000121C  4E4F                     292          TRAP        #15
0000121E                           293          
0000121E  4E75                     294          RTS
00001220                           295          
00001220                           296  PRINT_ADR0:
00001220  43F9 000026A4            297          LEA         ZERO_MSG, A1
00001226  103C 000E                298          MOVE.B      #14, D0    
0000122A  4E4F                     299          TRAP        #15
0000122C  6000 FF4A                300          BRA         PRINT_ADDRESS_LOOP
00001230                           301  PRINT_ADR1:
00001230  43F9 000026A6            302          LEA         ONE_MSG, A1
00001236  103C 000E                303          MOVE.B      #14, D0    
0000123A  4E4F                     304          TRAP        #15
0000123C  6000 FF3A                305          BRA         PRINT_ADDRESS_LOOP
00001240                           306  PRINT_ADR2:
00001240  43F9 000026A8            307          LEA         TWO_MSG, A1
00001246  103C 000E                308          MOVE.B      #14, D0    
0000124A  4E4F                     309          TRAP        #15
0000124C  6000 FF2A                310          BRA         PRINT_ADDRESS_LOOP
00001250                           311  PRINT_ADR3:
00001250  43F9 000026AA            312          LEA         THREE_MSG, A1
00001256  103C 000E                313          MOVE.B      #14, D0    
0000125A  4E4F                     314          TRAP        #15
0000125C  6000 FF1A                315          BRA         PRINT_ADDRESS_LOOP
00001260                           316  PRINT_ADR4:
00001260  43F9 000026AC            317          LEA         FOUR_MSG, A1
00001266  103C 000E                318          MOVE.B      #14, D0    
0000126A  4E4F                     319          TRAP        #15
0000126C  6000 FF0A                320          BRA         PRINT_ADDRESS_LOOP
00001270                           321  PRINT_ADR5:
00001270  43F9 000026AE            322          LEA         FIVE_MSG, A1
00001276  103C 000E                323          MOVE.B      #14, D0    
0000127A  4E4F                     324          TRAP        #15
0000127C  6000 FEFA                325          BRA         PRINT_ADDRESS_LOOP
00001280                           326  PRINT_ADR6:
00001280  43F9 000026B0            327          LEA         SIX_MSG, A1
00001286  103C 000E                328          MOVE.B      #14, D0    
0000128A  4E4F                     329          TRAP        #15
0000128C  6000 FEEA                330          BRA         PRINT_ADDRESS_LOOP
00001290                           331  PRINT_ADR7:
00001290  43F9 000026B2            332          LEA         SEVEN_MSG, A1
00001296  103C 000E                333          MOVE.B      #14, D0    
0000129A  4E4F                     334          TRAP        #15
0000129C  6000 FEDA                335          BRA         PRINT_ADDRESS_LOOP
000012A0                           336  PRINT_ADR8:
000012A0  43F9 000026B4            337          LEA         EIGHT_MSG, A1
000012A6  103C 000E                338          MOVE.B      #14, D0    
000012AA  4E4F                     339          TRAP        #15
000012AC  6000 FECA                340          BRA         PRINT_ADDRESS_LOOP
000012B0                           341  PRINT_ADR9:
000012B0  43F9 000026B6            342          LEA         NINE_MSG, A1
000012B6  103C 000E                343          MOVE.B      #14, D0    
000012BA  4E4F                     344          TRAP        #15
000012BC  6000 FEBA                345          BRA         PRINT_ADDRESS_LOOP
000012C0                           346  PRINT_ADRA:
000012C0  43F9 000026B8            347          LEA         A_MSG, A1
000012C6  103C 000E                348          MOVE.B      #14, D0    
000012CA  4E4F                     349          TRAP        #15
000012CC  6000 FEAA                350          BRA         PRINT_ADDRESS_LOOP
000012D0                           351  PRINT_ADRB:
000012D0  43F9 000026BA            352          LEA         B_MSG, A1
000012D6  103C 000E                353          MOVE.B      #14, D0    
000012DA  4E4F                     354          TRAP        #15
000012DC  6000 FE9A                355          BRA         PRINT_ADDRESS_LOOP
000012E0                           356  PRINT_ADRC:
000012E0  43F9 000026BC            357          LEA         C_MSG, A1
000012E6  103C 000E                358          MOVE.B      #14, D0    
000012EA  4E4F                     359          TRAP        #15
000012EC  6000 FE8A                360          BRA         PRINT_ADDRESS_LOOP
000012F0                           361  PRINT_ADRD:
000012F0  43F9 000026BE            362          LEA         D_MSG, A1
000012F6  103C 000E                363          MOVE.B      #14, D0    
000012FA  4E4F                     364          TRAP        #15
000012FC  6000 FE7A                365          BRA         PRINT_ADDRESS_LOOP
00001300                           366  PRINT_ADRE:
00001300  43F9 000026C0            367          LEA         E_MSG, A1
00001306  103C 000E                368          MOVE.B      #14, D0    
0000130A  4E4F                     369          TRAP        #15
0000130C  6000 FE6A                370          BRA         PRINT_ADDRESS_LOOP
00001310                           371  PRINT_ADRF:
00001310  43F9 000026C2            372          LEA         F_MSG, A1
00001316  103C 000E                373          MOVE.B      #14, D0    
0000131A  4E4F                     374          TRAP        #15
0000131C  6000 FE5A                375          BRA         PRINT_ADDRESS_LOOP
00001320                           376  
00001320                           377  
00001320                           378  FILE_LOOP:
00001320  4280                     379          CLR.L       D0
00001322  4281                     380          CLR.L       D1
00001324  4282                     381          CLR.L       D2
00001326  4283                     382          CLR.L       D3
00001328  4284                     383          CLR.L       D4
0000132A  4285                     384          CLR.L       D5
0000132C  4286                     385          CLR.L       D6
0000132E  4287                     386          CLR.L       D7
00001330                           387          
00001330                           388  
00001330                           389  
00001330                           390  
00001330                           391          ;       Add branch here that will take the current address in A3
00001330                           392          ;       Turn it into characters and print it to the screen with space
00001330  4EB8 111E                393          JSR         PRINT_ADDRESS
00001334                           394          
00001334                           395          
00001334  381B                     396          MOVE.W      (A3)+, D4
00001336                           397          ; SIMHALT
00001336  4EB9 000013AE            398          JSR         JUMP_OP_CODE
0000133C                           399          
0000133C  43F9 000026D2            400          LEA         NEW_LINE, A1
00001342  103C 000E                401          MOVE.B      #14, D0
00001346  4E4F                     402          TRAP        #15
00001348                           403  
00001348                           404  
00001348  B9CB                     405          CMP.L      A3, A4
0000134A                           406          ;       If our pointer is at the end or beyond, BRA to DONE
0000134A  6700 0032                407          BEQ         DONE_CHECK
0000134E  6F00 002E                408          BLE         DONE_CHECK
00001352                           409          
00001352                           410  
00001352  BBCB                     411          CMP.L       A3, A5
00001354  6700 0008                412          BEQ         PRINT_DELAY
00001358  6F00 0004                413          BLE         PRINT_DELAY
0000135C                           414  
0000135C                           415  
0000135C                           416         
0000135C  60C2                     417          BRA         FILE_LOOP
0000135E                           418  
0000135E                           419  
0000135E                           420  
0000135E                           421  PRINT_DELAY:
0000135E                           422          ; SIMHALT
0000135E  43F9 000026D5            423          LEA         NEXT_PAGE_MSG, A1
00001364  103C 000E                424          MOVE.B      #14, D0    
00001368  4E4F                     425          TRAP        #15
0000136A                           426          
0000136A                           427  
0000136A  103C 0005                428          MOVE.B      #5, D0
0000136E  4E4F                     429          TRAP        #15
00001370                           430  
00001370  0C01 000D                431          CMPI.B      #13, D1
00001374  66E8                     432          BNE         PRINT_DELAY
00001376                           433  
00001376  DBFC 00000020            434          ADD.L       #32, A5
0000137C  60A2                     435          BRA         FILE_LOOP
0000137E                           436  
0000137E                           437  
0000137E                           438  DONE_CHECK:
0000137E  43F9 00002606            439          LEA         REPEAT_MSG, A1
00001384  103C 000E                440          MOVE.B      #14, D0    
00001388  4E4F                     441          TRAP        #15
0000138A                           442          
0000138A                           443  
0000138A  103C 0005                444          MOVE.B      #5, D0
0000138E  4E4F                     445          TRAP        #15
00001390                           446  
00001390  0C01 000D                447          CMPI.B      #13, D1
00001394  6600 0006                448          BNE         DONE
00001398                           449          
00001398  6000 FC66                450          BRA         START
0000139C                           451  
0000139C                           452  DONE:   
0000139C  43F9 00002648            453          LEA         GOODBYE_MSG, A1
000013A2  103C 000E                454          MOVE.B      #14, D0    
000013A6  4E4F                     455          TRAP        #15
000013A8  103C 0009                456          MOVE.B      #9, D0
000013AC  4E4F                     457          TRAP        #15
000013AE                           458          
000013AE                           459          
000013AE                           460          
000013AE                           461  * Put variables and constants here
000013AE                           462                  INCLUDE     'Disassembler_OP_Codes.x68'
000013AE                           463  
000013AE                           464  
000013AE                           465  
000013AE                           466  ; D4 Contains Original hex code
000013AE                           467  ; D3 Contains modified hex code
000013AE                           468  
000013AE                           469  ; D1 is used to bit shift
000013AE                           470  
000013AE                           471  
000013AE                           472  ; D4 = XXXX YYYY YYYY YYYY
000013AE                           473  JUMP_OP_CODE:
000013AE                           474          ; SIMHALT
000013AE  4283                     475          CLR.L       D3
000013B0  2604                     476          MOVE.L      D4, D3
000013B2  4281                     477          CLR.L       D1
000013B4  4282                     478          CLR.L       D2
000013B6  123C 000C                479          MOVE.B      #12, D1
000013BA  E26B                     480          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000013BC                           481  
000013BC                           482  
000013BC  B63C 0000                483          CMP.B       #$0, D3
000013C0  6700 006E                484          BEQ         JUMP_0 
000013C4  B63C 0001                485          CMP.B       #$1, D3
000013C8  6700 00A4                486          BEQ         JUMP_1 
000013CC  B63C 0002                487          CMP.B       #$2, D3
000013D0  6700 00AA                488          BEQ         JUMP_2
000013D4  B63C 0003                489          CMP.B       #$3, D3
000013D8  6700 00BA                490          BEQ         JUMP_3
000013DC  B63C 0004                491          CMP.B       #$4, D3
000013E0  6700 00CA                492          BEQ         JUMP_4
000013E4  B63C 0005                493          CMP.B       #$5, D3
000013E8  6700 0106                494          BEQ         JUMP_5
000013EC  B63C 0006                495          CMP.B       #$6, D3
000013F0  6700 0110                496          BEQ         JUMP_6
000013F4  B63C 0007                497          CMP.B       #$7, D3
000013F8  6700 012E                498          BEQ         JUMP_7
000013FC  B63C 0008                499          CMP.B       #$8, D3
00001400  6700 012E                500          BEQ         JUMP_8
00001404  B63C 0009                501          CMP.B       #$9, D3
00001408  6700 0546                502          BEQ         OP_CODE_SUB
0000140C  B63C 000B                503          CMP.B       #11, D3
00001410  6700 0148                504          BEQ         JUMP_B ; 
00001414                           505          
00001414  B63C 000C                506          CMP.B       #12, D3
00001418  6700 0166                507          BEQ         JUMP_C ;
0000141C                           508          
0000141C  B63C 000D                509          CMP.B       #13, D3
00001420  6700 017C                510          BEQ         JUMP_D ;
00001424                           511          
00001424  B63C 000E                512          CMP.B       #14, D3
00001428  6700 0190                513          BEQ         JUMP_E ;
0000142C                           514  
0000142C  6000 01A2                515          BRA         JUMP_ERROR
00001430                           516  
00001430                           517  
00001430                           518  
00001430                           519  
00001430                           520         
00001430                           521          
00001430                           522  JUMP_0:
00001430                           523          *ORI
00001430  4282                     524          CLR.L       D2
00001432  4EB9 00001680            525          JSR         Bits11to8
00001438  B43C 0000                526          CMP.B       #$0, D2  
0000143C  6700 0338                527          BEQ         OP_CODE_ORI
00001440  B43C 0002                528          CMP.B       #$2, D2  
00001444  6700 034A                529          BEQ         OP_CODE_ANDI
00001448  B43C 0004                530          CMP.B       #$4, D2  
0000144C  6700 035C                531          BEQ         OP_CODE_SUBI
00001450  B43C 0006                532          CMP.B       #$6, D2  
00001454  6700 036E                533          BEQ         OP_CODE_ADDI
00001458  B43C 000A                534          CMP.B       #$A, D2  
0000145C  6700 0380                535          BEQ         OP_CODE_EORI
00001460  B43C 000C                536          CMP.B       #$C, D2  
00001464  6700 0392                537          BEQ         OP_CODE_CMPI
00001468                           538          
00001468  6000 0174                539          BRA         INVALID_INSTR
0000146C  4E75                     540          RTS
0000146E                           541          
0000146E                           542  JUMP_1:
0000146E                           543  
0000146E  4EB9 000016C8            544          JSR         OP_CODE_BASE_MOVE
00001474  4EB9 00001DC4            545          JSR         EA_MOVE 
0000147A  4E75                     546          RTS
0000147C                           547  
0000147C                           548  
0000147C                           549  JUMP_2:
0000147C                           550  
0000147C  4EB9 0000165C            551          JSR         Bits8to6
00001482  B43C 0001                552          CMP.B       #$1, D2 
00001486  6700 025E                553          BEQ         J_MOVEA_L 
0000148A  6600 027E                554          BNE         J_MOVE_L
0000148E                           555  
0000148E                           556  
0000148E  6000 014E                557          BRA         INVALID_INSTR
00001492  4E75                     558          RTS
00001494                           559          
00001494                           560  JUMP_3:
00001494                           561  
00001494  4EB9 0000165C            562          JSR         Bits8to6
0000149A  0C02 0001                563          CMPI.B       #$1, D2 
0000149E  6700 028E                564          BEQ         J_MOVEA_W
000014A2  6600 02AE                565          BNE         J_MOVE_W
000014A6                           566      
000014A6  6000 0136                567          BRA INVALID_INSTR
000014AA                           568          
000014AA  4E75                     569          RTS
000014AC                           570  
000014AC                           571  JUMP_4:
000014AC                           572  
000014AC  4282                     573          CLR.L       D2
000014AE  3404                     574          MOVE.W      D4, D2
000014B0  B47C 4E71                575          CMP.W       #$4E71, D2 ;NOP 
000014B4  6700 035C                576          BEQ         OP_CODE_NOP
000014B8                           577          
000014B8  4EB9 0000165C            578          JSR         Bits8to6     ;
000014BE  B43C 0007                579          CMP.B       #7, D2
000014C2  6700 0384                580          BEQ         OP_CODE_LEA ;LEA
000014C6                           581  
000014C6  4EB9 0000168C            582          JSR         Bits11to9     ;
000014CC  B43C 0007                583          CMP.B       #7, D2
000014D0  6700 034E                584          BEQ         OP_CODE_JSR ;JSR
000014D4  B43C 0009                585          CMP.B       #9, D2
000014D8  6700 035A                586          BEQ         OP_CODE_JMP ;JMP
000014DC                           587          
000014DC  4EB9 00001668            588          JSR         Bits9to7
000014E2  B43C 0001                589          CMP.B       #1, D2
000014E6  6700 037A                590          BEQ         OP_CODE_MOVEM
000014EA                           591  
000014EA                           592  
000014EA                           593          
000014EA                           594          
000014EA  6000 00F2                595          BRA INVALID_INSTR
000014EE                           596          
000014EE  4E75                     597          RTS   
000014F0                           598  
000014F0                           599  
000014F0                           600  
000014F0                           601  
000014F0                           602  JUMP_5:
000014F0  4282                     603          CLR.L       D2
000014F2  2404                     604          MOVE.L      D4, D2
000014F4  0802 0008                605          BTST        #8,D2 
000014F8  6700 03D8                606          BEQ         OP_CODE_ADDQ  
000014FC  6000 03EE                607          BRA         OP_CODE_SUBQ
00001500  4E75                     608          RTS  
00001502                           609  JUMP_6:
00001502  4282                     610          CLR.L       D2
00001504  4EB9 00001680            611          JSR     Bits11to8     ;
0000150A  B43C 0000                612          CMP.B   #0, D2        ;
0000150E  6700 0514                613          BEQ     OP_CODE_BRA   ; 
00001512  B43C 0001                614          CMP.B   #1, D2        ;
00001516  6700 0520                615          BEQ     OP_CODE_BSR   ;
0000151A  B43C 0007                616          CMP.B   #7, D2        ;
0000151E  6700 052C                617          BEQ     OP_CODE_BEQ   ;
00001522                           618  
00001522  6000 00BA                619          BRA INVALID_INSTR
00001526                           620  
00001526  4E75                     621          RTS  
00001528                           622  JUMP_7:
00001528                           623          ; CLR.L       D2
00001528                           624          ; LEA         MOVEQ_MSG, A1
00001528                           625          ; MOVE.B      #14, D0
00001528                           626          ; TRAP        #15
00001528                           627          
00001528  4EB9 00001A60            628          JSR         OP_CODE_MOVEQ
0000152E                           629          
0000152E                           630          ; BRA         INVALID_INSTR 
0000152E  4E75                     631          RTS
00001530                           632  
00001530                           633  JUMP_8:
00001530  4282                     634          CLR.L       D2
00001532  4EB9 0000165C            635          JSR         Bits8to6  ;
00001538  B43C 0003                636          CMP.B       #3, D2    ;
0000153C  6700 03E2                637          BEQ         OP_CODE_DIVU ;
00001540  B43C 0007                638          CMP.B       #7, D2    ;
00001544  6700 03F2                639          BEQ         OP_CODE_DIVS ;
00001548  6000 0094                640          BRA         INVALID_INSTR
0000154C  4E75                     641          RTS
0000154E                           642  
0000154E                           643  JUMP_9:
0000154E  6000 008E                644          BRA         INVALID_INSTR
00001552  4E75                     645          RTS         
00001554                           646  
00001554                           647  JUMP_A:
00001554  6000 0088                648          BRA         INVALID_INSTR
00001558  4E75                     649          RTS 
0000155A                           650  JUMP_B:
0000155A  4282                     651          CLR.L       D2
0000155C  4EB9 0000165C            652          JSR         Bits8to6  ;
00001562                           653      ;CHECKING OPMODE FIELD
00001562  B43C 0000                654          CMP.B       #0, D2   ;
00001566  6700 039E                655          BEQ         OP_CODE_CMP ;
0000156A  B43C 0001                656          CMP.B       #1, D2    ;
0000156E  6700 0396                657          BEQ         OP_CODE_CMP ;
00001572  B43C 0002                658          CMP.B       #2, D2    ;
00001576  6700 038E                659          BEQ         OP_CODE_CMP ;
0000157A  6000 0062                660          BRA         INVALID_INSTR
0000157E  4E75                     661          RTS         
00001580                           662  
00001580                           663  JUMP_C:
00001580  4282                     664          CLR.L       D2
00001582  4EB9 0000165C            665          JSR         Bits8to6  ;
00001588  B47C 0003                666          CMP         #3, D2    ;
0000158C  6700 04FA                667          BEQ         OP_CODE_MULU ;
00001590  B47C 0007                668          CMP         #7, D2   ;
00001594  6700 04DE                669          BEQ         OP_CODE_MULS ;
00001598                           670  
00001598  6000 0044                671          BRA         INVALID_INSTR
0000159C  4E75                     672          RTS 
0000159E                           673  
0000159E                           674  JUMP_D:
0000159E  4282                     675          CLR.L       D2
000015A0  4EB9 00001638            676          JSR         Bits7to6  ;
000015A6  B43C 0003                677          CMP.B       #3, D2    ;
000015AA  6700 0508                678          BEQ         OP_CODE_ADDA
000015AE  4EF9 00001A9C            679          JMP         OP_CODE_ADD
000015B4  6000 0028                680          BRA         INVALID_INSTR
000015B8  4E75                     681          RTS 
000015BA                           682   
000015BA                           683   
000015BA                           684  JUMP_E:
000015BA  4282                     685          CLR.L       D2
000015BC                           686          
000015BC  4EB9 00001638            687          JSR         Bits7to6
000015C2                           688  
000015C2  B43C 0003                689          CMP.B       #3, D2
000015C6  6700 05E8                690          BEQ         OP_CODE_ASD_MEM
000015CA                           691          
000015CA  6000 0500                692          BRA         OP_CODE_ASD_REG
000015CE                           693          
000015CE  4E75                     694          RTS  
000015D0                           695           
000015D0                           696  JUMP_ERROR:       
000015D0  43F9 00001D3B            697          LEA         ERROR_OP_MSG, A1
000015D6  103C 000E                698          MOVE.B      #14, D0
000015DA  4E4F                     699          TRAP        #15
000015DC                           700  
000015DC  4E75                     701          RTS
000015DE                           702  
000015DE                           703  INVALID_INSTR:
000015DE  43F9 00001D4F            704          LEA         IMPLEMENT_MSG, A1
000015E4  103C 000E                705          MOVE.B      #14, D0
000015E8  4E4F                     706          TRAP        #15
000015EA  4E75                     707          RTS
000015EC                           708  
000015EC                           709  
000015EC                           710  
000015EC                           711  Bits2to0:
000015EC  3404                     712          MOVE.W      D4, D2
000015EE  103C 000D                713          MOVE.B      #13, D0     ; Shifting 13 bits
000015F2  E16A                     714          LSL.W       D0, D2      ; shorten to two bits
000015F4  E06A                     715          LSR.W       D0, D2      ; isolate two bits
000015F6  4E75                     716          RTS
000015F8                           717      
000015F8                           718  Bits3to0:
000015F8  3404                     719          MOVE.W      D4, D2
000015FA  103C 000C                720          MOVE.B      #12, D0     ; Shift 12 bits
000015FE  E16A                     721          LSL.W       D0, D2      ; Shorten to 4th bit
00001600  E06A                     722          LSR.W       D0, D2      ; Isolate 4 bits
00001602  4E75                     723          RTS
00001604                           724      
00001604                           725  Bits5to3:
00001604  3404                     726          MOVE.W      D4, D2
00001606  103C 000A                727          MOVE.B      #10, D0     ; Shift 10 bits
0000160A  E16A                     728          LSL.W       D0, D2      ; cut to 5th bit
0000160C  103C 000D                729          MOVE.B      #13, D0     ; Shift 13 bits
00001610  E06A                     730          LSR.W       D0, D2      ; Isolate bits 5-3
00001612  4E75                     731          RTS
00001614                           732  Bits4to3:
00001614  3404                     733          MOVE.W      D4, D2
00001616  103C 000B                734          MOVE.B      #11, D0     ; Shift 11 bits
0000161A  E16A                     735          LSL.W       D0, D2      ; cut to 5th bit
0000161C  103C 000E                736          MOVE.B      #14, D0     ; Shift 14 bits
00001620  E06A                     737          LSR.W       D0, D2      ; Isolate bits 4-3
00001622  4E75                     738          RTS
00001624                           739          
00001624                           740  Bits7to0:
00001624  3404                     741          MOVE.W      D4, D2
00001626  E14A                     742          LSL.W       #8, D2      ; cut to 8th bit
00001628  E04A                     743          LSR.W       #8, D2      ; Isolate 7-0
0000162A  4E75                     744          RTS
0000162C                           745  Bits7to4: 
0000162C  3404                     746          MOVE.W      D4, D2
0000162E  E14A                     747          LSL.W       #8, D2      ; cut to 8th bit
00001630  103C 000C                748          MOVE.B      #12, D0     ; shift 12 bits
00001634  E06A                     749          LSR.W       D0, D2      ; isolate 7-4
00001636  4E75                     750          RTS
00001638                           751      
00001638                           752  Bits7to6:
00001638  3404                     753          MOVE.W      D4, D2
0000163A  E14A                     754          LSL.W       #8, D2      ; cut to 8th bit
0000163C  103C 000E                755          MOVE.B      #14, D0     ; shift 14 bits
00001640  E06A                     756          LSR.W       D0, D2      ; isolate 7-6
00001642  4E75                     757          RTS
00001644                           758      
00001644                           759  Bits8to3:
00001644  3404                     760          MOVE.W      D4, D2
00001646  EF4A                     761          LSL.W       #7, D2      ; cut to 9th bit
00001648  103C 000A                762          MOVE.B      #10, D0     ; shift 10 bits
0000164C  E06A                     763          LSR.W       D0, D2      ; isolate 8-3
0000164E  4E75                     764          RTS
00001650                           765      
00001650                           766  Bits8to4:
00001650  3404                     767          MOVE.W      D4, D2
00001652  EF4A                     768          LSL.W       #7, D2      ; cut to 9th bit
00001654  103C 000B                769          MOVE.B      #11, D0     ; shift 11 bits
00001658  E06A                     770          LSR.W       D0, D2      ; isolate 8-4
0000165A  4E75                     771          RTS
0000165C                           772      
0000165C                           773  Bits8to6:
0000165C  3404                     774          MOVE.W      D4, D2
0000165E  EF4A                     775          LSL.W       #7, D2      ; cut to 9th bit
00001660  103C 000D                776          MOVE.B      #13, D0     ; shift 13 bits
00001664  E06A                     777          LSR.W       D0, D2      ; isolate 8-6
00001666  4E75                     778          RTS
00001668                           779  Bits9to7:
00001668  3404                     780          MOVE.W      D4, D2
0000166A  ED4A                     781          LSL.W       #6, D2      ; cut to 10th bit
0000166C  103C 000D                782          MOVE.B      #13, D0     ; shift 13 bits
00001670  E06A                     783          LSR.W       D0, D2      ; isolate 8-6
00001672  4E75                     784          RTS
00001674                           785  Bits11to6:
00001674  3404                     786          MOVE.W      D4, D2
00001676  E94A                     787          LSL.W       #4, D2      ; cut to 12th bit
00001678  103C 000A                788          MOVE.B      #10, D0     ; shift 10 bits
0000167C  E06A                     789          LSR.W       D0, D2      ; isolate 11-6
0000167E  4E75                     790          RTS
00001680                           791  
00001680                           792       
00001680                           793  Bits11to8:
00001680  3404                     794          MOVE.W      D4, D2
00001682  E94A                     795          LSL.W       #4, D2      ; cut to 12th bit
00001684  103C 000C                796          MOVE.B      #12, D0     ; shift 12 bits
00001688  E06A                     797          LSR.W       D0, D2      ; isolate 11-8
0000168A  4E75                     798          RTS
0000168C                           799  
0000168C                           800  Bits11to9:
0000168C  3404                     801          MOVE.W      D4, D2
0000168E  E94A                     802          LSL.W       #4, D2      ; cut to 12th bit
00001690  103C 000D                803          MOVE.B      #13, D0     ; shift 13 bits
00001694  E06A                     804          LSR.W       D0, D2      ; isolate 11-9
00001696  4E75                     805          RTS
00001698                           806  
00001698                           807  Bit0:
00001698  3404                     808          MOVE.W      D4, D2
0000169A  103C 000F                809          MOVE.B      #15, D0
0000169E  E16A                     810          LSL.W       D0, D2     
000016A0  103C 000F                811          MOVE.B      #15, D0     
000016A4  E06A                     812          LSR.W       D0, D2     
000016A6  4E75                     813          RTS
000016A8                           814  
000016A8                           815  Bit5:
000016A8  3404                     816          MOVE.W      D4, D2
000016AA  103C 000A                817          MOVE.B      #10, D0
000016AE  E16A                     818          LSL.W       D0, D2     
000016B0  103C 000F                819          MOVE.B      #15, D0     
000016B4  E06A                     820          LSR.W       D0, D2     
000016B6  4E75                     821          RTS
000016B8                           822          
000016B8                           823  Bit6:
000016B8  3404                     824          MOVE.W      D4, D2
000016BA  103C 000B                825          MOVE.B      #11, D0
000016BE  E16A                     826          LSL.W       D0, D2     
000016C0  103C 000F                827          MOVE.B      #15, D0     
000016C4  E06A                     828          LSR.W       D0, D2     
000016C6  4E75                     829          RTS        
000016C8                           830  
000016C8                           831  
000016C8                           832  
000016C8                           833  OP_CODE_BASE_MOVE:
000016C8                           834          ; This should only execute for Move.B
000016C8  43F9 00001C9A            835          LEA         MOVE_MSG, A1
000016CE  103C 000E                836          MOVE.B      #14, D0
000016D2  4E4F                     837          TRAP        #15
000016D4  43F9 00001D32            838          LEA         BYTE_MSG, A1
000016DA  103C 000E                839          MOVE.B      #14, D0
000016DE  4E4F                     840          TRAP        #15
000016E0                           841          
000016E0  163C 0000                842          MOVE.B      #0, D3
000016E4                           843          
000016E4                           844          
000016E4                           845          
000016E4  4E75                     846          RTS         
000016E6                           847  
000016E6                           848  J_MOVEA_L:
000016E6  43F9 00001C9F            849          LEA         MOVEA_MSG, A1
000016EC  103C 000E                850          MOVE.B      #14, D0
000016F0  4E4F                     851          TRAP        #15
000016F2  43F9 00001D38            852          LEA         LONG_MSG, A1
000016F8  103C 000E                853          MOVE.B      #14, D0
000016FC  4E4F                     854          TRAP        #15
000016FE                           855          
000016FE  163C 0002                856          MOVE.B      #2, D3
00001702  4EB9 00001DC4            857          JSR         EA_MOVE
00001708  4E75                     858          RTS    
0000170A                           859  J_MOVE_L:
0000170A  43F9 00001C9A            860          LEA         MOVE_MSG, A1
00001710  103C 000E                861          MOVE.B      #14, D0
00001714  4E4F                     862          TRAP        #15
00001716  43F9 00001D38            863          LEA         LONG_MSG, A1
0000171C  103C 000E                864          MOVE.B      #14, D0
00001720  4E4F                     865          TRAP        #15
00001722                           866          
00001722  163C 0002                867          MOVE.B      #2, D3
00001726  4EB9 00001DC4            868          JSR         EA_MOVE
0000172C                           869          
0000172C  4E75                     870          RTS
0000172E                           871  
0000172E                           872  
0000172E                           873  
0000172E                           874  J_MOVEA_W:
0000172E  43F9 00001C9F            875          LEA         MOVEA_MSG, A1
00001734  103C 000E                876          MOVE.B      #14, D0
00001738  4E4F                     877          TRAP        #15
0000173A  43F9 00001D35            878          LEA         WORD_MSG, A1
00001740  103C 000E                879          MOVE.B      #14, D0
00001744  4E4F                     880          TRAP        #15
00001746                           881          
00001746  163C 0001                882          MOVE.B      #1, D3
0000174A  4EB9 00001DC4            883          JSR         EA_MOVE
00001750                           884          
00001750  4E75                     885          RTS  
00001752                           886      
00001752                           887  J_MOVE_W:
00001752  43F9 00001C9A            888          LEA         MOVE_MSG, A1
00001758  103C 000E                889          MOVE.B      #14, D0
0000175C  4E4F                     890          TRAP        #15
0000175E  43F9 00001D35            891          LEA         WORD_MSG, A1
00001764  103C 000E                892          MOVE.B      #14, D0
00001768  4E4F                     893          TRAP        #15
0000176A                           894          
0000176A  163C 0001                895          MOVE.B      #1, D3
0000176E  4EB9 00001DC4            896          JSR         EA_MOVE
00001774                           897          
00001774  4E75                     898          RTS  
00001776                           899  
00001776                           900  OP_CODE_ORI:
00001776  43F9 00001CA5            901          LEA         ORI_MSG, A1
0000177C  103C 000E                902          MOVE.B      #14, D0
00001780  4E4F                     903          TRAP        #15
00001782                           904          
00001782  4EB9 000019BE            905          JSR         OPMODE_ASHIFT    
00001788  4EB9 00001E2A            906          JSR         ABS_DATASRC_EA
0000178E  4E75                     907          RTS
00001790                           908          
00001790                           909  OP_CODE_ANDI:
00001790  43F9 00001CA9            910          LEA         ANDI_MSG, A1
00001796  103C 000E                911          MOVE.B      #14, D0
0000179A  4E4F                     912          TRAP        #15
0000179C                           913          
0000179C  4EB9 000019BE            914          JSR         OPMODE_ASHIFT    
000017A2  4EB9 00001E2A            915          JSR         ABS_DATASRC_EA
000017A8  4E75                     916          RTS
000017AA                           917          
000017AA                           918  OP_CODE_SUBI:
000017AA  43F9 00001CAE            919          LEA         SUBI_MSG, A1
000017B0  103C 000E                920          MOVE.B      #14, D0
000017B4  4E4F                     921          TRAP        #15
000017B6                           922          
000017B6  4EB9 000019BE            923          JSR         OPMODE_ASHIFT    
000017BC  4EB9 00001E2A            924          JSR         ABS_DATASRC_EA
000017C2  4E75                     925          RTS
000017C4                           926          
000017C4                           927  OP_CODE_ADDI:
000017C4  43F9 00001CB3            928          LEA         ADDI_MSG, A1
000017CA  103C 000E                929          MOVE.B      #14, D0
000017CE  4E4F                     930          TRAP        #15
000017D0                           931          
000017D0  4EB9 000019BE            932          JSR         OPMODE_ASHIFT    
000017D6  4EB9 00001E2A            933          JSR         ABS_DATASRC_EA
000017DC  4E75                     934          RTS
000017DE                           935          
000017DE                           936  OP_CODE_EORI:
000017DE  43F9 00001CB8            937          LEA         EORI_MSG, A1
000017E4  103C 000E                938          MOVE.B      #14, D0
000017E8  4E4F                     939          TRAP        #15
000017EA                           940          
000017EA  4EB9 000019BE            941          JSR         OPMODE_ASHIFT    
000017F0  4EB9 00001E2A            942          JSR         ABS_DATASRC_EA
000017F6  4E75                     943          RTS
000017F8                           944          
000017F8                           945  OP_CODE_CMPI:
000017F8  43F9 00001CBD            946          LEA         CMPI_MSG, A1
000017FE  103C 000E                947          MOVE.B      #14, D0
00001802  4E4F                     948          TRAP        #15
00001804                           949          
00001804  4EB9 000019BE            950          JSR         OPMODE_ASHIFT    
0000180A  4EB9 00001E2A            951          JSR         ABS_DATASRC_EA
00001810  4E75                     952          RTS
00001812                           953  OP_CODE_NOP:
00001812  43F9 00001CC2            954          LEA         NOP_MSG, A1
00001818  103C 000E                955          MOVE.B      #14, D0
0000181C  4E4F                     956          TRAP        #15
0000181E                           957  
0000181E  4E75                     958          RTS
00001820                           959             
00001820                           960  
00001820                           961  OP_CODE_JSR:
00001820  43F9 00001CD0            962          LEA         JSR_MSG, A1
00001826  103C 000E                963          MOVE.B      #14, D0
0000182A  4E4F                     964          TRAP        #15
0000182C                           965          
0000182C  4EB9 00001DFE            966          JSR         EA_GENERIC
00001832                           967  
00001832  4E75                     968          RTS
00001834                           969          
00001834                           970  OP_CODE_JMP:
00001834  43F9 00001CD4            971          LEA         JMP_MSG, A1
0000183A  103C 000E                972          MOVE.B      #14, D0
0000183E  4E4F                     973          TRAP        #15
00001840                           974          
00001840  4EB9 00001DFE            975          JSR         EA_GENERIC
00001846                           976  
00001846  4E75                     977          RTS        
00001848                           978          
00001848                           979  OP_CODE_LEA:
00001848  43F9 00001CCC            980          LEA         LEA_MSG, A1
0000184E  103C 000E                981          MOVE.B      #14, D0
00001852  4E4F                     982          TRAP        #15
00001854                           983          
00001854  4283                     984          CLR.L       D3
00001856  163C 0002                985          MOVE.B      #2, D3
0000185A                           986  
0000185A                           987          *EA
0000185A  4EB9 00001E84            988          JSR         EA_ASRC
00001860                           989  
00001860  4E75                     990          RTS
00001862                           991  
00001862                           992  OP_CODE_MOVEM:
00001862                           993          ;JSR         Bits9to7 ;check for MOVEM and EXT
00001862                           994          ;CMP.B       #1, D2   ;
00001862                           995          ;BEQ         MOVEM_OR_EXT
00001862                           996          ;JMP         INVALID_INSTR 
00001862  0802 0006                997          BTST        #6, D2
00001866  6700 0014                998          BEQ         MOVEM_W
0000186A  6000 0034                999          BRA         MOVEM_L
0000186E                          1000          
0000186E                          1001          
0000186E  4E75                    1002          RTS
00001870                          1003          
00001870                          1004          
00001870                          1005  MOVEM_OR_EXT:
00001870  4EB8 1604               1006          JSR         Bits5to3  ;
00001874  B43C 0000               1007          CMP.B       #0, D2    ;
00001878  6700 004A               1008          BEQ         OP_CODE_EXT ;
0000187C                          1009          
0000187C                          1010          ;MOVE.W      D4, D2
0000187C                          1011          ;BTST        #10, D2
0000187C                          1012          ;BEQ         MOVEM_SIZE
0000187C                          1013          
0000187C                          1014          
0000187C                          1015  MOVEM_W:
0000187C  43F9 00001CC6           1016          LEA         MOVEM_MSG, A1
00001882  103C 000E               1017          MOVE.B      #14, D0
00001886  4E4F                    1018          TRAP        #15
00001888  43F9 00001D35           1019          LEA         WORD_MSG, A1
0000188E  103C 000E               1020          MOVE.B      #14, D0
00001892  4E4F                    1021          TRAP        #15
00001894                          1022          
00001894  163C 0001               1023          MOVE.B      #1, D3
00001898                          1024    
00001898  4EB9 00001F56           1025          JSR         EA_MOVEM
0000189E  4E75                    1026          RTS
000018A0                          1027          
000018A0                          1028  MOVEM_L:
000018A0  43F9 00001CC6           1029          LEA         MOVEM_MSG, A1
000018A6  103C 000E               1030          MOVE.B      #14, D0
000018AA  4E4F                    1031          TRAP        #15
000018AC  43F9 00001D38           1032          LEA         LONG_MSG, A1
000018B2  103C 000E               1033          MOVE.B      #14, D0
000018B6  4E4F                    1034          TRAP        #15 
000018B8  163C 0002               1035          MOVE.B      #2, D3
000018BC                          1036    
000018BC  4EB9 00001DC4           1037          JSR         EA_MOVE
000018C2                          1038          
000018C2                          1039          
000018C2  4E75                    1040          RTS   
000018C4                          1041           
000018C4                          1042  OP_CODE_EXT:
000018C4  43F9 00001D28           1043          LEA         EXT_MSG, A1
000018CA  103C 000E               1044          MOVE.B      #14, D0
000018CE  4E4F                    1045          TRAP        #15
000018D0  4E75                    1046          RTS
000018D2                          1047  
000018D2                          1048  
000018D2                          1049  ;MOVEM_CHECK:
000018D2                          1050  ;        CLR.L       D2
000018D2                          1051  ;        MOVE.L      D4, D2
000018D2                          1052  ;        BTST        #11,D2 ;
000018D2                          1053  ;        BNE         OP_CODE_MOVEM
000018D2                          1054  ;        JMP         INVALID_INSTR               
000018D2                          1055  
000018D2                          1056  
000018D2                          1057  OP_CODE_ADDQ:
000018D2  43F9 00001C90           1058          LEA         ADDQ_MSG, A1
000018D8  103C 000E               1059          MOVE.B      #14, D0
000018DC  4E4F                    1060          TRAP        #15
000018DE                          1061          
000018DE  4EB9 000019BE           1062          JSR         OPMODE_ASHIFT
000018E4                          1063          
000018E4  4EB9 000021CE           1064          JSR         EA_ADDQ
000018EA                          1065          
000018EA  4E75                    1066          RTS
000018EC                          1067  OP_CODE_SUBQ:
000018EC  43F9 00001C95           1068          LEA         SUBQ_MSG, A1
000018F2  103C 000E               1069          MOVE.B      #14, D0
000018F6  4E4F                    1070          TRAP        #15
000018F8                          1071          
000018F8  4EB9 000019BE           1072          JSR         OPMODE_ASHIFT
000018FE                          1073          
000018FE  4EB9 000021CE           1074          JSR         EA_ADDQ
00001904                          1075          
00001904  4E75                    1076          RTS        
00001906                          1077   
00001906                          1078  OP_CODE_CMP:
00001906                          1079  
00001906  43F9 00001CF9           1080          LEA         CMP_MSG, A1
0000190C  103C 000E               1081          MOVE.B      #14, D0
00001910  4E4F                    1082          TRAP        #15
00001912                          1083          
00001912  4EB9 0000196A           1084          JSR         OPMODE
00001918  4EB9 00001E42           1085          JSR         REVERSESRC_EA
0000191E                          1086          
0000191E  4E75                    1087          RTS
00001920                          1088          
00001920                          1089  OP_CODE_DIVU:
00001920  43F9 00001CEB           1090          LEA         DIVU_MSG, A1
00001926  103C 000E               1091          MOVE.B      #14, D0
0000192A  4E4F                    1092          TRAP        #15
0000192C                          1093          
0000192C  163C 0001               1094          MOVE.B      #1, D3        
00001930  4EB9 00001EA6           1095          JSR         EA_DSRC
00001936                          1096          
00001936  4E75                    1097          RTS
00001938                          1098          
00001938                          1099  OP_CODE_DIVS:
00001938  43F9 00001CF0           1100          LEA         DIVS_MSG, A1
0000193E  103C 000E               1101          MOVE.B      #14, D0
00001942  4E4F                    1102          TRAP        #15
00001944                          1103          
00001944  163C 0001               1104          MOVE.B      #1, D3        
00001948  4EB9 00001EA6           1105          JSR         EA_DSRC
0000194E                          1106          
0000194E  4E75                    1107          RTS
00001950                          1108  
00001950                          1109  OP_CODE_SUB:
00001950  43F9 00001CF5           1110          LEA         SUB_MSG, A1
00001956  103C 000E               1111          MOVE.B      #14, D0
0000195A  4E4F                    1112          TRAP        #15
0000195C                          1113          
0000195C  4EB9 0000196A           1114          JSR         OPMODE
00001962                          1115          
00001962  4EB9 00001E42           1116          JSR         REVERSESRC_EA
00001968                          1117          
00001968  4E75                    1118          RTS
0000196A                          1119          
0000196A                          1120  OPMODE:
0000196A  4EB8 165C               1121          JSR         Bits8to6
0000196E  B43C 0000               1122          CMP.B       #0, D2
00001972  6700 006C               1123          BEQ         PRINT_BYTE
00001976  B43C 0004               1124          CMP.B       #4, D2
0000197A  6700 0064               1125          BEQ         PRINT_BYTE
0000197E                          1126          
0000197E  B43C 0001               1127          CMP.B       #1, D2
00001982  6700 006E               1128          BEQ         PRINT_WORD
00001986  B43C 0005               1129          CMP.B       #5, D2
0000198A  6700 0066               1130          BEQ         PRINT_WORD
0000198E                          1131          
0000198E  B43C 0002               1132          CMP.B       #2, D2
00001992  6700 0070               1133          BEQ         PRINT_LONG
00001996  B43C 0006               1134          CMP.B       #6, D2
0000199A  6700 0068               1135          BEQ         PRINT_LONG
0000199E                          1136          
0000199E  4EB9 00001A16           1137          JSR         WRONG_SIZE
000019A4                          1138          
000019A4                          1139  OPMODE_ADDA:
000019A4  4EB8 165C               1140          JSR         Bits8to6
000019A8  B43C 0003               1141          CMP.B       #3, D2
000019AC  6700 0044               1142          BEQ         PRINT_WORD 
000019B0  B43C 0007               1143          CMP.B       #7, D2
000019B4  6700 004E               1144          BEQ         PRINT_LONG
000019B8  4EB9 00001A16           1145          JSR         WRONG_SIZE        
000019BE                          1146  
000019BE                          1147  OPMODE_ASHIFT:
000019BE  4EB8 1638               1148          JSR         Bits7to6
000019C2  B43C 0000               1149          CMP.B       #0, D2
000019C6  6700 0018               1150          BEQ         PRINT_BYTE
000019CA  B43C 0001               1151          CMP.B       #1, D2
000019CE  6700 0022               1152          BEQ         PRINT_WORD
000019D2  B43C 0002               1153          CMP.B       #2, D2
000019D6  6700 002C               1154          BEQ         PRINT_LONG
000019DA                          1155  
000019DA  4EB9 00001A16           1156          JSR         WRONG_SIZE
000019E0                          1157          
000019E0                          1158  PRINT_BYTE:
000019E0  43F9 00001D32           1159          LEA         BYTE_MSG, A1
000019E6  103C 000E               1160          MOVE.B      #14, D0
000019EA  4E4F                    1161          TRAP        #15
000019EC                          1162          
000019EC  163C 0000               1163          MOVE.B      #0, D3
000019F0  4E75                    1164          RTS
000019F2                          1165  
000019F2                          1166  PRINT_WORD:
000019F2  43F9 00001D35           1167          LEA         WORD_MSG, A1
000019F8  103C 000E               1168          MOVE.B      #14, D0
000019FC  4E4F                    1169          TRAP        #15
000019FE  163C 0001               1170          MOVE.B      #1, D3
00001A02  4E75                    1171          RTS
00001A04                          1172  
00001A04                          1173  PRINT_LONG:
00001A04  43F9 00001D38           1174          LEA         LONG_MSG, A1
00001A0A  103C 000E               1175          MOVE.B      #14, D0
00001A0E  4E4F                    1176          TRAP        #15
00001A10  163C 0002               1177          MOVE.B      #2, D3
00001A14  4E75                    1178          RTS
00001A16                          1179  
00001A16                          1180  WRONG_SIZE:
00001A16  43F9 00001D7B           1181          LEA         ERROR_SIZE_MSG, A1
00001A1C  103C 000E               1182          MOVE.B      #14, D0
00001A20  4E4F                    1183          TRAP        #15
00001A22  4E75                    1184          RTS
00001A24                          1185          
00001A24                          1186  OP_CODE_BRA:
00001A24  43F9 00001CD8           1187          LEA         BRA_MSG, A1
00001A2A  103C 000E               1188          MOVE.B      #14, D0
00001A2E  4E4F                    1189          TRAP        #15
00001A30                          1190          
00001A30  4EB9 000020DA           1191          JSR         EA_BRA
00001A36                          1192          
00001A36  4E75                    1193          RTS
00001A38                          1194  
00001A38                          1195  OP_CODE_BSR:
00001A38  43F9 00001CDC           1196          LEA         BSR_MSG, A1
00001A3E  103C 000E               1197          MOVE.B      #14, D0
00001A42  4E4F                    1198          TRAP        #15
00001A44                          1199          
00001A44  4EB9 000020DA           1200          JSR         EA_BRA
00001A4A                          1201          
00001A4A  4E75                    1202          RTS
00001A4C                          1203  OP_CODE_BEQ:
00001A4C  43F9 00001CE0           1204          LEA         BEQ_MSG, A1
00001A52  103C 000E               1205          MOVE.B      #14, D0
00001A56  4E4F                    1206          TRAP        #15
00001A58                          1207          
00001A58  4EB9 000020DA           1208          JSR         EA_BRA
00001A5E                          1209          
00001A5E  4E75                    1210          RTS
00001A60                          1211          
00001A60                          1212          
00001A60                          1213          
00001A60                          1214  OP_CODE_MOVEQ:
00001A60  43F9 00001CE4           1215          LEA         MOVEQ_MSG, A1
00001A66  103C 000E               1216          MOVE.B      #14, D0
00001A6A  4E4F                    1217          TRAP        #15
00001A6C                          1218          
00001A6C  4EB9 0000218C           1219          JSR         EA_MOVEQ
00001A72                          1220          
00001A72  4E75                    1221          RTS
00001A74                          1222  
00001A74                          1223  OP_CODE_MULS:
00001A74  43F9 00001D02           1224          LEA         MULS_MSG, A1
00001A7A  103C 000E               1225          MOVE.B      #14, D0
00001A7E  4E4F                    1226          TRAP        #15
00001A80                          1227          
00001A80  4EB9 00001E42           1228          JSR         REVERSESRC_EA
00001A86                          1229          
00001A86  4E75                    1230          RTS
00001A88                          1231          
00001A88                          1232  OP_CODE_MULU:
00001A88  43F9 00001CFD           1233          LEA         MULU_MSG, A1
00001A8E  103C 000E               1234          MOVE.B      #14, D0
00001A92  4E4F                    1235          TRAP        #15
00001A94                          1236          
00001A94  4EB9 00001E42           1237          JSR         REVERSESRC_EA
00001A9A  4E75                    1238          RTS
00001A9C                          1239  
00001A9C                          1240  OP_CODE_ADD:
00001A9C  43F9 00001D07           1241          LEA         ADD_MSG, A1
00001AA2  103C 000E               1242          MOVE.B      #14, D0
00001AA6  4E4F                    1243          TRAP        #15
00001AA8                          1244          
00001AA8  4EB8 196A               1245          JSR         OPMODE
00001AAC  4EB9 00001E60           1246          JSR         EA_ADD
00001AB2                          1247          
00001AB2  4E75                    1248          RTS
00001AB4                          1249          
00001AB4                          1250  OP_CODE_ADDA:
00001AB4  43F9 00001D0B           1251          LEA         ADDA_MSG, A1
00001ABA  103C 000E               1252          MOVE.B      #14, D0
00001ABE  4E4F                    1253          TRAP        #15
00001AC0                          1254          
00001AC0  4EB8 19A4               1255          JSR         OPMODE_ADDA
00001AC4  4EB9 00001E84           1256          JSR         EA_ASRC
00001ACA                          1257          
00001ACA  4E75                    1258          RTS
00001ACC                          1259          
00001ACC                          1260        
00001ACC                          1261  
00001ACC                          1262  OP_CODE_ASD_REG:
00001ACC  4282                    1263          CLR.L       D2
00001ACE  3404                    1264          MOVE.W      D4, D2
00001AD0  0802 0008               1265          BTST        #8, D2
00001AD4  6700 002A               1266          BEQ         RIGHT_REG
00001AD8  6000 0006               1267          BRA         LEFT_REG
00001ADC  4E75                    1268          RTS
00001ADE                          1269  
00001ADE  4E75                    1270          RTS
00001AE0                          1271  LEFT_REG:
00001AE0  4282                    1272          CLR.L       D2
00001AE2  4EB8 1614               1273          JSR         Bits4to3
00001AE6  B43C 0000               1274          CMP.B       #0, D2
00001AEA  6700 0034               1275          BEQ         ASL_REG
00001AEE  B43C 0001               1276          CMP.B       #1, D2
00001AF2  6700 0044               1277          BEQ         LSL_REG
00001AF6  B43C 0003               1278          CMP.B       #3, D2
00001AFA  6700 0054               1279          BEQ         ROL_REG
00001AFE                          1280          
00001AFE  4E75                    1281          RTS
00001B00                          1282          
00001B00                          1283  RIGHT_REG:
00001B00  4282                    1284          CLR.L       D2
00001B02  4EB8 1614               1285          JSR         Bits4to3
00001B06  B43C 0000               1286          CMP.B       #0, D2
00001B0A  6700 005C               1287          BEQ         ASR_REG
00001B0E  B43C 0001               1288          CMP.B       #1, D2
00001B12  6700 006C               1289          BEQ         LSR_REG
00001B16  B43C 0003               1290          CMP.B       #3, D2
00001B1A  6700 007C               1291          BEQ         ROR_REG
00001B1E                          1292          
00001B1E  4E75                    1293          RTS   
00001B20                          1294  ASL_REG:
00001B20  43F9 00001D10           1295          LEA         ASL_MSG, A1
00001B26  103C 000E               1296          MOVE.B      #14, D0
00001B2A  4E4F                    1297          TRAP        #15 
00001B2C  4EB8 19BE               1298          JSR         OPMODE_ASHIFT
00001B30  4EB9 00001EC8           1299          JSR         EA_AS
00001B36                          1300          
00001B36  4E75                    1301          RTS
00001B38                          1302  LSL_REG:
00001B38  43F9 00001D18           1303          LEA         LSL_MSG, A1
00001B3E  103C 000E               1304          MOVE.B      #14, D0
00001B42  4E4F                    1305          TRAP        #15 
00001B44  4EB8 19BE               1306          JSR         OPMODE_ASHIFT
00001B48  4EB9 00001EC8           1307          JSR         EA_AS
00001B4E                          1308          
00001B4E  4E75                    1309          RTS
00001B50                          1310  ROL_REG:
00001B50  43F9 00001D20           1311          LEA         ROL_MSG, A1
00001B56  103C 000E               1312          MOVE.B      #14, D0
00001B5A  4E4F                    1313          TRAP        #15 
00001B5C  4EB8 19BE               1314          JSR         OPMODE_ASHIFT
00001B60  4EB9 00001EC8           1315          JSR         EA_AS
00001B66                          1316          
00001B66  4E75                    1317          RTS
00001B68                          1318  ASR_REG:
00001B68  43F9 00001D14           1319          LEA         ASR_MSG, A1
00001B6E  103C 000E               1320          MOVE.B      #14, D0
00001B72  4E4F                    1321          TRAP        #15 
00001B74  4EB8 19BE               1322          JSR         OPMODE_ASHIFT
00001B78  4EB9 00001EC8           1323          JSR         EA_AS
00001B7E                          1324          
00001B7E  4E75                    1325          RTS
00001B80                          1326  LSR_REG:
00001B80  43F9 00001D1C           1327          LEA         LSR_MSG, A1
00001B86  103C 000E               1328          MOVE.B      #14, D0
00001B8A  4E4F                    1329          TRAP        #15 
00001B8C  4EB8 19BE               1330          JSR         OPMODE_ASHIFT
00001B90  4EB9 00001EC8           1331          JSR         EA_AS
00001B96                          1332          
00001B96  4E75                    1333          RTS
00001B98                          1334  ROR_REG:
00001B98  43F9 00001D24           1335          LEA         ROR_MSG, A1
00001B9E  103C 000E               1336          MOVE.B      #14, D0
00001BA2  4E4F                    1337          TRAP        #15
00001BA4  4EB8 19BE               1338          JSR         OPMODE_ASHIFT
00001BA8  4EB9 00001EC8           1339          JSR         EA_AS
00001BAE                          1340          
00001BAE  4E75                    1341          RTS
00001BB0                          1342  
00001BB0                          1343  OP_CODE_ASD_MEM:
00001BB0  4282                    1344          CLR.L       D2
00001BB2  3404                    1345          MOVE.W      D4, D2
00001BB4  0802 0008               1346          BTST        #8, D2
00001BB8  6700 0010               1347          BEQ         RIGHT_MEM
00001BBC  6000 0006               1348          BRA         LEFT_MEM
00001BC0  4E75                    1349          RTS
00001BC2                          1350  
00001BC2  4E75                    1351          RTS
00001BC4                          1352  LEFT_MEM:
00001BC4  6000 000A               1353          BRA         ASL_MEM
00001BC8                          1354  
00001BC8  4E75                    1355          RTS
00001BCA                          1356          
00001BCA                          1357  RIGHT_MEM:
00001BCA                          1358  
00001BCA  6000 0064               1359          BRA         ASR_MEM
00001BCE                          1360  
00001BCE  4E75                    1361          RTS        
00001BD0                          1362  
00001BD0                          1363  ASL_MEM:
00001BD0  43F9 00001D10           1364          LEA         ASL_MSG, A1
00001BD6  103C 000E               1365          MOVE.B      #14, D0
00001BDA  4E4F                    1366          TRAP        #15
00001BDC  43F9 000026A1           1367          LEA         SPACE_MSG, A1
00001BE2  103C 000E               1368          MOVE.B      #14, D0
00001BE6  4E4F                    1369          TRAP        #15        
00001BE8  4EB9 00001DFE           1370          JSR         EA_GENERIC        
00001BEE  4E75                    1371          RTS
00001BF0                          1372  LSL_MEM:
00001BF0  43F9 00001D18           1373          LEA         LSL_MSG, A1
00001BF6  103C 000E               1374          MOVE.B      #14, D0
00001BFA  4E4F                    1375          TRAP        #15 
00001BFC  43F9 000026A1           1376          LEA         SPACE_MSG, A1
00001C02  103C 000E               1377          MOVE.B      #14, D0
00001C06  4E4F                    1378          TRAP        #15 
00001C08  4EB9 00001DFE           1379          JSR         EA_GENERIC
00001C0E  4E75                    1380          RTS        
00001C10                          1381  ROL_MEM:
00001C10  43F9 00001D20           1382          LEA         ROL_MSG, A1
00001C16  103C 000E               1383          MOVE.B      #14, D0
00001C1A  4E4F                    1384          TRAP        #15        
00001C1C  43F9 000026A1           1385          LEA         SPACE_MSG, A1
00001C22  103C 000E               1386          MOVE.B      #14, D0
00001C26  4E4F                    1387          TRAP        #15      
00001C28  4EB9 00001DFE           1388          JSR         EA_GENERIC        
00001C2E  4E75                    1389          RTS
00001C30                          1390  ASR_MEM:
00001C30  43F9 00001D14           1391          LEA         ASR_MSG, A1
00001C36  103C 000E               1392          MOVE.B      #14, D0
00001C3A  4E4F                    1393          TRAP        #15
00001C3C  43F9 000026A1           1394          LEA         SPACE_MSG, A1
00001C42  103C 000E               1395          MOVE.B      #14, D0
00001C46  4E4F                    1396          TRAP        #15        
00001C48  4EB9 00001DFE           1397          JSR         EA_GENERIC        
00001C4E  4E75                    1398          RTS
00001C50                          1399  LSR_MEM:
00001C50  43F9 00001D1C           1400          LEA         LSR_MSG, A1
00001C56  103C 000E               1401          MOVE.B      #14, D0
00001C5A  4E4F                    1402          TRAP        #15 
00001C5C  43F9 000026A1           1403          LEA         SPACE_MSG, A1
00001C62  103C 000E               1404          MOVE.B      #14, D0
00001C66  4E4F                    1405          TRAP        #15 
00001C68  4EB9 00001DFE           1406          JSR         EA_GENERIC
00001C6E  4E75                    1407          RTS        
00001C70                          1408  ROR_MEM:
00001C70  43F9 00001D24           1409          LEA         ROR_MSG, A1
00001C76  103C 000E               1410          MOVE.B      #14, D0
00001C7A  4E4F                    1411          TRAP        #15        
00001C7C  43F9 000026A1           1412          LEA         SPACE_MSG, A1
00001C82  103C 000E               1413          MOVE.B      #14, D0
00001C86  4E4F                    1414          TRAP        #15      
00001C88  4EB9 00001DFE           1415          JSR         EA_GENERIC        
00001C8E  4E75                    1416          RTS
00001C90                          1417  
00001C90                          1418  
00001C90                          1419  
00001C90= 41 44 44 51 00          1420  ADDQ_MSG:       DC.B        'ADDQ',0
00001C95= 53 55 42 51 00          1421  SUBQ_MSG:       DC.B        'SUBQ',0
00001C9A= 4D 4F 56 45 00          1422  MOVE_MSG:       DC.B        'MOVE',0
00001C9F= 4D 4F 56 45 41 00       1423  MOVEA_MSG:      DC.B        'MOVEA',0
00001CA5= 4F 52 49 00             1424  ORI_MSG:        DC.B        'ORI',0
00001CA9= 41 4E 44 49 00          1425  ANDI_MSG:       DC.B        'ANDI',0
00001CAE= 53 55 42 49 00          1426  SUBI_MSG:       DC.B        'SUBI',0
00001CB3= 41 44 44 49 00          1427  ADDI_MSG:       DC.B        'ADDI',0
00001CB8= 45 4F 52 49 00          1428  EORI_MSG:       DC.B        'EORI',0
00001CBD= 43 4D 50 49 00          1429  CMPI_MSG:       DC.B        'CMPI',0
00001CC2= 4E 4F 50 00             1430  NOP_MSG:        DC.B        'NOP',0
00001CC6= 4D 4F 56 45 4D 00       1431  MOVEM_MSG:      DC.B        'MOVEM',0
00001CCC= 4C 45 41 00             1432  LEA_MSG:        DC.B        'LEA',0
00001CD0= 4A 53 52 00             1433  JSR_MSG:        DC.B        'JSR',0
00001CD4= 4A 4D 50 00             1434  JMP_MSG:        DC.B        'JMP',0
00001CD8= 42 52 41 00             1435  BRA_MSG:        DC.B        'BRA',0
00001CDC= 42 53 52 00             1436  BSR_MSG:        DC.B        'BSR',0
00001CE0= 42 45 51 00             1437  BEQ_MSG:        DC.B        'BEQ',0
00001CE4= 4D 4F 56 45 51 20 00    1438  MOVEQ_MSG:      DC.B        'MOVEQ ',0
00001CEB= 44 49 56 55 00          1439  DIVU_MSG:       DC.B        'DIVU',0
00001CF0= 44 49 56 53 00          1440  DIVS_MSG:       DC.B        'DIVS',0
00001CF5= 53 55 42 00             1441  SUB_MSG:        DC.B        'SUB',0
00001CF9= 43 4D 50 00             1442  CMP_MSG:        DC.B        'CMP',0
00001CFD= 4D 55 4C 55 00          1443  MULU_MSG:       DC.B        'MULU',0
00001D02= 4D 55 4C 53 00          1444  MULS_MSG:       DC.B        'MULS',0
00001D07= 41 44 44 00             1445  ADD_MSG:        DC.B        'ADD',0
00001D0B= 41 44 44 41 00          1446  ADDA_MSG:       DC.B        'ADDA',0
00001D10= 41 53 4C 00             1447  ASL_MSG:        DC.B        'ASL',0
00001D14= 41 53 52 00             1448  ASR_MSG:        DC.B        'ASR',0
00001D18= 4C 53 4C 00             1449  LSL_MSG:        DC.B        'LSL',0
00001D1C= 4C 53 52 00             1450  LSR_MSG:        DC.B        'LSR',0
00001D20= 52 4F 4C 00             1451  ROL_MSG:        DC.B        'ROL',0
00001D24= 52 4F 52 00             1452  ROR_MSG:        DC.B        'ROR',0
00001D28                          1453  
00001D28                          1454  
00001D28= 45 58 54 00             1455  EXT_MSG:        DC.B        'EXT',0
00001D2C= 23 00                   1456  POUND:          DC.B        '#',0
00001D2E= 24 00                   1457  DOLLAR:         DC.B        '$',0
00001D30= 25 00                   1458  PERCENT:        DC.B        '%',0
00001D32                          1459  
00001D32                          1460  ; Size messages
00001D32                          1461  
00001D32= 2E 42 00                1462  BYTE_MSG:       DC.B        '.B',0
00001D35= 2E 57 00                1463  WORD_MSG:       DC.B        '.W',0
00001D38= 2E 4C 00                1464  LONG_MSG:       DC.B        '.L',0
00001D3B= 4E 6F 74 20 41 20 ...   1465  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
00001D4F= 4F 50 20 63 6F 64 ...   1466  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001D6B= 49 4E 56 41 4C 49 ...   1467  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001D7B= 49 4E 56 41 4C 49 ...   1468  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
00001D91                          1469  
00001D91                          1470  
00001D91                          1471  
00001D91                          1472  
00001D91                          1473  
00001D91                          1474  
00001D91                          1475  
00001D91                          1476  
00001D91                          1477  
00001D91                          1478  
00001D91                          1479  
00001D91                          1480  
00001D91                          1481  
00001D91                          1482  
00001D91                          1483  
00001D91                          1484  
00001D91                          1485  
00001D91                          1486  
00001D91                          1487  
00001D91                          1488  
00001D91                          1489  
00001D91                          1490  
00001D91                          1491  
00001D91                          1492  
00001D91                          1493  
00001D91                          1494  
00001D91                          1495  
00001D91                          1496  -------------------- end include --------------------
00001D91= 45 6E 74 65 72 20 ...   1497                  START_MSG:      DC.B        'Enter a starting address:',0
00001DAB= 45 6E 74 65 72 20 ...   1498                  END_MSG:        DC.B        'Enter an ending address:',0
00001DC4                          1499                  INCLUDE     'Disassembler_EA_Codes.x68'
00001DC4                          1500  
00001DC4                          1501  
00001DC4                          1502  ; D3 = OP size. ie. Byte, Word, Long
00001DC4                          1503  ; D4 = Original hex code
00001DC4                          1504  ; D5 = Current Mode being isolated
00001DC4                          1505  ; D6 = Current Register being isolated
00001DC4                          1506  
00001DC4                          1507  ; A3 will store starting address
00001DC4                          1508  ; A4 will store ending address
00001DC4                          1509  
00001DC4                          1510  
00001DC4                          1511  
00001DC4                          1512  ; based on the size of the move operation Print out an amount of data as is.
00001DC4                          1513  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001DC4                          1514  EA_MOVE:
00001DC4  4285                    1515          CLR.L       D5
00001DC6  4286                    1516          CLR.L       D6
00001DC8  4EB8 1604               1517          JSR         Bits5to3
00001DCC  1A02                    1518          MOVE.B      D2, D5
00001DCE  4EB8 15EC               1519          JSR         Bits2to0
00001DD2  1C02                    1520          MOVE.B      D2, D6
00001DD4  4EB9 0000221A           1521          JSR         MODE_TABLE
00001DDA                          1522          
00001DDA  43F9 000025A4           1523          LEA         SEPERATOR, A1
00001DE0  103C 000E               1524          MOVE.B      #14, D0
00001DE4  4E4F                    1525          TRAP        #15
00001DE6                          1526          
00001DE6  4285                    1527          CLR.L       D5
00001DE8  4286                    1528          CLR.L       D6
00001DEA                          1529  
00001DEA  4EB8 165C               1530          JSR         Bits8to6
00001DEE  1A02                    1531          MOVE.B      D2, D5
00001DF0  4EB8 168C               1532          JSR         Bits11to9
00001DF4  1C02                    1533          MOVE.B      D2, D6
00001DF6  4EB9 0000221A           1534          JSR         MODE_TABLE
00001DFC                          1535          
00001DFC  4E75                    1536          RTS
00001DFE                          1537          
00001DFE                          1538  EA_GENERIC:
00001DFE                          1539      
00001DFE  4EB8 1604               1540          JSR         Bits5to3
00001E02  1A02                    1541          MOVE.B      D2, D5
00001E04  4EB8 15EC               1542          JSR         Bits2to0
00001E08  1C02                    1543          MOVE.B      D2, D6
00001E0A  4EB9 0000221A           1544          JSR         MODE_TABLE
00001E10                          1545  
00001E10  4E75                    1546          RTS
00001E12                          1547          
00001E12                          1548          ; #data, ea
00001E12                          1549  DATASRC_EA:
00001E12                          1550          
00001E12  4EB9 000022E6           1551          JSR         J_ABS_TABLE
00001E18                          1552          
00001E18                          1553          ; Print Out ", "
00001E18  43F9 000025A4           1554          LEA         SEPERATOR, A1
00001E1E  103C 000E               1555          MOVE.B      #14, D0
00001E22  4E4F                    1556          TRAP        #15
00001E24                          1557          
00001E24  4EB8 1DFE               1558          JSR         EA_GENERIC
00001E28                          1559          
00001E28  4E75                    1560          RTS
00001E2A                          1561          
00001E2A                          1562  ABS_DATASRC_EA:
00001E2A                          1563  
00001E2A  4EB9 00002376           1564          JSR         DATA_TABLE
00001E30                          1565          
00001E30                          1566          ; Print Out ", "
00001E30  43F9 000025A4           1567          LEA         SEPERATOR, A1
00001E36  103C 000E               1568          MOVE.B      #14, D0
00001E3A  4E4F                    1569          TRAP        #15
00001E3C                          1570          
00001E3C  4EB8 1DFE               1571          JSR         EA_GENERIC
00001E40                          1572  
00001E40                          1573  
00001E40                          1574  
00001E40  4E75                    1575          RTS        
00001E42                          1576  
00001E42                          1577  
00001E42                          1578          
00001E42                          1579  REVERSESRC_EA:
00001E42                          1580      
00001E42  4EB8 1DFE               1581          JSR         EA_GENERIC
00001E46  43F9 000025A4           1582          LEA         SEPERATOR, A1
00001E4C  103C 000E               1583          MOVE.B      #14, D0
00001E50  4E4F                    1584          TRAP        #15
00001E52                          1585          
00001E52  4EB8 168C               1586          JSR         Bits11to9
00001E56  1C02                    1587          MOVE.B      D2, D6
00001E58  4EB9 0000221A           1588          JSR         MODE_TABLE
00001E5E  4E75                    1589          RTS        
00001E60                          1590  EA_ADD:
00001E60  4EB8 1DFE               1591          JSR         EA_GENERIC
00001E64  43F9 000025A4           1592          LEA         SEPERATOR, A1
00001E6A  103C 000E               1593          MOVE.B      #14, D0
00001E6E  4E4F                    1594          TRAP        #15
00001E70                          1595  
00001E70  4EB8 168C               1596          JSR         Bits11to9
00001E74  1C02                    1597          MOVE.B      D2, D6
00001E76  4EB8 165C               1598          JSR         Bits8to6
00001E7A  1A02                    1599          MOVE.B      D2, D5
00001E7C                          1600          
00001E7C  4EB9 0000221A           1601          JSR         MODE_TABLE
00001E82  4E75                    1602          RTS  
00001E84                          1603          
00001E84                          1604          
00001E84                          1605          
00001E84                          1606          ; ea, A source
00001E84                          1607  EA_ASRC:
00001E84  4EB8 1DFE               1608          JSR         EA_GENERIC
00001E88                          1609          
00001E88                          1610          ; Print Out ", "
00001E88  43F9 000025A4           1611          LEA         SEPERATOR, A1
00001E8E  103C 000E               1612          MOVE.B      #14, D0
00001E92  4E4F                    1613          TRAP        #15
00001E94                          1614  
00001E94  1A3C 0001               1615          MOVE.B      #1, D5
00001E98  4EB8 168C               1616          JSR         Bits11to9
00001E9C  1C02                    1617          MOVE.B      D2, D6
00001E9E                          1618          
00001E9E  4EB9 0000221A           1619          JSR         MODE_TABLE
00001EA4                          1620  
00001EA4  4E75                    1621          RTS
00001EA6                          1622          ; ea, D source
00001EA6                          1623  EA_DSRC:
00001EA6  4EB8 1DFE               1624          JSR         EA_GENERIC
00001EAA                          1625          
00001EAA                          1626          ; Print Out ", "
00001EAA  43F9 000025A4           1627          LEA         SEPERATOR, A1
00001EB0  103C 000E               1628          MOVE.B      #14, D0
00001EB4  4E4F                    1629          TRAP        #15
00001EB6                          1630  
00001EB6  1A3C 0000               1631          MOVE.B      #0, D5
00001EBA  4EB8 168C               1632          JSR         Bits11to9
00001EBE  1C02                    1633          MOVE.B      D2, D6
00001EC0                          1634          
00001EC0  4EB9 0000221A           1635          JSR         MODE_TABLE
00001EC6                          1636  
00001EC6  4E75                    1637          RTS
00001EC8                          1638  ;EA_AS_MEM:
00001EC8                          1639  
00001EC8                          1640  ;        JSR         Bits5to3
00001EC8                          1641  ;        MOVE.B      D2, D5
00001EC8                          1642  ;        JSR         ASD_MEM_MODE_CHECK
00001EC8                          1643  ;        MOVE.B      D2, D6
00001EC8                          1644  ;        JSR         MODE_TABLE
00001EC8                          1645  
00001EC8                          1646  ;        RTS
00001EC8                          1647  
00001EC8                          1648  
00001EC8                          1649          
00001EC8                          1650  EA_AS:
00001EC8                          1651  
00001EC8  4EB8 16A8               1652          JSR         Bit5
00001ECC  B43C 0000               1653          CMP.B       #0, D2
00001ED0  6700 0008               1654          BEQ         AS_COUNT
00001ED4                          1655          
00001ED4  6000 0042               1656          BRA         AS_REGISTER
00001ED8                          1657          
00001ED8  4E75                    1658          RTS    
00001EDA                          1659          
00001EDA                          1660  AS_COUNT:
00001EDA  43F9 000025A6           1661          LEA         POUND_MSG, A1
00001EE0  103C 000E               1662          MOVE.B      #14, D0    
00001EE4  4E4F                    1663          TRAP        #15
00001EE6  4EB8 168C               1664          JSR         Bits11to9
00001EEA  B43C 0000               1665          CMP.B       #0, D2
00001EEE  6700 030C               1666          BEQ         AS_FIX
00001EF2  1C02                    1667          MOVE.B      D2, D6
00001EF4  4EB9 000022DC           1668          JSR         DISPLAY_REG
00001EFA                          1669          
00001EFA  43F9 000025A4           1670          LEA         SEPERATOR, A1
00001F00  103C 000E               1671          MOVE.B      #14, D0
00001F04  4E4F                    1672          TRAP        #15
00001F06                          1673          
00001F06  1A3C 0000               1674          MOVE.B      #0, D5
00001F0A  4EB8 15EC               1675          JSR         Bits2to0
00001F0E  1C02                    1676          MOVE.B      D2, D6
00001F10                          1677          
00001F10  4EB9 0000221A           1678          JSR         MODE_TABLE
00001F16                          1679  
00001F16                          1680  
00001F16  4E75                    1681          RTS
00001F18                          1682          
00001F18                          1683  AS_REGISTER:
00001F18                          1684  
00001F18  43F9 0000258E           1685          LEA         MODE_0_MSG, A1
00001F1E  103C 000E               1686          MOVE.B      #14, D0    
00001F22  4E4F                    1687          TRAP        #15
00001F24  4EB8 168C               1688          JSR         Bits11to9
00001F28  B43C 0000               1689          CMP.B       #0, D2
00001F2C  6700 02CE               1690          BEQ         AS_FIX
00001F30  1C02                    1691          MOVE.B      D2, D6
00001F32  4EB9 000022DC           1692          JSR         DISPLAY_REG
00001F38                          1693  
00001F38  43F9 000025A4           1694          LEA         SEPERATOR, A1
00001F3E  103C 000E               1695          MOVE.B      #14, D0
00001F42  4E4F                    1696          TRAP        #15
00001F44                          1697          
00001F44  1A3C 0000               1698          MOVE.B      #0, D5
00001F48  4EB8 15EC               1699          JSR         Bits2to0
00001F4C  1C02                    1700          MOVE.B      D2, D6
00001F4E                          1701          
00001F4E  4EB9 0000221A           1702          JSR         MODE_TABLE
00001F54                          1703  
00001F54  4E75                    1704          RTS 
00001F56                          1705      
00001F56                          1706  EA_MOVEM:
00001F56  2404                    1707          MOVE.L      D4, D2
00001F58  0802 000A               1708          BTST        #10,D2 
00001F5C  6700 0008               1709          BEQ         MOVEM_REG
00001F60  6000 0038               1710          BRA         MOVEM_SRC
00001F64                          1711  
00001F64  4E75                    1712          RTS
00001F66                          1713          ; D, A
00001F66                          1714  MOVEM_REG:
00001F66  43F9 000026A1           1715          LEA         SPACE_MSG, A1
00001F6C  103C 000E               1716          MOVE.B      #14, D0
00001F70  4E4F                    1717          TRAP        #15
00001F72  4283                    1718          CLR.L       D3
00001F74  4285                    1719          CLR.L       D5
00001F76  4286                    1720          CLR.L       D6
00001F78  4287                    1721          CLR.L       D7
00001F7A                          1722          
00001F7A  341B                    1723          MOVE.W      (A3)+, D2
00001F7C  4EB9 00001FCE           1724          JSR         MOVEM_START
00001F82                          1725          ; Print Out ", "
00001F82  43F9 000025A4           1726          LEA         SEPERATOR, A1
00001F88  103C 000E               1727          MOVE.B      #14, D0
00001F8C  4E4F                    1728          TRAP        #15
00001F8E                          1729          
00001F8E  4EB8 16B8               1730          JSR         Bit6
00001F92  1602                    1731          MOVE.B      D2, D3
00001F94                          1732          
00001F94                          1733          
00001F94  4EB8 1DFE               1734          JSR         EA_GENERIC
00001F98  4E75                    1735          RTS
00001F9A                          1736          ; A, D
00001F9A                          1737  MOVEM_SRC:
00001F9A                          1738  
00001F9A  4EB8 16B8               1739          JSR         Bit6
00001F9E  1602                    1740          MOVE.B      D2, D3
00001FA0                          1741  
00001FA0  4EB8 1DFE               1742          JSR         EA_GENERIC
00001FA4                          1743          ; Print Out ", "
00001FA4  43F9 000025A4           1744          LEA         SEPERATOR, A1
00001FAA  103C 000E               1745          MOVE.B      #14, D0
00001FAE  4E4F                    1746          TRAP        #15
00001FB0  43F9 000026A1           1747          LEA         SPACE_MSG, A1
00001FB6  103C 000E               1748          MOVE.B      #14, D0
00001FBA  4E4F                    1749          TRAP        #15
00001FBC  4283                    1750          CLR.L       D3
00001FBE  4285                    1751          CLR.L       D5
00001FC0  4286                    1752          CLR.L       D6
00001FC2  4287                    1753          CLR.L       D7
00001FC4                          1754          
00001FC4  341B                    1755          MOVE.W      (A3)+, D2
00001FC6  4EB9 00001FCE           1756          JSR         MOVEM_START
00001FCC                          1757  
00001FCC  4E75                    1758          RTS        
00001FCE                          1759  
00001FCE                          1760  
00001FCE                          1761  MOVEM_START:
00001FCE  163C 0004               1762          MOVE.B      #4, D3
00001FD2  4285                    1763          CLR.L       D5
00001FD4  4286                    1764          CLR.L       D6
00001FD6  4287                    1765          CLR.L       D7
00001FD8  4EB9 00001FE0           1766          JSR         MOVEM_LOOP
00001FDE  4E75                    1767          RTS
00001FE0                          1768          
00001FE0                          1769  ; D5 helps identify reg out of group
00001FE0                          1770  ; D6 helps identify Group out of word
00001FE0                          1771  ; D7 keeps track of the number of reg's    
00001FE0                          1772  MOVEM_LOOP:
00001FE0                          1773  
00001FE0  B63C 0000               1774          CMP.B       #0, D3
00001FE4  6700 002C               1775          BEQ         MOVEM_DONE
00001FE8  5343                    1776          SUB         #1, D3
00001FEA                          1777  
00001FEA                          1778  
00001FEA  1A02                    1779          MOVE.B      D2, D5
00001FEC  E882                    1780          ASR.L       #4, D2
00001FEE                          1781          
00001FEE  BA3C 0001               1782          CMP.B       #1, D5
00001FF2  6700 0020               1783          BEQ         MOVEM_0
00001FF6  BA3C 0002               1784          CMP.B       #2, D5
00001FFA  6700 0020               1785          BEQ         MOVEM_1
00001FFE  BA3C 0004               1786          CMP.B       #4, D5
00002002  6700 0020               1787          BEQ         MOVEM_2
00002006  BA3C 0008               1788          CMP.B       #8, D5
0000200A  6700 0020               1789          BEQ         MOVEM_3
0000200E                          1790          
0000200E  5246                    1791          ADD         #1, D6
00002010  60CE                    1792          BRA         MOVEM_LOOP
00002012                          1793  
00002012                          1794  
00002012                          1795  MOVEM_DONE
00002012  4E75                    1796          RTS 
00002014                          1797         
00002014                          1798  MOVEM_0:
00002014  1A3C 0000               1799          MOVE.B      #0, D5   
00002018  6000 001A               1800          BRA         MOVEM_CHECK_PRINT
0000201C                          1801  MOVEM_1:
0000201C  1A3C 0001               1802          MOVE.B      #1, D5   
00002020  6000 0012               1803          BRA         MOVEM_CHECK_PRINT
00002024                          1804  MOVEM_2:
00002024  1A3C 0002               1805          MOVE.B      #2, D5   
00002028  6000 000A               1806          BRA         MOVEM_CHECK_PRINT        
0000202C                          1807  MOVEM_3:
0000202C  1A3C 0003               1808          MOVE.B      #3, D5   
00002030  6000 0002               1809          BRA         MOVEM_CHECK_PRINT
00002034                          1810  
00002034                          1811  MOVEM_CHECK_PRINT:
00002034  BE3C 0000               1812          CMP.B       #0, D7
00002038  6600 0006               1813          BNE         MOVEM_DIVISOR
0000203C  6000 0012               1814          BRA         MOVEM_PRINT_MODE        
00002040                          1815  
00002040                          1816  MOVEM_DIVISOR:
00002040  43F9 000025A2           1817          LEA         DIVISOR_MSG, A1
00002046  103C 000E               1818          MOVE.B      #14, D0    
0000204A  4E4F                    1819          TRAP        #15
0000204C  6000 0002               1820          BRA         MOVEM_PRINT_MODE
00002050                          1821  
00002050                          1822  
00002050                          1823  MOVEM_PRINT_MODE:        
00002050  5247                    1824          ADD         #1, D7
00002052                          1825  
00002052  BC3C 0000               1826          CMP.B       #0, D6
00002056  6700 0016               1827          BEQ         MOVEM_MODE0
0000205A  BC3C 0001               1828          CMP.B       #1, D6
0000205E  6700 0028               1829          BEQ         MOVEM_MODE1
00002062  BC3C 0002               1830          CMP.B       #2, D6
00002066  6700 003C               1831          BEQ         MOVEM_MODE2
0000206A  6000 0052               1832          BRA         MOVEM_MODE3
0000206E                          1833          
0000206E                          1834          
0000206E                          1835  MOVEM_MODE0:
0000206E  43F9 0000258A           1836          LEA         MOVEM0_MSG, A1
00002074  103C 000E               1837          MOVE.B      #14, D0    
00002078  4E4F                    1838          TRAP        #15
0000207A  1205                    1839          MOVE.B      D5, D1
0000207C  103C 0003               1840          MOVE.B      #$3, D0
00002080  4E4F                    1841          TRAP        #15
00002082  5246                    1842          ADD         #1, D6
00002084                          1843          
00002084  6000 FF5A               1844          BRA         MOVEM_LOOP
00002088                          1845  MOVEM_MODE1:
00002088  5845                    1846          ADD         #4, D5
0000208A  43F9 0000258A           1847          LEA         MOVEM0_MSG, A1
00002090  103C 000E               1848          MOVE.B      #14, D0    
00002094  4E4F                    1849          TRAP        #15
00002096  1205                    1850          MOVE.B      D5, D1
00002098  103C 0003               1851          MOVE.B      #$3, D0
0000209C  4E4F                    1852          TRAP        #15
0000209E  5246                    1853          ADD         #1, D6
000020A0                          1854          
000020A0  6000 FF3E               1855          BRA         MOVEM_LOOP        
000020A4                          1856  MOVEM_MODE2:
000020A4  43F9 0000258C           1857          LEA         MOVEM1_MSG, A1
000020AA  103C 000E               1858          MOVE.B      #14, D0    
000020AE  4E4F                    1859          TRAP        #15
000020B0  1205                    1860          MOVE.B      D5, D1
000020B2  103C 0003               1861          MOVE.B      #$3, D0
000020B6  4E4F                    1862          TRAP        #15
000020B8  5246                    1863          ADD         #1, D6
000020BA                          1864          
000020BA  6000 FF24               1865          BRA         MOVEM_LOOP       
000020BE                          1866   
000020BE                          1867  MOVEM_MODE3:
000020BE  5845                    1868          ADD         #4, D5
000020C0  43F9 0000258C           1869          LEA         MOVEM1_MSG, A1
000020C6  103C 000E               1870          MOVE.B      #14, D0    
000020CA  4E4F                    1871          TRAP        #15
000020CC  1205                    1872          MOVE.B      D5, D1
000020CE  103C 0003               1873          MOVE.B      #$3, D0
000020D2  4E4F                    1874          TRAP        #15
000020D4  5246                    1875          ADD         #1, D6
000020D6                          1876          
000020D6  6000 FF08               1877          BRA         MOVEM_LOOP 
000020DA                          1878         
000020DA                          1879         
000020DA                          1880  EA_BRA:
000020DA                          1881  
000020DA  4EB8 1624               1882          JSR         Bits7to0
000020DE  B43C 0000               1883          CMP.B       #0, D2
000020E2  6700 0042               1884          BEQ         BRA_WORD
000020E6  B43C 00FF               1885          CMP.B       #$FF, D2
000020EA  6700 006E               1886          BEQ         BRA_LONG
000020EE                          1887          
000020EE  6000 0004               1888          BRA         BRA_BYTE
000020F2                          1889  
000020F2  4E75                    1890          RTS
000020F4                          1891  
000020F4                          1892  BRA_BYTE:
000020F4                          1893          
000020F4                          1894          
000020F4  43F9 000026A1           1895          LEA         SPACE_MSG, A1
000020FA  103C 000E               1896          MOVE.B      #14, D0
000020FE  4E4F                    1897          TRAP        #15
00002100  43F9 000025B5           1898          LEA         DOLLAR_MSG, A1
00002106  103C 000E               1899          MOVE.B      #14, D0
0000210A  4E4F                    1900          TRAP        #15
0000210C                          1901  
0000210C  2A0B                    1902          MOVE.L      A3, D5
0000210E  3C02                    1903          MOVE.W      D2, D6
00002110                          1904          ; ADD.L       D5, D6
00002110                          1905  
00002110  2406                    1906          MOVE.L      D6, D2
00002112  4EB8 1148               1907          JSR         FLIP_START
00002116                          1908          
00002116  4847                    1909          SWAP        D7
00002118                          1910          
00002118  4282                    1911          CLR.L       D2
0000211A  123C 0004               1912          MOVE.B      #4, D1
0000211E  4EB9 000023F0           1913          JSR         CONVERT_HEX
00002124  4E75                    1914          RTS
00002126                          1915  
00002126                          1916  BRA_WORD:
00002126  43F9 000026A1           1917          LEA         SPACE_MSG, A1
0000212C  103C 000E               1918          MOVE.B      #14, D0
00002130  4E4F                    1919          TRAP        #15
00002132  43F9 000025B5           1920          LEA         DOLLAR_MSG, A1
00002138  103C 000E               1921          MOVE.B      #14, D0
0000213C  4E4F                    1922          TRAP        #15
0000213E                          1923  
0000213E  2A0B                    1924          MOVE.L      A3, D5
00002140  3C1B                    1925          MOVE.W      (A3)+, D6
00002142  DC85                    1926          ADD.L       D5, D6
00002144                          1927  
00002144  2406                    1928          MOVE.L      D6, D2
00002146  4EB8 1148               1929          JSR         FLIP_START
0000214A                          1930          
0000214A  4847                    1931          SWAP        D7
0000214C                          1932          
0000214C  4282                    1933          CLR.L       D2
0000214E  123C 0004               1934          MOVE.B      #4, D1
00002152  4EB9 000023F0           1935          JSR         CONVERT_HEX
00002158                          1936  
00002158  4E75                    1937          RTS
0000215A                          1938  BRA_LONG:
0000215A                          1939  
0000215A  43F9 000026A1           1940          LEA         SPACE_MSG, A1
00002160  103C 000E               1941          MOVE.B      #14, D0
00002164  4E4F                    1942          TRAP        #15
00002166  43F9 000025B5           1943          LEA         DOLLAR_MSG, A1
0000216C  103C 000E               1944          MOVE.B      #14, D0
00002170  4E4F                    1945          TRAP        #15
00002172                          1946  
00002172  2A0B                    1947          MOVE.L      A3, D5
00002174  3C1B                    1948          MOVE.W      (A3)+, D6
00002176  DC85                    1949          ADD.L       D5, D6
00002178                          1950  
00002178  2406                    1951          MOVE.L      D6, D2
0000217A  4EB8 1148               1952          JSR         FLIP_START
0000217E                          1953          
0000217E  4847                    1954          SWAP        D7
00002180                          1955          
00002180  4282                    1956          CLR.L       D2
00002182  123C 0008               1957          MOVE.B      #8, D1
00002186  4EB9 000023F0           1958          JSR         CONVERT_HEX
0000218C                          1959         
0000218C                          1960         
0000218C                          1961          
0000218C                          1962  EA_MOVEQ:
0000218C                          1963  
0000218C                          1964          
0000218C  1404                    1965          MOVE.B      D4, D2
0000218E                          1966          
0000218E  43F9 000025B1           1967          LEA         DATA_MSG, A1
00002194  103C 000E               1968          MOVE.B      #14, D0    
00002198  4E4F                    1969          TRAP        #15
0000219A                          1970  
0000219A  4EB8 1148               1971          JSR         FLIP_START
0000219E                          1972          
0000219E                          1973  
0000219E  4847                    1974          SWAP        D7
000021A0  123C 0008               1975          MOVE.B      #8, D1
000021A4  E26F                    1976          LSR.W       D1, D7
000021A6  123C 0002               1977          MOVE.B      #2, D1
000021AA                          1978          
000021AA  4EB9 000023F0           1979          JSR         CONVERT_HEX
000021B0                          1980          
000021B0                          1981          ; Print Out ", "
000021B0  43F9 000025A4           1982          LEA         SEPERATOR, A1
000021B6  103C 000E               1983          MOVE.B      #14, D0
000021BA  4E4F                    1984          TRAP        #15
000021BC                          1985  
000021BC  1A3C 0000               1986          MOVE.B      #0, D5
000021C0  4EB8 168C               1987          JSR         Bits11to9
000021C4  1C02                    1988          MOVE.B      D2, D6
000021C6                          1989  
000021C6  4EB9 0000221A           1990          JSR         MODE_TABLE
000021CC                          1991  
000021CC  4E75                    1992          RTS
000021CE                          1993  
000021CE                          1994  EA_ADDQ:
000021CE                          1995  
000021CE  123C 0001               1996          MOVE.B      #1, D1
000021D2  4EB8 168C               1997          JSR         Bits11to9
000021D6  1E02                    1998          MOVE.B      D2, D7
000021D8                          1999          
000021D8  43F9 000025B1           2000          LEA         DATA_MSG, A1
000021DE  103C 000E               2001          MOVE.B      #14, D0    
000021E2  4E4F                    2002          TRAP        #15
000021E4                          2003  
000021E4  4EB9 000023F0           2004          JSR         CONVERT_HEX
000021EA                          2005  
000021EA                          2006          ; Print Out ", "
000021EA  43F9 000025A4           2007          LEA         SEPERATOR, A1
000021F0  103C 000E               2008          MOVE.B      #14, D0
000021F4  4E4F                    2009          TRAP        #15
000021F6                          2010          
000021F6  4EB8 1DFE               2011          JSR         EA_GENERIC
000021FA                          2012  
000021FA  4E75                    2013          RTS        
000021FC                          2014  
000021FC                          2015  AS_FIX:
000021FC  143C 0008               2016          MOVE.B      #8, D2
00002200  4E75                    2017          RTS
00002202                          2018          
00002202                          2019  ; X+Y = Effective addressing
00002202                          2020  ; XXX = Mode
00002202                          2021  ; YYY = Register
00002202                          2022      
00002202                          2023  ; 0000 0000 00XX XYYY
00002202                          2024  EA_LEA:
00002202  4281                    2025          CLR.L       D1
00002204  4285                    2026          CLR.L       D5
00002206  4286                    2027          CLR.L       D6
00002208                          2028  
00002208  3A04                    2029          MOVE.W      D4, D5
0000220A  3C04                    2030          MOVE.W      D4, D6
0000220C                          2031  
0000220C                          2032  
0000220C                          2033          ; Print Out ", "
0000220C  43F9 000025A4           2034          LEA         SEPERATOR, A1
00002212  103C 000E               2035          MOVE.B      #14, D0
00002216  4E4F                    2036          TRAP        #15
00002218                          2037  
00002218                          2038  
00002218  4E75                    2039          RTS
0000221A                          2040  
0000221A                          2041  
0000221A                          2042  
0000221A                          2043  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
0000221A                          2044  MODE_TABLE:
0000221A                          2045  
0000221A  BA3C 0000               2046          CMP.B       #0,D5
0000221E  6700 0048               2047          BEQ         J_TBL_D
00002222  BA3C 0001               2048          CMP.B       #1,D5
00002226  6700 002C               2049          BEQ         J_TBL_A
0000222A  BA3C 0002               2050          CMP.B       #2,D5
0000222E  6700 004C               2051          BEQ         J_TBL_A_P
00002232  BA3C 0003               2052          CMP.B       #3,D5
00002236  6700 0064               2053          BEQ         J_TBL_A_INCR
0000223A  BA3C 0004               2054          CMP.B       #4,D5
0000223E  6700 007C               2055          BEQ         J_TBL_A_DECR
00002242  BA3C 0007               2056          CMP.B       #7,D5
00002246  6700 0004               2057          BEQ         J_ABS
0000224A                          2058          
0000224A  4E75                    2059          RTS
0000224C                          2060          ;   deal with errors here
0000224C                          2061  
0000224C                          2062  J_ABS:
0000224C  4EB9 000022E6           2063          JSR         J_ABS_TABLE
00002252  4E75                    2064          RTS
00002254                          2065  
00002254                          2066  J_TBL_A:
00002254  43F9 00002591           2067          LEA         MODE_1_MSG, A1 ; A#
0000225A  103C 000E               2068          MOVE.B      #14, D0
0000225E  4E4F                    2069          TRAP        #15
00002260  4EB9 000022DC           2070          JSR         DISPLAY_REG
00002266                          2071  
00002266  4E75                    2072          RTS
00002268                          2073  
00002268                          2074  
00002268                          2075  J_TBL_D:
00002268  43F9 0000258E           2076          LEA         MODE_0_MSG, A1 ; D#
0000226E  103C 000E               2077          MOVE.B      #14, D0
00002272  4E4F                    2078          TRAP        #15
00002274  4EB9 000022DC           2079          JSR         DISPLAY_REG
0000227A  4E75                    2080          RTS
0000227C                          2081  
0000227C                          2082  J_TBL_A_P:
0000227C                          2083  
0000227C  43F9 00002594           2084          LEA         MODE_A_MSG, A1 ; (A#)
00002282  103C 000E               2085          MOVE.B      #14, D0
00002286  4E4F                    2086          TRAP        #15
00002288  4EB9 000022DC           2087          JSR         DISPLAY_REG
0000228E                          2088          
0000228E  43F9 00002598           2089          LEA         MODE_A_1_MSG, A1
00002294  103C 000E               2090          MOVE.B      #14, D0
00002298  4E4F                    2091          TRAP        #15
0000229A                          2092  
0000229A                          2093          
0000229A  4E75                    2094          RTS
0000229C                          2095      
0000229C                          2096  J_TBL_A_INCR:
0000229C  43F9 00002594           2097          LEA         MODE_A_MSG, A1 ; (A#)+
000022A2  103C 000E               2098          MOVE.B      #14, D0
000022A6  4E4F                    2099          TRAP        #15
000022A8  4EB9 000022DC           2100          JSR         DISPLAY_REG
000022AE                          2101          
000022AE  43F9 0000259A           2102          LEA         MODE_A_2_MSG, A1
000022B4  103C 000E               2103          MOVE.B      #14, D0
000022B8  4E4F                    2104          TRAP        #15
000022BA                          2105  
000022BA  4E75                    2106          RTS
000022BC                          2107          
000022BC                          2108  J_TBL_A_DECR:
000022BC  43F9 0000259D           2109          LEA         MODE_MINUS_MSG, A1 ; -(A#)
000022C2  103C 000E               2110          MOVE.B      #14, D0
000022C6  4E4F                    2111          TRAP        #15
000022C8  4EB9 000022DC           2112          JSR         DISPLAY_REG
000022CE                          2113          
000022CE  43F9 00002598           2114          LEA         MODE_A_1_MSG, A1
000022D4  103C 000E               2115          MOVE.B      #14, D0
000022D8  4E4F                    2116          TRAP        #15
000022DA                          2117  
000022DA  4E75                    2118          RTS
000022DC                          2119          
000022DC                          2120          
000022DC                          2121  DISPLAY_REG:
000022DC  1206                    2122          MOVE.B      D6, D1
000022DE  103C 0003               2123          MOVE.B      #$3, D0
000022E2  4E4F                    2124          TRAP        #15
000022E4  4E75                    2125          RTS
000022E6                          2126  
000022E6                          2127  
000022E6                          2128  J_ABS_TABLE:
000022E6                          2129          ; SIMHALT
000022E6  BC3C 0000               2130          CMP.B       #0,D6
000022EA  6700 0014               2131          BEQ         SUBCLASS_CHECK
000022EE                          2132              
000022EE  BC3C 0001               2133          CMP.B       #1,D6
000022F2  6700 000C               2134          BEQ         SUBCLASS_CHECK
000022F6                          2135              
000022F6  BC3C 0004               2136          CMP.B       #4,D6
000022FA  6700 007A               2137          BEQ         DATA_TABLE
000022FE                          2138              
000022FE  4E75                    2139          RTS
00002300                          2140          
00002300                          2141  SUBCLASS_CHECK:
00002300  2C4B                    2142          MOVE.L      A3, A6
00002302  221B                    2143          MOVE.L      (A3)+, D1
00002304  264E                    2144          MOVE.L      A6, A3
00002306  2C7C 00000000           2145          MOVE.L      #0, A6
0000230C                          2146          
0000230C  4841                    2147          SWAP        D1
0000230E                          2148          
0000230E  B27C 0000               2149          CMP.W       #0, D1
00002312  6700 0006               2150          BEQ         J_SUBCLASS_0
00002316  6000 002A               2151          BRA         J_SUBCLASS_1
0000231A                          2152  
0000231A                          2153          
0000231A                          2154  J_SUBCLASS_0:
0000231A  43F9 000025B5           2155          LEA         DOLLAR_MSG, A1
00002320  103C 000E               2156          MOVE.B      #14, D0
00002324  4E4F                    2157          TRAP        #15
00002326                          2158         
00002326  4281                    2159          CLR.L       D1
00002328  4282                    2160          CLR.L       D2
0000232A  4287                    2161          CLR.L       D7
0000232C  241B                    2162          MOVE.L      (A3)+, D2
0000232E                          2163          
0000232E                          2164  
0000232E  4EB8 1148               2165          JSR         FLIP_START
00002332                          2166  
00002332  4282                    2167          CLR.L       D2
00002334  4847                    2168          SWAP        D7
00002336                          2169  
00002336  123C 0004               2170          MOVE.B      #4, D1
0000233A  4EB9 000023F0           2171          JSR         CONVERT_HEX
00002340                          2172          
00002340                          2173  
00002340                          2174  
00002340  4E75                    2175          RTS
00002342                          2176  
00002342                          2177  
00002342                          2178  J_SUBCLASS_1:
00002342                          2179          ; SIMHALT
00002342  43F9 000025A9           2180          LEA         SUBCLASS1_1, A1
00002348  103C 000E               2181          MOVE.B      #14, D0
0000234C  4E4F                    2182          TRAP        #15
0000234E                          2183  
0000234E  4281                    2184          CLR.L       D1
00002350  4282                    2185          CLR.L       D2
00002352  4287                    2186          CLR.L       D7
00002354                          2187  
00002354                          2188  
00002354                          2189          
00002354  241B                    2190          MOVE.L      (A3)+, D2
00002356                          2191          
00002356  4EB8 1148               2192          JSR         FLIP_START
0000235A                          2193  
0000235A  4282                    2194          CLR.L       D2
0000235C                          2195          
0000235C                          2196  
0000235C  123C 0008               2197          MOVE.B      #8, D1
00002360  4EB9 000023F0           2198          JSR         CONVERT_HEX
00002366                          2199  
00002366                          2200  
00002366  43F9 000025AD           2201          LEA         SUBCLASS1_2, A1
0000236C  103C 000E               2202          MOVE.B      #14, D0
00002370  4E4F                    2203          TRAP        #15
00002372                          2204          
00002372  4E75                    2205          RTS
00002374                          2206  
00002374                          2207  ;   Error
00002374                          2208  J_ABS_ERROR:
00002374  4E75                    2209          RTS
00002376                          2210  
00002376                          2211  ;   Hard Coded Data
00002376                          2212  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00002376                          2213  
00002376                          2214  ;   Size num 0 = Byte 1 = Word 2 Long
00002376                          2215  
00002376                          2216  DATA_TABLE:
00002376                          2217          ; SIMHALT
00002376  43F9 000025B1           2218          LEA         DATA_MSG, A1
0000237C  103C 000E               2219          MOVE.B      #14, D0
00002380  4E4F                    2220          TRAP        #15
00002382                          2221  
00002382                          2222  
00002382  B63C 0000               2223          CMP.B       #0,D3 
00002386  6700 0014               2224          BEQ         DATA_B
0000238A                          2225  
0000238A  B63C 0001               2226          CMP.B       #1,D3 
0000238E  6700 002A               2227          BEQ         DATA_W
00002392                          2228          
00002392  B63C 0002               2229          CMP.B       #2,D3 
00002396  6700 003E               2230          BEQ         DATA_L
0000239A                          2231          
0000239A  4E75                    2232          RTS
0000239C                          2233  
0000239C                          2234  DATA_B:
0000239C  4281                    2235          CLR.L       D1
0000239E  4282                    2236          CLR.L       D2
000023A0  4287                    2237          CLR.L       D7
000023A2                          2238          
000023A2  341B                    2239          MOVE.W      (A3)+, D2
000023A4                          2240          * Only read first byte from the word 
000023A4                          2241          
000023A4  4EB8 1148               2242          JSR         FLIP_START
000023A8  4847                    2243          SWAP        D7
000023AA  E09F                    2244          ROR.L       #8,D7
000023AC  4282                    2245          CLR.L       D2
000023AE                          2246          
000023AE                          2247  
000023AE  123C 0002               2248          MOVE.B      #2, D1
000023B2  4EB9 000023F0           2249          JSR         CONVERT_HEX
000023B8                          2250  
000023B8                          2251  
000023B8                          2252  
000023B8  4E75                    2253          RTS
000023BA                          2254  
000023BA                          2255  DATA_W:
000023BA  4281                    2256          CLR.L       D1
000023BC  4282                    2257          CLR.L       D2
000023BE  4287                    2258          CLR.L       D7
000023C0                          2259          
000023C0  341B                    2260          MOVE.W      (A3)+, D2
000023C2                          2261          
000023C2  4EB8 1148               2262          JSR         FLIP_START
000023C6                          2263  
000023C6  4847                    2264          SWAP        D7
000023C8                          2265  
000023C8  4282                    2266          CLR.L       D2
000023CA                          2267          
000023CA  123C 0004               2268          MOVE.B      #4, D1
000023CE                          2269          
000023CE                          2270          
000023CE  4EB9 000023F0           2271          JSR         CONVERT_HEX
000023D4                          2272  
000023D4                          2273          
000023D4                          2274  
000023D4  4E75                    2275          RTS
000023D6                          2276  
000023D6                          2277  DATA_L:
000023D6                          2278          ; SIMHALT
000023D6  4281                    2279          CLR.L       D1
000023D8  4282                    2280          CLR.L       D2
000023DA  4287                    2281          CLR.L       D7
000023DC                          2282          
000023DC  241B                    2283          MOVE.L      (A3)+, D2
000023DE                          2284          
000023DE  4EB8 1148               2285          JSR         FLIP_START
000023E2                          2286  
000023E2  4282                    2287          CLR.L       D2
000023E4                          2288          
000023E4                          2289  
000023E4  123C 0008               2290          MOVE.B      #8, D1
000023E8  4EB9 000023F0           2291          JSR         CONVERT_HEX
000023EE                          2292  
000023EE                          2293          
000023EE                          2294  
000023EE  4E75                    2295          RTS
000023F0                          2296  
000023F0                          2297  
000023F0                          2298  CONVERT_HEX:
000023F0                          2299          ; SIMHALT    
000023F0  0C01 0000               2300          CMPI.B      #$0, D1    
000023F4  6700 0092               2301          BEQ         HEX_DONE
000023F8                          2302          
000023F8  5301                    2303          SUBI.B      #$1, D1       
000023FA                          2304  
000023FA  4282                    2305          CLR.L       D2
000023FC                          2306      
000023FC  1407                    2307          MOVE.B      D7, D2
000023FE                          2308              
000023FE  103C 001C               2309          MOVE.B      #28, D0    
00002402  E1AA                    2310          LSL.L       D0, D2     
00002404  E99A                    2311          ROL.L       #4, D2
00002406                          2312          
00002406  E887                    2313          ASR.L       #4, D7
00002408                          2314          
00002408                          2315          
00002408  B43C 0000               2316          CMP.B       #0,D2
0000240C  6700 007C               2317          BEQ         PRINT_ASCII0
00002410  B43C 0001               2318          CMP.B       #1,D2
00002414  6700 0084               2319          BEQ         PRINT_ASCII1
00002418  B43C 0002               2320          CMP.B       #2,D2
0000241C  6700 008C               2321          BEQ         PRINT_ASCII2
00002420  B43C 0003               2322          CMP.B       #3,D2
00002424  6700 0094               2323          BEQ         PRINT_ASCII3
00002428  B43C 0004               2324          CMP.B       #4,D2
0000242C  6700 009C               2325          BEQ         PRINT_ASCII4
00002430  B43C 0005               2326          CMP.B       #5,D2
00002434  6700 00A4               2327          BEQ         PRINT_ASCII5
00002438  B43C 0006               2328          CMP.B       #6,D2
0000243C  6700 00AC               2329          BEQ         PRINT_ASCII6
00002440  B43C 0007               2330          CMP.B       #7,D2
00002444  6700 00B4               2331          BEQ         PRINT_ASCII7
00002448  B43C 0008               2332          CMP.B       #8,D2
0000244C  6700 00BC               2333          BEQ         PRINT_ASCII8
00002450  B43C 0009               2334          CMP.B       #9,D2
00002454  6700 00C4               2335          BEQ         PRINT_ASCII9
00002458  B43C 000A               2336          CMP.B       #$A,D2
0000245C  6700 00CC               2337          BEQ         PRINT_ASCIIA
00002460  B43C 000B               2338          CMP.B       #$B,D2
00002464  6700 00D4               2339          BEQ         PRINT_ASCIIB
00002468  B43C 000C               2340          CMP.B       #$C,D2
0000246C  6700 00DC               2341          BEQ         PRINT_ASCIIC
00002470  B43C 000D               2342          CMP.B       #$D,D2
00002474  6700 00E4               2343          BEQ         PRINT_ASCIID
00002478  B43C 000E               2344          CMP.B       #$E,D2
0000247C  6700 00EC               2345          BEQ         PRINT_ASCIIE
00002480  B43C 000F               2346          CMP.B       #$F,D2
00002484  6700 00F4               2347          BEQ         PRINT_ASCIIF
00002488                          2348          
00002488                          2349          ; error handling here
00002488                          2350          
00002488                          2351          
00002488                          2352  
00002488                          2353  HEX_DONE:
00002488  4E75                    2354          RTS
0000248A                          2355  
0000248A                          2356  
0000248A                          2357  
0000248A                          2358  PRINT_ASCII0:
0000248A  43F9 000026A4           2359          LEA         ZERO_MSG, A1
00002490  103C 000E               2360          MOVE.B      #14, D0    
00002494  4E4F                    2361          TRAP        #15
00002496  6000 FF58               2362          BRA         CONVERT_HEX
0000249A                          2363  PRINT_ASCII1:
0000249A  43F9 000026A6           2364          LEA         ONE_MSG, A1
000024A0  103C 000E               2365          MOVE.B      #14, D0    
000024A4  4E4F                    2366          TRAP        #15
000024A6  6000 FF48               2367          BRA         CONVERT_HEX
000024AA                          2368  PRINT_ASCII2:
000024AA  43F9 000026A8           2369          LEA         TWO_MSG, A1
000024B0  103C 000E               2370          MOVE.B      #14, D0    
000024B4  4E4F                    2371          TRAP        #15
000024B6  6000 FF38               2372          BRA         CONVERT_HEX
000024BA                          2373  PRINT_ASCII3:
000024BA  43F9 000026AA           2374          LEA         THREE_MSG, A1
000024C0  103C 000E               2375          MOVE.B      #14, D0    
000024C4  4E4F                    2376          TRAP        #15
000024C6  6000 FF28               2377          BRA         CONVERT_HEX
000024CA                          2378  PRINT_ASCII4:
000024CA  43F9 000026AC           2379          LEA         FOUR_MSG, A1
000024D0  103C 000E               2380          MOVE.B      #14, D0    
000024D4  4E4F                    2381          TRAP        #15
000024D6  6000 FF18               2382          BRA         CONVERT_HEX
000024DA                          2383  PRINT_ASCII5:
000024DA  43F9 000026AE           2384          LEA         FIVE_MSG, A1
000024E0  103C 000E               2385          MOVE.B      #14, D0    
000024E4  4E4F                    2386          TRAP        #15
000024E6  6000 FF08               2387          BRA         CONVERT_HEX        
000024EA                          2388  PRINT_ASCII6:
000024EA  43F9 000026B0           2389          LEA         SIX_MSG, A1
000024F0  103C 000E               2390          MOVE.B      #14, D0    
000024F4  4E4F                    2391          TRAP        #15
000024F6  6000 FEF8               2392          BRA         CONVERT_HEX
000024FA                          2393  PRINT_ASCII7:
000024FA  43F9 000026B2           2394          LEA         SEVEN_MSG, A1
00002500  103C 000E               2395          MOVE.B      #14, D0    
00002504  4E4F                    2396          TRAP        #15
00002506  6000 FEE8               2397          BRA         CONVERT_HEX
0000250A                          2398  PRINT_ASCII8:
0000250A  43F9 000026B4           2399          LEA         EIGHT_MSG, A1
00002510  103C 000E               2400          MOVE.B      #14, D0    
00002514  4E4F                    2401          TRAP        #15
00002516  6000 FED8               2402          BRA         CONVERT_HEX
0000251A                          2403  PRINT_ASCII9:
0000251A  43F9 000026B6           2404          LEA         NINE_MSG, A1
00002520  103C 000E               2405          MOVE.B      #14, D0    
00002524  4E4F                    2406          TRAP        #15
00002526  6000 FEC8               2407          BRA         CONVERT_HEX
0000252A                          2408  PRINT_ASCIIA:
0000252A  43F9 000026B8           2409          LEA         A_MSG, A1
00002530  103C 000E               2410          MOVE.B      #14, D0    
00002534  4E4F                    2411          TRAP        #15
00002536  6000 FEB8               2412          BRA         CONVERT_HEX
0000253A                          2413  PRINT_ASCIIB:
0000253A  43F9 000026BA           2414          LEA         B_MSG, A1
00002540  103C 000E               2415          MOVE.B      #14, D0    
00002544  4E4F                    2416          TRAP        #15
00002546  6000 FEA8               2417          BRA         CONVERT_HEX
0000254A                          2418  PRINT_ASCIIC:
0000254A  43F9 000026BC           2419          LEA         C_MSG, A1
00002550  103C 000E               2420          MOVE.B      #14, D0    
00002554  4E4F                    2421          TRAP        #15
00002556  6000 FE98               2422          BRA         CONVERT_HEX
0000255A                          2423  PRINT_ASCIID:
0000255A  43F9 000026BE           2424          LEA         D_MSG, A1
00002560  103C 000E               2425          MOVE.B      #14, D0    
00002564  4E4F                    2426          TRAP        #15
00002566  6000 FE88               2427          BRA         CONVERT_HEX
0000256A                          2428  PRINT_ASCIIE:
0000256A  43F9 000026C0           2429          LEA         E_MSG, A1
00002570  103C 000E               2430          MOVE.B      #14, D0    
00002574  4E4F                    2431          TRAP        #15
00002576  6000 FE78               2432          BRA         CONVERT_HEX
0000257A                          2433  PRINT_ASCIIF:
0000257A  43F9 000026C2           2434          LEA         F_MSG, A1
00002580  103C 000E               2435          MOVE.B      #14, D0    
00002584  4E4F                    2436          TRAP        #15
00002586  6000 FE68               2437          BRA         CONVERT_HEX
0000258A                          2438  
0000258A                          2439  
0000258A                          2440  
0000258A                          2441  
0000258A                          2442  
0000258A= 44 00                   2443  MOVEM0_MSG:     DC.B        'D',0
0000258C= 41 00                   2444  MOVEM1_MSG:     DC.B        'A',0
0000258E                          2445  
0000258E= 20 44 00                2446  MODE_0_MSG:     DC.B        ' D',0
00002591= 20 41 00                2447  MODE_1_MSG:     DC.B        ' A',0
00002594= 20 28 41 00             2448  MODE_A_MSG:     DC.B        ' (A',0
00002598= 29 00                   2449  MODE_A_1_MSG:   DC.B        ')',0
0000259A= 29 2B 00                2450  MODE_A_2_MSG:   DC.B        ')+',0
0000259D= 20 2D 28 41 00          2451  MODE_MINUS_MSG: DC.B        ' -(A',0
000025A2                          2452  
000025A2= 2F 00                   2453  DIVISOR_MSG:    DC.B        '/',0
000025A4                          2454  
000025A4= 2C 00                   2455  SEPERATOR:      DC.B        ',',0
000025A6                          2456  
000025A6= 20 23 00                2457  POUND_MSG:      DC.B        ' #',0
000025A9= 20 28 24 00             2458  SUBCLASS1_1:    DC.B        ' ($',0
000025AD= 29 2E 4C 00             2459  SUBCLASS1_2:    DC.B        ').L',0
000025B1= 20 23 24 00             2460  DATA_MSG:       DC.B        ' #$',0
000025B5= 24 00                   2461  DOLLAR_MSG:     DC.B        '$',0
000025B7                          2462  
000025B7= 54 4D 50 00             2463  TEMP_MSG:       DC.B        'TMP',0
000025BB                          2464  
000025BB                          2465  
000025BB                          2466  
000025BB                          2467  TMP_STR         DS.B        32
000025DB                          2468  
000025DB                          2469  
000025DB                          2470  
000025DB                          2471  
000025DB                          2472  
000025DB                          2473  
000025DB                          2474  
000025DB                          2475  
000025DB                          2476  
000025DB                          2477  
000025DB                          2478  
000025DB                          2479  -------------------- end include --------------------
000025DB                          2480                  
000025DB                          2481  
000025DB= 57 65 6C 63 6F 6D ...   2482  GREETING_MSG:   DC.B        'Welcome to Sarah and Leons Disassembler!',CR,LF,0
00002606= 57 6F 75 6C 64 20 ...   2483  REPEAT_MSG:     DC.B        'Would you like to restart the program? (Press enter to restart)',CR,LF,0
00002648= 54 68 61 6E 6B 20 ...   2484  GOODBYE_MSG:    DC.B        'Thank you for using Sarah and Leons Disassembler!',CR,LF,0
0000267C= 4F 6E 65 20 6F 72 ...   2485  BAD_ADDR_MSG:   DC.B        'One or both addresses are invalid.',CR,LF,0
000026A1                          2486  
000026A1                          2487                
000026A1  =0000000D               2488  CR              EQU         $0D
000026A1  =0000000A               2489  LF              EQU         $0A
000026A1                          2490  
000026A1= 20 20 00                2491  SPACE_MSG:      DC.B        '  ',0
000026A4                          2492  
000026A4= 30 00                   2493  ZERO_MSG:       DC.B        '0',0
000026A6= 31 00                   2494  ONE_MSG:        DC.B        '1',0
000026A8= 32 00                   2495  TWO_MSG:        DC.B        '2',0
000026AA= 33 00                   2496  THREE_MSG:      DC.B        '3',0
000026AC= 34 00                   2497  FOUR_MSG:       DC.B        '4',0
000026AE= 35 00                   2498  FIVE_MSG:       DC.B        '5',0
000026B0= 36 00                   2499  SIX_MSG:        DC.B        '6',0
000026B2= 37 00                   2500  SEVEN_MSG:      DC.B        '7',0
000026B4= 38 00                   2501  EIGHT_MSG:      DC.B        '8',0
000026B6= 39 00                   2502  NINE_MSG:       DC.B        '9',0
000026B8= 41 00                   2503  A_MSG:          DC.B        'A',0
000026BA= 42 00                   2504  B_MSG:          DC.B        'B',0
000026BC= 43 00                   2505  C_MSG:          DC.B        'C',0
000026BE= 44 00                   2506  D_MSG:          DC.B        'D',0
000026C0= 45 00                   2507  E_MSG:          DC.B        'E',0
000026C2= 46 00                   2508  F_MSG:          DC.B        'F',0
000026C4                          2509                  
000026C4= 45 72 72 6F 72 00       2510  ERROR_MSG:      DC.B        'Error',0
000026CA= 53 75 63 63 65 73 ...   2511  SUCCESS_MSG:    DC.B        'Success',0
000026D2                          2512  
000026D2= 0D 0A 00                2513  NEW_LINE:       DC.B        '',CR,LF,0
000026D5                          2514  
000026D5= 50 6C 65 61 73 65 ...   2515  NEXT_PAGE_MSG:  DC.B        'Please press enter to continue: ',CR,LF,0
000026F8                          2516  
000026F8                          2517    
000026F8                          2518                  
000026F8                          2519                  
000026F8                          2520  STA_ADDR        DS.B        40
00002720                          2521  END_ADDR        DS.B        40
00002748                          2522  
00002748                          2523  
00002748                          2524  
00002748                          2525  
00002748                          2526                  
00002748                          2527                  
00002748                          2528          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_DATASRC_EA      1E2A
ADDA_MSG            1D0B
ADDI_MSG            1CB3
ADDQ_MSG            1C90
ADD_MSG             1D07
ANDI_MSG            1CA9
ASCII_DONE          10F4
ASL_MEM             1BD0
ASL_MSG             1D10
ASL_REG             1B20
ASR_MEM             1C30
ASR_MSG             1D14
ASR_REG             1B68
AS_COUNT            1EDA
AS_FIX              21FC
AS_REGISTER         1F18
A_MSG               26B8
BAD_ADDR_MSG        267C
BEQ_MSG             1CE0
BIT0                1698
BIT5                16A8
BIT6                16B8
BITS11TO6           1674
BITS11TO8           1680
BITS11TO9           168C
BITS2TO0            15EC
BITS3TO0            15F8
BITS4TO3            1614
BITS5TO3            1604
BITS7TO0            1624
BITS7TO4            162C
BITS7TO6            1638
BITS8TO3            1644
BITS8TO4            1650
BITS8TO6            165C
BITS9TO7            1668
BRA_BYTE            20F4
BRA_LONG            215A
BRA_MSG             1CD8
BRA_WORD            2126
BSR_MSG             1CDC
BYTE_MSG            1D32
B_MSG               26BA
CHECK_DATA          1098
CHECK_ODD           108A
CLEAR_ALL_REG       10A0
CMPI_MSG            1CBD
CMP_MSG             1CF9
CONVERT_ASCII       10DC
CONVERT_HEX         23F0
CR                  D
C_MSG               26BC
DATASRC_EA          1E12
DATA_B              239C
DATA_L              23D6
DATA_MSG            25B1
DATA_TABLE          2376
DATA_W              23BA
DISPLAY_REG         22DC
DIVISOR_MSG         25A2
DIVS_MSG            1CF0
DIVU_MSG            1CEB
DOLLAR              1D2E
DOLLAR_MSG          25B5
DONE                139C
DONE_CHECK          137E
D_MSG               26BE
EA_ADD              1E60
EA_ADDQ             21CE
EA_AS               1EC8
EA_ASRC             1E84
EA_BRA              20DA
EA_DSRC             1EA6
EA_GENERIC          1DFE
EA_LEA              2202
EA_MOVE             1DC4
EA_MOVEM            1F56
EA_MOVEQ            218C
EIGHT_MSG           26B4
END_ADDR            2720
END_ADDR_CHECK      105A
END_MSG             1DAB
EORI_MSG            1CB8
ERROR_INSTR         1D6B
ERROR_MSG           26C4
ERROR_OP_MSG        1D3B
ERROR_SIZE_MSG      1D7B
EXT_MSG             1D28
E_MSG               26C0
FILE_LOOP           1320
FIVE_MSG            26AE
FLIP_DONE           1176
FLIP_LOOP           1158
FLIP_START          1148
FOUR_MSG            26AC
F_MSG               26C2
GOODBYE_MSG         2648
GREETING_MSG        25DB
HEX_DONE            2488
IMPLEMENT_MSG       1D4F
INVALID_INSTR       15DE
JMP_MSG             1CD4
JSR_MSG             1CD0
JUMP_0              1430
JUMP_1              146E
JUMP_2              147C
JUMP_3              1494
JUMP_4              14AC
JUMP_5              14F0
JUMP_6              1502
JUMP_7              1528
JUMP_8              1530
JUMP_9              154E
JUMP_A              1554
JUMP_B              155A
JUMP_C              1580
JUMP_D              159E
JUMP_E              15BA
JUMP_ERROR          15D0
JUMP_OP_CODE        13AE
J_ABS               224C
J_ABS_ERROR         2374
J_ABS_TABLE         22E6
J_MOVEA_L           16E6
J_MOVEA_W           172E
J_MOVE_L            170A
J_MOVE_W            1752
J_SUBCLASS_0        231A
J_SUBCLASS_1        2342
J_TBL_A             2254
J_TBL_A_DECR        22BC
J_TBL_A_INCR        229C
J_TBL_A_P           227C
J_TBL_D             2268
LEA_MSG             1CCC
LEFT_MEM            1BC4
LEFT_REG            1AE0
LET_ASCII           110A
LF                  A
LONG_MSG            1D38
LSL_MEM             1BF0
LSL_MSG             1D18
LSL_REG             1B38
LSR_MEM             1C50
LSR_MSG             1D1C
LSR_REG             1B80
MODE_0_MSG          258E
MODE_1_MSG          2591
MODE_A_1_MSG        2598
MODE_A_2_MSG        259A
MODE_A_MSG          2594
MODE_MINUS_MSG      259D
MODE_TABLE          221A
MOVEA_MSG           1C9F
MOVEM0_MSG          258A
MOVEM1_MSG          258C
MOVEM_0             2014
MOVEM_1             201C
MOVEM_2             2024
MOVEM_3             202C
MOVEM_CHECK_PRINT   2034
MOVEM_DIVISOR       2040
MOVEM_DONE          2012
MOVEM_L             18A0
MOVEM_LOOP          1FE0
MOVEM_MODE0         206E
MOVEM_MODE1         2088
MOVEM_MODE2         20A4
MOVEM_MODE3         20BE
MOVEM_MSG           1CC6
MOVEM_OR_EXT        1870
MOVEM_PRINT_MODE    2050
MOVEM_REG           1F66
MOVEM_SRC           1F9A
MOVEM_START         1FCE
MOVEM_W             187C
MOVEQ_MSG           1CE4
MOVE_MSG            1C9A
MULS_MSG            1D02
MULU_MSG            1CFD
NEW_LINE            26D2
NEXT_PAGE_MSG       26D5
NINE_MSG            26B6
NOP_MSG             1CC2
NUM_ASCII           10F6
ONE_MSG             26A6
OPMODE              196A
OPMODE_ADDA         19A4
OPMODE_ASHIFT       19BE
OP_CODE_ADD         1A9C
OP_CODE_ADDA        1AB4
OP_CODE_ADDI        17C4
OP_CODE_ADDQ        18D2
OP_CODE_ANDI        1790
OP_CODE_ASD_MEM     1BB0
OP_CODE_ASD_REG     1ACC
OP_CODE_BASE_MOVE   16C8
OP_CODE_BEQ         1A4C
OP_CODE_BRA         1A24
OP_CODE_BSR         1A38
OP_CODE_CMP         1906
OP_CODE_CMPI        17F8
OP_CODE_DIVS        1938
OP_CODE_DIVU        1920
OP_CODE_EORI        17DE
OP_CODE_EXT         18C4
OP_CODE_JMP         1834
OP_CODE_JSR         1820
OP_CODE_LEA         1848
OP_CODE_MOVEM       1862
OP_CODE_MOVEQ       1A60
OP_CODE_MULS        1A74
OP_CODE_MULU        1A88
OP_CODE_NOP         1812
OP_CODE_ORI         1776
OP_CODE_SUB         1950
OP_CODE_SUBI        17AA
OP_CODE_SUBQ        18EC
ORI_MSG             1CA5
PERCENT             1D30
POUND               1D2C
POUND_MSG           25A6
PRINT_ADDRESS       111E
PRINT_ADDRESS_EXIT  1212
PRINT_ADDRESS_LOOP  1178
PRINT_ADR0          1220
PRINT_ADR1          1230
PRINT_ADR2          1240
PRINT_ADR3          1250
PRINT_ADR4          1260
PRINT_ADR5          1270
PRINT_ADR6          1280
PRINT_ADR7          1290
PRINT_ADR8          12A0
PRINT_ADR9          12B0
PRINT_ADRA          12C0
PRINT_ADRB          12D0
PRINT_ADRC          12E0
PRINT_ADRD          12F0
PRINT_ADRE          1300
PRINT_ADRF          1310
PRINT_ASCII0        248A
PRINT_ASCII1        249A
PRINT_ASCII2        24AA
PRINT_ASCII3        24BA
PRINT_ASCII4        24CA
PRINT_ASCII5        24DA
PRINT_ASCII6        24EA
PRINT_ASCII7        24FA
PRINT_ASCII8        250A
PRINT_ASCII9        251A
PRINT_ASCIIA        252A
PRINT_ASCIIB        253A
PRINT_ASCIIC        254A
PRINT_ASCIID        255A
PRINT_ASCIIE        256A
PRINT_ASCIIF        257A
PRINT_BYTE          19E0
PRINT_DELAY         135E
PRINT_LONG          1A04
PRINT_WORD          19F2
REPEAT_MSG          2606
REVERSESRC_EA       1E42
RIGHT_MEM           1BCA
RIGHT_REG           1B00
ROL_MEM             1C10
ROL_MSG             1D20
ROL_REG             1B50
ROR_MEM             1C70
ROR_MSG             1D24
ROR_REG             1B98
SAVE_END            109A
SAVE_START          104C
SEPERATOR           25A4
SEVEN_MSG           26B2
SIX_MSG             26B0
SPACE_MSG           26A1
START               1000
START_ADDR_CHECK    1016
START_MSG           1D91
STA_ADDR            26F8
SUBCLASS1_1         25A9
SUBCLASS1_2         25AD
SUBCLASS_CHECK      2300
SUBI_MSG            1CAE
SUBQ_MSG            1C95
SUB_MSG             1CF5
SUCCESS_MSG         26CA
TEMP_MSG            25B7
THREE_MSG           26AA
TMP_STR             25BB
TWO_MSG             26A8
WORD_MSG            1D35
WRONG_SIZE          1A16
ZERO_MSG            26A4
