00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/13/2021 5:46:08 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; D0 is used to store values that will get compared
00001000                            13      
00001000                            14  START:
00001000                            15  
00001000                            16          ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001000  43F9 00001A1E             17          LEA         START_MSG, A1
00001006  103C 000E                 18          MOVE.B      #14, D0    
0000100A  4E4F                      19          TRAP        #15
0000100C                            20          
0000100C  43F9 00001A85             21          LEA         STA_ADDR, A1
00001012  103C 0002                 22          MOVE.B      #2, D0
00001016  4E4F                      23          TRAP        #15             ; D1 has the length of the address
00001018                            24          
00001018                            25          
00001018  4282                      26          CLR.L       D2
0000101A  4284                      27          CLR.L       D4
0000101C  4287                      28          CLR.L       D7
0000101E  4EB9 00001052             29          JSR         CONVERT_ASCII
00001024  2647                      30          MOVEA.L     D7, A3
00001026                            31          
00001026                            32          
00001026                            33          
00001026                            34          
00001026                            35          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
00001026                            36          
00001026  43F9 00001A38             37          LEA         END_MSG, A1
0000102C  103C 000E                 38          MOVE.B      #14, D0    
00001030  4E4F                      39          TRAP        #15
00001032                            40          
00001032  43F9 00001AAD             41          LEA         END_ADDR, A1
00001038  103C 0002                 42          MOVE.B      #2, D0
0000103C  4E4F                      43          TRAP        #15
0000103E                            44          
0000103E  4282                      45          CLR.L       D2
00001040  4284                      46          CLR.L       D4
00001042  4287                      47          CLR.L       D7
00001044  4EB9 00001052             48          JSR         CONVERT_ASCII
0000104A  2847                      49          MOVEA.L     D7, A4
0000104C                            50          
0000104C                            51          
0000104C                            52          ; add loop later that checks if data entered is valid for both messages
0000104C                            53          
0000104C                            54          
0000104C  4EB9 00001296             55          JSR         FILE_LOOP
00001052                            56          
00001052                            57  
00001052                            58  
00001052                            59  
00001052                            60  
00001052                            61  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
00001052  0C01 0000                 62          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001056  6700 0012                 63          BEQ         ASCII_DONE
0000105A                            64      
0000105A  1419                      65          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
0000105C                            66          
0000105C                            67  
0000105C                            68      
0000105C  103C 0039                 69          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
00001060  B400                      70          CMP.B       D0, D2
00001062                            71          
00001062                            72  
00001062  6F00 0008                 73          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
00001066  6000 0018                 74          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
0000106A                            75  
0000106A                            76  ASCII_DONE:
0000106A  4E75                      77          RTS
0000106C                            78  
0000106C                            79  
0000106C                            80  NUM_ASCII:
0000106C  5301                      81          SUBI.B      #$1, D1
0000106E                            82          
0000106E  103C 0030                 83          MOVE.B      #$30, D0
00001072  9400                      84          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
00001074  DE02                      85          ADD.B       D2, D7      ; new ASCII number stored at D7
00001076                            86          
00001076                            87  
00001076  0C01 0000                 88          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000107A  67EE                      89          BEQ         ASCII_DONE
0000107C                            90          
0000107C  E987                      91          ASL.L       #4, D7
0000107E                            92        
0000107E  60D2                      93          BRA         CONVERT_ASCII
00001080                            94          
00001080                            95          
00001080                            96  LET_ASCII:
00001080  5301                      97          SUBI.B      #$1, D1
00001082                            98                 
00001082                            99  
00001082  103C 0037                100          MOVE.B      #$37, D0
00001086  9400                     101          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001088  DE02                     102          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
0000108A                           103                                  ; 46 is used to represent F in Hex. 46 - 37 = F
0000108A                           104          
0000108A  0C01 0000                105          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000108E  67DA                     106          BEQ         ASCII_DONE
00001090                           107          
00001090  E987                     108          ASL.L       #4, D7
00001092                           109          
00001092                           110          
00001092  60BE                     111          BRA         CONVERT_ASCII
00001094                           112  
00001094                           113  PRINT_ADDRESS:
00001094                           114          ; SIMHALT 0000 0000
00001094  4281                     115          CLR.L       D1
00001096  4282                     116          CLR.L       D2
00001098  240B                     117          MOVE.L      A3, D2
0000109A                           118          
0000109A                           119          
0000109A                           120  
0000109A                           121          
0000109A  4EB9 000010BE            122          JSR         FLIP_START
000010A0  2607                     123          MOVE.L      D7, D3
000010A2                           124  
000010A2  4281                     125          CLR.L       D1
000010A4  4282                     126          CLR.L       D2
000010A6  4287                     127          CLR.L       D7
000010A8                           128          
000010A8  123C 0008                129          MOVE.B      #$8, D1
000010AC  6000 0040                130          BRA         PRINT_ADDRESS_LOOP
000010B0                           131  
000010B0  43F9 00001A51            132          LEA         SPACE_MSG, A1
000010B6  103C 000E                133          MOVE.B      #14, D0    
000010BA  4E4F                     134          TRAP        #15
000010BC                           135          
000010BC  4E75                     136          RTS
000010BE                           137          
000010BE                           138  FLIP_START:        
000010BE  4281                     139          CLR.L       D1
000010C0  4287                     140          CLR.L       D7
000010C2                           141          
000010C2  123C 0008                142          MOVE.B      #$8, D1
000010C6                           143          
000010C6  4EB9 000010CE            144          JSR         FLIP_LOOP
000010CC                           145          
000010CC                           146          
000010CC  4E75                     147          RTS
000010CE                           148          
000010CE                           149  FLIP_LOOP:
000010CE                           150  
000010CE                           151          ; SIMHALT
000010CE                           152          
000010CE  0C01 0000                153          CMPI.B      #$0, D1
000010D2  6700 0018                154          BEQ         FLIP_DONE
000010D6  5301                     155          SUBI.B      #$1, D1
000010D8  E987                     156          ASL.L       #4, D7
000010DA                           157          
000010DA  4285                     158          CLR.L       D5
000010DC                           159          
000010DC  1A02                     160          MOVE.B      D2, D5
000010DE                           161          
000010DE  103C 001C                162          MOVE.B      #28,D0    
000010E2  E1AD                     163          LSL.L       D0, D5     
000010E4  E99D                     164          ROL.L       #4, D5
000010E6                           165          
000010E6  DE05                     166          ADD.B       D5, D7
000010E8                           167          
000010E8                           168          
000010E8  E882                     169          ASR.L       #4, D2
000010EA                           170          
000010EA  60E2                     171          BRA         FLIP_LOOP
000010EC                           172  
000010EC                           173  FLIP_DONE:
000010EC  4E75                     174          RTS
000010EE                           175  
000010EE                           176  
000010EE                           177          
000010EE                           178  
000010EE                           179  PRINT_ADDRESS_LOOP:
000010EE                           180          ; SIMHALT
000010EE                           181          
000010EE  0C01 0000                182          CMPI.B      #$0, D1
000010F2  6700 0094                183          BEQ         PRINT_ADDRESS_EXIT
000010F6                           184          
000010F6                           185          
000010F6  5301                     186          SUBI.B      #$1, D1
000010F8                           187          
000010F8  1403                     188          MOVE.B      D3, D2
000010FA  103C 001C                189          MOVE.B      #28,D0    
000010FE  E1AA                     190          LSL.L       D0,D2     
00001100  E99A                     191          ROL.L       #4,D2 
00001102                           192          
00001102                           193          
00001102  E883                     194          ASR.L       #4, D3
00001104                           195          
00001104                           196          
00001104  B43C 0000                197          CMP.B       #0,D2
00001108  6700 008C                198          BEQ         PRINT_ADR0
0000110C  B43C 0001                199          CMP.B       #1,D2
00001110  6700 0094                200          BEQ         PRINT_ADR1
00001114  B43C 0002                201          CMP.B       #2,D2
00001118  6700 009C                202          BEQ         PRINT_ADR2
0000111C  B43C 0003                203          CMP.B       #3,D2
00001120  6700 00A4                204          BEQ         PRINT_ADR3
00001124  B43C 0004                205          CMP.B       #4,D2
00001128  6700 00AC                206          BEQ         PRINT_ADR4
0000112C  B43C 0005                207          CMP.B       #5,D2
00001130  6700 00B4                208          BEQ         PRINT_ADR5
00001134  B43C 0006                209          CMP.B       #6,D2
00001138  6700 00BC                210          BEQ         PRINT_ADR6
0000113C  B43C 0007                211          CMP.B       #7,D2
00001140  6700 00C4                212          BEQ         PRINT_ADR7
00001144  B43C 0008                213          CMP.B       #8,D2
00001148  6700 00CC                214          BEQ         PRINT_ADR8
0000114C  B43C 0009                215          CMP.B       #9,D2
00001150  6700 00D4                216          BEQ         PRINT_ADR9
00001154  B43C 000A                217          CMP.B       #$A,D2
00001158  6700 00DC                218          BEQ         PRINT_ADRA
0000115C  B43C 000B                219          CMP.B       #$B,D2
00001160  6700 00E4                220          BEQ         PRINT_ADRB
00001164  B43C 000C                221          CMP.B       #$C,D2
00001168  6700 00EC                222          BEQ         PRINT_ADRC
0000116C  B43C 000D                223          CMP.B       #$D,D2
00001170  6700 00F4                224          BEQ         PRINT_ADRD
00001174  B43C 000E                225          CMP.B       #$E,D2
00001178  6700 00FC                226          BEQ         PRINT_ADRE
0000117C  B43C 000F                227          CMP.B       #$F,D2
00001180  6700 0104                228          BEQ         PRINT_ADRF
00001184                           229  
00001184                           230  
00001184                           231  
00001184  6000 FF68                232          BRA         PRINT_ADDRESS_LOOP
00001188                           233          
00001188                           234  
00001188                           235          
00001188                           236  
00001188                           237  PRINT_ADDRESS_EXIT:
00001188  43F9 00001A51            238          LEA         SPACE_MSG, A1
0000118E  103C 000E                239          MOVE.B      #14, D0    
00001192  4E4F                     240          TRAP        #15
00001194                           241          
00001194  4E75                     242          RTS
00001196                           243          
00001196                           244  PRINT_ADR0:
00001196  43F9 00001A54            245          LEA         ZERO_MSG, A1
0000119C  103C 000E                246          MOVE.B      #14, D0    
000011A0  4E4F                     247          TRAP        #15
000011A2  6000 FF4A                248          BRA         PRINT_ADDRESS_LOOP
000011A6                           249  PRINT_ADR1:
000011A6  43F9 00001A56            250          LEA         ONE_MSG, A1
000011AC  103C 000E                251          MOVE.B      #14, D0    
000011B0  4E4F                     252          TRAP        #15
000011B2  6000 FF3A                253          BRA         PRINT_ADDRESS_LOOP
000011B6                           254  PRINT_ADR2:
000011B6  43F9 00001A58            255          LEA         TWO_MSG, A1
000011BC  103C 000E                256          MOVE.B      #14, D0    
000011C0  4E4F                     257          TRAP        #15
000011C2  6000 FF2A                258          BRA         PRINT_ADDRESS_LOOP
000011C6                           259  PRINT_ADR3:
000011C6  43F9 00001A5A            260          LEA         THREE_MSG, A1
000011CC  103C 000E                261          MOVE.B      #14, D0    
000011D0  4E4F                     262          TRAP        #15
000011D2  6000 FF1A                263          BRA         PRINT_ADDRESS_LOOP
000011D6                           264  PRINT_ADR4:
000011D6  43F9 00001A5C            265          LEA         FOUR_MSG, A1
000011DC  103C 000E                266          MOVE.B      #14, D0    
000011E0  4E4F                     267          TRAP        #15
000011E2  6000 FF0A                268          BRA         PRINT_ADDRESS_LOOP
000011E6                           269  PRINT_ADR5:
000011E6  43F9 00001A5E            270          LEA         FIVE_MSG, A1
000011EC  103C 000E                271          MOVE.B      #14, D0    
000011F0  4E4F                     272          TRAP        #15
000011F2  6000 FEFA                273          BRA         PRINT_ADDRESS_LOOP
000011F6                           274  PRINT_ADR6:
000011F6  43F9 00001A60            275          LEA         SIX_MSG, A1
000011FC  103C 000E                276          MOVE.B      #14, D0    
00001200  4E4F                     277          TRAP        #15
00001202  6000 FEEA                278          BRA         PRINT_ADDRESS_LOOP
00001206                           279  PRINT_ADR7:
00001206  43F9 00001A62            280          LEA         SEVEN_MSG, A1
0000120C  103C 000E                281          MOVE.B      #14, D0    
00001210  4E4F                     282          TRAP        #15
00001212  6000 FEDA                283          BRA         PRINT_ADDRESS_LOOP
00001216                           284  PRINT_ADR8:
00001216  43F9 00001A64            285          LEA         EIGHT_MSG, A1
0000121C  103C 000E                286          MOVE.B      #14, D0    
00001220  4E4F                     287          TRAP        #15
00001222  6000 FECA                288          BRA         PRINT_ADDRESS_LOOP
00001226                           289  PRINT_ADR9:
00001226  43F9 00001A66            290          LEA         NINE_MSG, A1
0000122C  103C 000E                291          MOVE.B      #14, D0    
00001230  4E4F                     292          TRAP        #15
00001232  6000 FEBA                293          BRA         PRINT_ADDRESS_LOOP
00001236                           294  PRINT_ADRA:
00001236  43F9 00001A68            295          LEA         A_MSG, A1
0000123C  103C 000E                296          MOVE.B      #14, D0    
00001240  4E4F                     297          TRAP        #15
00001242  6000 FEAA                298          BRA         PRINT_ADDRESS_LOOP
00001246                           299  PRINT_ADRB:
00001246  43F9 00001A6A            300          LEA         B_MSG, A1
0000124C  103C 000E                301          MOVE.B      #14, D0    
00001250  4E4F                     302          TRAP        #15
00001252  6000 FE9A                303          BRA         PRINT_ADDRESS_LOOP
00001256                           304  PRINT_ADRC:
00001256  43F9 00001A6C            305          LEA         C_MSG, A1
0000125C  103C 000E                306          MOVE.B      #14, D0    
00001260  4E4F                     307          TRAP        #15
00001262  6000 FE8A                308          BRA         PRINT_ADDRESS_LOOP
00001266                           309  PRINT_ADRD:
00001266  43F9 00001A6E            310          LEA         D_MSG, A1
0000126C  103C 000E                311          MOVE.B      #14, D0    
00001270  4E4F                     312          TRAP        #15
00001272  6000 FE7A                313          BRA         PRINT_ADDRESS_LOOP
00001276                           314  PRINT_ADRE:
00001276  43F9 00001A70            315          LEA         E_MSG, A1
0000127C  103C 000E                316          MOVE.B      #14, D0    
00001280  4E4F                     317          TRAP        #15
00001282  6000 FE6A                318          BRA         PRINT_ADDRESS_LOOP
00001286                           319  PRINT_ADRF:
00001286  43F9 00001A72            320          LEA         F_MSG, A1
0000128C  103C 000E                321          MOVE.B      #14, D0    
00001290  4E4F                     322          TRAP        #15
00001292  6000 FE5A                323          BRA         PRINT_ADDRESS_LOOP
00001296                           324  
00001296                           325  
00001296                           326  FILE_LOOP:
00001296  4280                     327          CLR.L       D0
00001298  4281                     328          CLR.L       D1
0000129A  4282                     329          CLR.L       D2
0000129C  4283                     330          CLR.L       D3
0000129E  4284                     331          CLR.L       D4
000012A0  4285                     332          CLR.L       D5
000012A2  4286                     333          CLR.L       D6
000012A4  4287                     334          CLR.L       D7
000012A6                           335          
000012A6                           336  
000012A6                           337  
000012A6                           338  
000012A6                           339          ;       Add branch here that will take the current address in A3
000012A6                           340          ;       Turn it into characters and print it to the screen with space
000012A6  4EB8 1094                341          JSR         PRINT_ADDRESS
000012AA                           342          
000012AA                           343          
000012AA  381B                     344          MOVE.W      (A3)+, D4
000012AC                           345          ; SIMHALT
000012AC  4EB9 000012D0            346          JSR         JUMP_OP_CODE
000012B2                           347          
000012B2  43F9 00001A82            348          LEA         NEW_LINE, A1
000012B8  103C 000E                349          MOVE.B      #14, D0
000012BC  4E4F                     350          TRAP        #15
000012BE                           351  
000012BE                           352  
000012BE  B9CB                     353          CMP.L      A3, A4
000012C0                           354          ;       If our pointer is at the end or beyond, BRA to DONE
000012C0                           355          ; SIMHALT
000012C0                           356          
000012C0                           357          
000012C0                           358          
000012C0  6700 0008                359          BEQ         DONE
000012C4  6F00 0004                360          BLE         DONE       
000012C8  60CC                     361          BRA         FILE_LOOP
000012CA                           362  
000012CA                           363  
000012CA                           364  
000012CA                           365  
000012CA                           366  
000012CA                           367  DONE:   
000012CA  103C 0009                368          MOVE.B      #9, D0
000012CE  4E4F                     369          TRAP        #15
000012D0                           370          
000012D0                           371          
000012D0                           372          
000012D0                           373  * Put variables and constants here
000012D0                           374                  INCLUDE     'Disassembler_OP_Codes.x68'
000012D0                           375  
000012D0                           376  
000012D0                           377  
000012D0                           378  ; D4 Contains Original hex code
000012D0                           379  ; D3 Contains modified hex code
000012D0                           380  
000012D0                           381  ; D1 is used to bit shift
000012D0                           382  
000012D0                           383  
000012D0                           384  ; D4 = XXXX YYYY YYYY YYYY
000012D0                           385  JUMP_OP_CODE:
000012D0                           386          ; SIMHALT
000012D0  4283                     387          CLR.L       D3
000012D2  2604                     388          MOVE.L      D4, D3
000012D4  4281                     389          CLR.L       D1
000012D6  4282                     390          CLR.L       D2
000012D8  123C 000C                391          MOVE.B      #12, D1
000012DC  E26B                     392          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000012DE                           393  
000012DE                           394  
000012DE  B63C 0000                395          CMP.B       #$0, D3
000012E2  6700 004E                396          BEQ         JUMP_0 
000012E6  B63C 0001                397          CMP.B       #$1, D3
000012EA  6700 004A                398          BEQ         JUMP_1 
000012EE  B63C 0002                399          CMP.B       #$2, D3
000012F2  6700 0050                400          BEQ         JUMP_2
000012F6  B63C 0003                401          CMP.B       #$3, D3
000012FA  6700 0060                402          BEQ         JUMP_3
000012FE  B63C 0004                403          CMP.B       #$4, D3
00001302  6700 0070                404          BEQ         JUMP_4
00001306  B63C 0005                405          CMP.B       #$5, D3
0000130A  6700 0096                406          BEQ         JUMP_5
0000130E  B63C 0006                407          CMP.B       #$6, D3
00001312  6700 00A0                408          BEQ         JUMP_6
00001316  B63C 0007                409          CMP.B       #$7, D3
0000131A  6700 009E                410          BEQ         JUMP_7
0000131E  B63C 0008                411          CMP.B       #$8, D3
00001322  6700 009C                412          BEQ         JUMP_8
00001326  B63C 0009                413          CMP.B       #$9, D3
0000132A  6700 009A                414          BEQ         JUMP_9
0000132E                           415  
0000132E  6000 00BA                416          BRA         JUMP_ERROR
00001332                           417  
00001332                           418  
00001332                           419  
00001332                           420  
00001332                           421         
00001332                           422          
00001332                           423  JUMP_0:
00001332                           424          *ORI
00001332                           425          *JSR         Bits11to8
00001332                           426          *CMP.B       #$0, D3  
00001332                           427          *BEQ         OP_CODE_ORI
00001332                           428          
00001332  6000 00C4                429          BRA         INVALID_INSTR
00001336                           430          
00001336                           431  JUMP_1:
00001336                           432  
00001336  4EB9 00001496            433          JSR         OP_CODE_BASE_MOVE
0000133C  4EB9 00001616            434          JSR         EA_MOVE 
00001342  4E75                     435          RTS
00001344                           436  
00001344                           437  
00001344                           438  JUMP_2:
00001344                           439  
00001344  4EB9 00001466            440          JSR         Bits8to6
0000134A  B23C 0001                441          CMP.B       #$1, D1 
0000134E  6700 0164                442          BEQ         J_MOVEA_L 
00001352  6600 0184                443          BNE         J_MOVE_L
00001356                           444  
00001356                           445  
00001356  6000 00A0                446          BRA         INVALID_INSTR
0000135A  4E75                     447          RTS
0000135C                           448          
0000135C                           449  JUMP_3:
0000135C                           450  
0000135C  4EB9 00001466            451          JSR         Bits8to6
00001362  0C01 0001                452          CMPI.B       #$1, D1 
00001366  6700 0194                453          BEQ         J_MOVEA_W
0000136A  6600 01B4                454          BNE         J_MOVE_W
0000136E                           455          
0000136E                           456          
0000136E                           457          
0000136E  6000 0088                458          BRA INVALID_INSTR
00001372                           459          
00001372  4E75                     460          RTS
00001374                           461  
00001374                           462  JUMP_4:
00001374                           463  
00001374  4281                     464          CLR.L       D1
00001376  3204                     465          MOVE.W      D4, D1
00001378  B27C 4E71                466          CMP.W       #$4E71, D1 ;NOP 
0000137C  6700 01C6                467          BEQ         OP_CODE_NOP
00001380                           468          
00001380  4EB9 00001442            469          JSR         Bits7to6     ;
00001386  0C01 0002                470          CMPI.B      #2, D1
0000138A  6700 01C6                471          BEQ         OP_CODE_JSR ;JSR
0000138E                           472          
0000138E  4EB9 00001466            473          JSR         Bits8to6     ;
00001394  0C01 0007                474          CMPI.B      #7, D1
00001398  6700 01C6                475          BEQ         OP_CODE_LEA ;LEA
0000139C                           476          
0000139C                           477          
0000139C  6000 005A                478          BRA INVALID_INSTR
000013A0                           479          
000013A0  4E75                     480          RTS  
000013A2                           481  
000013A2                           482  
000013A2                           483  
000013A2                           484  JUMP_5:
000013A2  4281                     485          CLR.L       D1
000013A4  2204                     486          MOVE.L      D4, D1
000013A6  0801 0008                487          BTST        #8,D1 
000013AA  6700 01C6                488          BEQ         OP_CODE_ADDQ  
000013AE  6000 0048                489          BRA         INVALID_INSTR
000013B2  4E75                     490          RTS  
000013B4                           491          
000013B4                           492  JUMP_6:
000013B4                           493  
000013B4  6000 0042                494          BRA         INVALID_INSTR
000013B8  4E75                     495          RTS  
000013BA                           496  JUMP_7:
000013BA  6000 003C                497          BRA         INVALID_INSTR 
000013BE  4E75                     498          RTS
000013C0                           499  JUMP_8:
000013C0  6000 0036                500          BRA         INVALID_INSTR
000013C4  4E75                     501          RTS
000013C6                           502  
000013C6                           503  JUMP_9:
000013C6  6000 0030                504          BRA         INVALID_INSTR
000013CA  4E75                     505          RTS         
000013CC                           506  
000013CC                           507  JUMP_A:
000013CC  6000 002A                508          BRA         INVALID_INSTR
000013D0  4E75                     509          RTS 
000013D2                           510  JUMP_B:
000013D2  6000 0024                511          BRA         INVALID_INSTR
000013D6  4E75                     512          RTS         
000013D8                           513  
000013D8                           514  JUMP_C:
000013D8  6000 001E                515          BRA         INVALID_INSTR
000013DC  4E75                     516          RTS 
000013DE                           517  
000013DE                           518  JUMP_D:
000013DE  6000 0018                519          BRA         INVALID_INSTR
000013E2  4E75                     520          RTS 
000013E4                           521   
000013E4                           522  JUMP_E:
000013E4  6000 0012                523          BRA         INVALID_INSTR
000013E8  4E75                     524          RTS  
000013EA                           525           
000013EA                           526  JUMP_ERROR:       
000013EA  43F9 000015E6            527          LEA         ERROR_OP_MSG, A1
000013F0  103C 000E                528          MOVE.B      #14, D0
000013F4  4E4F                     529          TRAP        #15
000013F6                           530  
000013F6  4E75                     531          RTS
000013F8                           532  
000013F8                           533  INVALID_INSTR:
000013F8  43F9 000015FA            534          LEA         IMPLEMENT_MSG, A1
000013FE  103C 000E                535          MOVE.B      #14, D0
00001402  4E4F                     536          TRAP        #15
00001404  4E75                     537          RTS
00001406                           538  
00001406                           539  
00001406                           540  Bits2to0:
00001406  3204                     541          MOVE.W      D4, D1
00001408  103C 000D                542          MOVE.B      #13, D0     ; Shifting 13 bits
0000140C  E169                     543          LSL.W       D0, D1      ; shorten to two bits
0000140E  E069                     544          LSR.W       D0, D1      ; isolate two bits
00001410  4E75                     545          RTS
00001412                           546      
00001412                           547  Bits3to0:
00001412  3204                     548          MOVE.W      D4, D1
00001414  103C 000C                549          MOVE.B      #12, D0     ; Shift 12 bits
00001418  E169                     550          LSL.W       D0, D1      ; Shorten to 4th bit
0000141A  E069                     551          LSR.W       D0, D1      ; Isolate 4 bits
0000141C  4E75                     552          RTS
0000141E                           553      
0000141E                           554  Bits5to3:
0000141E  3204                     555          MOVE.W      D4, D1
00001420  103C 000A                556          MOVE.B      #10, D0     ; Shift 10 bits
00001424  E169                     557          LSL.W       D0, D1      ; cut to 5th bit
00001426  103C 000D                558          MOVE.B      #13, D0     ; Shift 13 bits
0000142A  E069                     559          LSR.W       D0, D1      ; Isolate bits 5-3
0000142C  4E75                     560          RTS
0000142E                           561  
0000142E                           562  Bits7to0:
0000142E  3204                     563          MOVE.W      D4, D1
00001430  E149                     564          LSL.W       #8, D1      ; cut to 8th bit
00001432  E049                     565          LSR.W       #8, D1      ; Isolate 7-0
00001434  4E75                     566          RTS
00001436                           567  Bits7to4: 
00001436  3204                     568          MOVE.W      D4, D1
00001438  E149                     569          LSL.W       #8, D1      ; cut to 8th bit
0000143A  103C 000C                570          MOVE.B      #12, D0     ; shift 12 bits
0000143E  E069                     571          LSR.W       D0, D1      ; isolate 7-4
00001440  4E75                     572          RTS
00001442                           573      
00001442                           574  Bits7to6:
00001442  3204                     575          MOVE.W      D4, D1
00001444  E149                     576          LSL.W       #8, D1      ; cut to 8th bit
00001446  103C 000E                577          MOVE.B      #14, D0     ; shift 14 bits
0000144A  E069                     578          LSR.W       D0, D1      ; isolate 7-6
0000144C  4E75                     579          RTS
0000144E                           580      
0000144E                           581  Bits8to3:
0000144E  3204                     582          MOVE.W      D4, D1
00001450  EF49                     583          LSL.W       #7, D1      ; cut to 9th bit
00001452  103C 000A                584          MOVE.B      #10, D0     ; shift 10 bits
00001456  E069                     585          LSR.W       D0, D1      ; isolate 8-3
00001458  4E75                     586          RTS
0000145A                           587      
0000145A                           588  Bits8to4:
0000145A  3204                     589          MOVE.W      D4, D1
0000145C  EF49                     590          LSL.W       #7, D1      ; cut to 9th bit
0000145E  103C 000B                591          MOVE.B      #11, D0     ; shift 11 bits
00001462  E069                     592          LSR.W       D0, D1      ; isolate 8-4
00001464  4E75                     593          RTS
00001466                           594      
00001466                           595  Bits8to6:
00001466  3204                     596          MOVE.W      D4, D1
00001468  EF49                     597          LSL.W       #7, D1      ; cut to 9th bit
0000146A  103C 000D                598          MOVE.B      #13, D0     ; shift 13 bits
0000146E  E069                     599          LSR.W       D0, D1      ; isolate 8-6
00001470  4E75                     600          RTS
00001472                           601  Bits11to6:
00001472  3204                     602          MOVE.W      D4, D1
00001474  E949                     603          LSL.W       #4, D1      ; cut to 12th bit
00001476  103C 000A                604          MOVE.B      #10, D0     ; shift 10 bits
0000147A  E069                     605          LSR.W       D0, D1      ; isolate 11-6
0000147C  4E75                     606          RTS
0000147E                           607  
0000147E                           608       
0000147E                           609  Bits11to8:
0000147E  3204                     610          MOVE.W      D4, D1
00001480  E949                     611          LSL.W       #4, D1      ; cut to 12th bit
00001482  103C 000C                612          MOVE.B      #12, D0     ; shift 12 bits
00001486  E069                     613          LSR.W       D0, D1      ; isolate 11-8
00001488  4E75                     614          RTS
0000148A                           615  
0000148A                           616  Bits11to9:
0000148A  3204                     617          MOVE.W      D4, D1
0000148C  E949                     618          LSL.W       #4, D1      ; cut to 12th bit
0000148E  103C 000D                619          MOVE.B      #13, D0     ; shift 13 bits
00001492  E069                     620          LSR.W       D0, D1      ; isolate 11-9
00001494  4E75                     621          RTS
00001496                           622  
00001496                           623  
00001496                           624  OP_CODE_BASE_MOVE:
00001496                           625          ; This should only execute for Move.B
00001496  43F9 00001585            626          LEA         MOVE_MSG, A1
0000149C  103C 000E                627          MOVE.B      #14, D0
000014A0  4E4F                     628          TRAP        #15
000014A2  43F9 000015DD            629          LEA         BYTE_MSG, A1
000014A8  103C 000E                630          MOVE.B      #14, D0
000014AC  4E4F                     631          TRAP        #15
000014AE                           632          
000014AE  163C 0000                633          MOVE.B      #0, D3
000014B2                           634          
000014B2                           635          
000014B2                           636          
000014B2  4E75                     637          RTS         
000014B4                           638  
000014B4                           639  J_MOVEA_L:
000014B4  43F9 0000158A            640          LEA         MOVEA_MSG, A1
000014BA  103C 000E                641          MOVE.B      #14, D0
000014BE  4E4F                     642          TRAP        #15
000014C0  43F9 000015E3            643          LEA         LONG_MSG, A1
000014C6  103C 000E                644          MOVE.B      #14, D0
000014CA  4E4F                     645          TRAP        #15
000014CC                           646          
000014CC  163C 0002                647          MOVE.B      #2, D3
000014D0  4EB9 00001616            648          JSR         EA_MOVE
000014D6  4E75                     649          RTS    
000014D8                           650  J_MOVE_L:
000014D8  43F9 00001585            651          LEA         MOVE_MSG, A1
000014DE  103C 000E                652          MOVE.B      #14, D0
000014E2  4E4F                     653          TRAP        #15
000014E4  43F9 000015E3            654          LEA         LONG_MSG, A1
000014EA  103C 000E                655          MOVE.B      #14, D0
000014EE  4E4F                     656          TRAP        #15
000014F0                           657          
000014F0  163C 0002                658          MOVE.B      #2, D3
000014F4  4EB9 00001616            659          JSR         EA_MOVE
000014FA                           660          
000014FA  4E75                     661          RTS
000014FC                           662  
000014FC                           663  
000014FC                           664  
000014FC                           665  J_MOVEA_W:
000014FC  43F9 0000158A            666          LEA         MOVEA_MSG, A1
00001502  103C 000E                667          MOVE.B      #14, D0
00001506  4E4F                     668          TRAP        #15
00001508  43F9 000015E0            669          LEA         WORD_MSG, A1
0000150E  103C 000E                670          MOVE.B      #14, D0
00001512  4E4F                     671          TRAP        #15
00001514                           672          
00001514  163C 0001                673          MOVE.B      #1, D3
00001518  4EB9 00001616            674          JSR         EA_MOVE
0000151E                           675          
0000151E  4E75                     676          RTS  
00001520                           677      
00001520                           678  J_MOVE_W:
00001520  43F9 00001585            679          LEA         MOVE_MSG, A1
00001526  103C 000E                680          MOVE.B      #14, D0
0000152A  4E4F                     681          TRAP        #15
0000152C  43F9 000015E0            682          LEA         WORD_MSG, A1
00001532  103C 000E                683          MOVE.B      #14, D0
00001536  4E4F                     684          TRAP        #15
00001538                           685          
00001538  163C 0001                686          MOVE.B      #1, D3
0000153C  4EB9 00001616            687          JSR         EA_MOVE
00001542                           688          
00001542  4E75                     689          RTS  
00001544                           690  
00001544                           691  
00001544                           692  OP_CODE_NOP:
00001544  43F9 00001594            693          LEA         NOP_MSG, A1
0000154A  103C 000E                694          MOVE.B      #14, D0
0000154E  4E4F                     695          TRAP        #15
00001550                           696  
00001550  4E75                     697          RTS
00001552                           698  
00001552                           699  OP_CODE_JSR:
00001552  43F9 000015A2            700          LEA         JSR_MSG, A1
00001558  103C 000E                701          MOVE.B      #14, D0
0000155C  4E4F                     702          TRAP        #15
0000155E                           703          
0000155E                           704  
0000155E                           705          *STORE DEST AND STORE IN REGISTER
0000155E                           706          *EA
0000155E                           707  
0000155E  4E75                     708          RTS
00001560                           709  
00001560                           710          
00001560                           711  OP_CODE_LEA:
00001560  43F9 0000159E            712          LEA         LEA_MSG, A1
00001566  103C 000E                713          MOVE.B      #14, D0
0000156A  4E4F                     714          TRAP        #15
0000156C  103C 0002                715          MOVE.B      #2, D0
00001570                           716  
00001570                           717          *EA
00001570                           718          *JSR         EA_LEA
00001570                           719  
00001570  4E75                     720          RTS
00001572                           721  
00001572                           722  OP_CODE_ADDQ:
00001572  43F9 00001580            723          LEA         ADDQ_MSG, A1
00001578  103C 000E                724          MOVE.B      #14, D0
0000157C  4E4F                     725          TRAP        #15
0000157E                           726          
0000157E  4E75                     727          RTS
00001580                           728          ;JSR         Bits7to6  
00001580                           729          ;MOVE        #5, TAB
00001580                           730          ;JSR         SizeTwoBits 
00001580                           731   *EA STUFF, MAYBE CHECK FOR DISPLACEMENT COUNT?
00001580                           732  
00001580                           733  
00001580                           734  
00001580                           735  
00001580= 41 44 44 51 00           736  ADDQ_MSG:       DC.B        'ADDQ',0
00001585= 4D 4F 56 45 00           737  MOVE_MSG:       DC.B        'MOVE',0
0000158A= 4D 4F 56 45 41 00        738  MOVEA_MSG:      DC.B        'MOVEA',0
00001590= 4F 52 49 00              739  ORI_MSG:        DC.B        'ORI',0
00001594= 4E 4F 50 00              740  NOP_MSG:        DC.B        'NOP',0
00001598= 4D 4F 56 45 4D 00        741  MOVEM_MSG:      DC.B        'MOVEM',0
0000159E= 4C 45 41 00              742  LEA_MSG:        DC.B        'LEA',0
000015A2= 4A 53 52 00              743  JSR_MSG:        DC.B        'JSR',0
000015A6= 42 52 41 00              744  BRA_MSG:        DC.B        'BRA',0
000015AA= 42 53 52 00              745  BSR_MSG:        DC.B        'BSR',0
000015AE= 4D 4F 56 45 51 00        746  MOVEQ_MSG:      DC.B        'MOVEQ',0
000015B4= 44 49 56 55 00           747  DIVU_MSG:       DC.B        'DIVU',0
000015B9= 53 55 42 00              748  SUB_MSG:        DC.B        'SUB',0
000015BD= 43 4D 50 00              749  CMP_MSG:        DC.B        'CMP',0
000015C1= 4D 55 4C 55 00           750  MULU_MSG:       DC.B        'MULU',0
000015C6= 41 44 44 00              751  ADD_MSG:        DC.B        'ADD',0
000015CA= 41 44 44 41 00           752  ADDA_MSG:       DC.B        'ADDA',0
000015CF= 41 53 4C 00              753  ASL_MSG:        DC.B        'ASL',0
000015D3= 41 53 52 00              754  ASR_MSG:        DC.B        'ASR',0
000015D7= 23 00                    755  POUND:          DC.B        '#',0
000015D9= 24 00                    756  DOLLAR:         DC.B        '$',0
000015DB= 25 00                    757  PERCENT:        DC.B        '%',0
000015DD                           758  
000015DD                           759  ; Size messages
000015DD                           760  
000015DD= 2E 42 00                 761  BYTE_MSG:       DC.B        '.B',0
000015E0= 2E 57 00                 762  WORD_MSG:       DC.B        '.W',0
000015E3= 2E 4C 00                 763  LONG_MSG:       DC.B        '.L',0
000015E6= 4E 6F 74 20 41 20 ...    764  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
000015FA= 4F 50 20 63 6F 64 ...    765  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001616                           766  
00001616                           767  
00001616                           768  
00001616                           769  
00001616                           770  
00001616                           771  
00001616                           772  
00001616                           773  
00001616                           774  
00001616                           775  
00001616                           776  
00001616                           777  
00001616                           778  
00001616                           779  
00001616                           780  
00001616                           781  
00001616                           782  
00001616                           783  
00001616                           784  
00001616                           785  -------------------- end include --------------------
00001616                           786                
00001616                           787                  INCLUDE     'Disassembler_EA_Codes.x68'
00001616                           788  
00001616                           789  
00001616                           790  ; D3 = OP size. ie. Byte, Word, Long
00001616                           791  ; D4 = Original hex code
00001616                           792  ; D5 = Current Mode being isolated
00001616                           793  ; D6 = Current Register being isolated
00001616                           794  
00001616                           795  ; A3 will store starting address
00001616                           796  ; A4 will store ending address
00001616                           797  
00001616                           798  
00001616                           799  
00001616                           800  ; based on the size of the move operation Print out an amount of data as is.
00001616                           801  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001616                           802  EA_MOVE:
00001616                           803          
00001616                           804  ; A = Size
00001616                           805  ; B = Destination Register
00001616                           806  ; C = Destination Mode
00001616                           807  ; D = Source Mode
00001616                           808  ; E = Source Register
00001616                           809  
00001616                           810  ; 00AA BBBC CCDD DEEE 
00001616  FFFF FFFF                811          SIMHALT
0000161A  4281                     812          CLR.L       D1
0000161C  4285                     813          CLR.L       D5
0000161E  4286                     814          CLR.L       D6
00001620                           815          
00001620  3A04                     816          MOVE.W      D4, D5
00001622  3C04                     817          MOVE.W      D4, D6
00001624                           818          
00001624                           819          
00001624  123C 000A                820          MOVE.B      #10,D1
00001628  E36D                     821          LSL.W       D1,D5       
0000162A  123C 000D                822          MOVE.B      #13,D1
0000162E  E26D                     823          LSR.W       D1,D5
00001630                           824          ; 0000 0000 00DD D000
00001630                           825          ; Isolating Source Mode
00001630                           826          
00001630                           827          
00001630  E36E                     828          LSL.W       D1,D6
00001632  E26E                     829          LSR.W       D1,D6
00001634                           830          ; 0000 0000 0000 0EEE
00001634                           831          ; Isolating Source Register 
00001634                           832         
00001634  4EB9 00001682            833          JSR         MODE_TABLE
0000163A                           834          
0000163A                           835          ; Print Out ", "
0000163A  43F9 000019EE            836          LEA         SEPERATOR, A1
00001640  103C 000E                837          MOVE.B      #14, D0
00001644  4E4F                     838          TRAP        #15
00001646  FFFF FFFF                839          SIMHALT
0000164A  4285                     840          CLR.L       D5
0000164C  4286                     841          CLR.L       D6
0000164E  3A04                     842          MOVE.W      D4, D5
00001650  3C04                     843          MOVE.W      D4, D6
00001652                           844          
00001652  123C 0007                845          MOVE.B      #7,D1     
00001656  E36D                     846          LSL.W       D1,D5       
00001658  123C 000D                847          MOVE.B      #13,D1
0000165C  E26D                     848          LSR.W       D1,D5
0000165E                           849          ; 0000 000C CC00 0000
0000165E                           850          ; Isolating Destination Mode  
0000165E                           851              
0000165E  E94E                     852          LSL.W       #4,D6  
00001660  E26E                     853          LSR.W       D1,D6
00001662                           854          ; 0000 BBB0 0000 0000
00001662                           855          ; Isolating Destination Register
00001662                           856          
00001662  4EB9 00001682            857          JSR         MODE_TABLE
00001668                           858  
00001668                           859  
00001668  4E75                     860          RTS
0000166A                           861          
0000166A                           862          
0000166A                           863  ; X+Y = Effective addressing
0000166A                           864  ; XXX = Mode
0000166A                           865  ; YYY = Register
0000166A                           866      
0000166A                           867  ; 0000 0000 00XX XYYY
0000166A                           868  EA_LEA:
0000166A  4281                     869          CLR.L       D1
0000166C  4285                     870          CLR.L       D5
0000166E  4286                     871          CLR.L       D6
00001670                           872  
00001670  3A04                     873          MOVE.W      D4, D5
00001672  3C04                     874          MOVE.W      D4, D6
00001674                           875  
00001674                           876  
00001674                           877          ; Print Out ", "
00001674  43F9 000019EE            878          LEA         SEPERATOR, A1
0000167A  103C 000E                879          MOVE.B      #14, D0
0000167E  4E4F                     880          TRAP        #15
00001680                           881  
00001680                           882  
00001680  4E75                     883          RTS
00001682                           884  
00001682                           885  
00001682                           886  
00001682                           887  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00001682                           888  MODE_TABLE:
00001682                           889  
00001682  BA3C 0000                890          CMP.B       #0,D5
00001686  6700 0048                891          BEQ         J_TBL_D
0000168A  BA3C 0001                892          CMP.B       #1,D5
0000168E  6700 002C                893          BEQ         J_TBL_A
00001692  BA3C 0002                894          CMP.B       #2,D5
00001696  6700 004C                895          BEQ         J_TBL_A_P
0000169A  BA3C 0003                896          CMP.B       #3,D5
0000169E  6700 0064                897          BEQ         J_TBL_A_INCR
000016A2  BA3C 0004                898          CMP.B       #4,D5
000016A6  6700 007C                899          BEQ         J_TBL_A_DECR
000016AA  BA3C 0007                900          CMP.B       #7,D5
000016AE  6700 0004                901          BEQ         J_ABS
000016B2                           902          
000016B2  4E75                     903          RTS
000016B4                           904          ;   deal with errors here
000016B4                           905  
000016B4                           906  J_ABS:
000016B4  4EB9 0000174E            907          JSR         J_ABS_TABLE
000016BA  4E75                     908          RTS
000016BC                           909  
000016BC                           910  J_TBL_A:
000016BC  43F9 000019DD            911          LEA         MODE_1_MSG, A1 ; A#
000016C2  103C 000E                912          MOVE.B      #14, D0
000016C6  4E4F                     913          TRAP        #15
000016C8  4EB9 00001744            914          JSR         DISPLAY_REG
000016CE                           915  
000016CE  4E75                     916          RTS
000016D0                           917  
000016D0                           918  
000016D0                           919  J_TBL_D:
000016D0  43F9 000019DA            920          LEA         MODE_0_MSG, A1 ; D#
000016D6  103C 000E                921          MOVE.B      #14, D0
000016DA  4E4F                     922          TRAP        #15
000016DC  4EB9 00001744            923          JSR         DISPLAY_REG
000016E2  4E75                     924          RTS
000016E4                           925  
000016E4                           926  J_TBL_A_P:
000016E4                           927  
000016E4  43F9 000019E0            928          LEA         MODE_A_MSG, A1 ; (A#)
000016EA  103C 000E                929          MOVE.B      #14, D0
000016EE  4E4F                     930          TRAP        #15
000016F0  4EB9 00001744            931          JSR         DISPLAY_REG
000016F6                           932          
000016F6  43F9 000019E4            933          LEA         MODE_A_1_MSG, A1
000016FC  103C 000E                934          MOVE.B      #14, D0
00001700  4E4F                     935          TRAP        #15
00001702                           936  
00001702                           937          
00001702  4E75                     938          RTS
00001704                           939      
00001704                           940  J_TBL_A_INCR:
00001704  43F9 000019E0            941          LEA         MODE_A_MSG, A1 ; (A#)+
0000170A  103C 000E                942          MOVE.B      #14, D0
0000170E  4E4F                     943          TRAP        #15
00001710  4EB9 00001744            944          JSR         DISPLAY_REG
00001716                           945          
00001716  43F9 000019E6            946          LEA         MODE_A_2_MSG, A1
0000171C  103C 000E                947          MOVE.B      #14, D0
00001720  4E4F                     948          TRAP        #15
00001722                           949  
00001722  4E75                     950          RTS
00001724                           951          
00001724                           952  J_TBL_A_DECR:
00001724  43F9 000019E9            953          LEA         MODE_MINUS_MSG, A1 ; -(A#)
0000172A  103C 000E                954          MOVE.B      #14, D0
0000172E  4E4F                     955          TRAP        #15
00001730  4EB9 00001744            956          JSR         DISPLAY_REG
00001736                           957          
00001736  43F9 000019E4            958          LEA         MODE_A_1_MSG, A1
0000173C  103C 000E                959          MOVE.B      #14, D0
00001740  4E4F                     960          TRAP        #15
00001742                           961  
00001742  4E75                     962          RTS
00001744                           963          
00001744                           964          
00001744                           965  DISPLAY_REG:
00001744  1206                     966          MOVE.B      D6, D1
00001746  103C 0003                967          MOVE.B      #$3, D0
0000174A  4E4F                     968          TRAP        #15
0000174C  4E75                     969          RTS
0000174E                           970  
0000174E                           971  J_ABS_TABLE:
0000174E                           972          ; SIMHALT
0000174E  BC3C 0000                973          CMP.B       #0,D6
00001752  6700 0014                974          BEQ         J_ABS_W
00001756                           975              
00001756  BC3C 0001                976          CMP.B       #1,D6
0000175A  6700 0036                977          BEQ         J_ABS_L
0000175E                           978              
0000175E  BC3C 0004                979          CMP.B       #4,D6
00001762  6700 005A                980          BEQ         DATA_TABLE
00001766                           981              
00001766  4E75                     982          RTS
00001768                           983          
00001768                           984  ;   Word
00001768                           985  J_ABS_W:
00001768  FFFF FFFF                986          SIMHALT
0000176C  43F9 000019F3            987          LEA         DOLLAR_MSG, A1
00001772  103C 000E                988          MOVE.B      #14, D0
00001776  4E4F                     989          TRAP        #15
00001778                           990         
00001778                           991  
00001778  325B                     992          MOVE.W      (A3)+, A1
0000177A                           993          
0000177A                           994  
0000177A                           995          
0000177A  4281                     996          CLR.L       D1
0000177C  4282                     997          CLR.L       D2
0000177E  4287                     998          CLR.L       D7
00001780  123C 0004                999          MOVE.B      #4, D1
00001784  4EB8 1052               1000          JSR         CONVERT_ASCII
00001788                          1001          
00001788  2247                    1002          MOVE.L      D7, A1
0000178A  103C 000E               1003          MOVE.B      #14, D0
0000178E  4E4F                    1004          TRAP        #15
00001790                          1005  
00001790  4E75                    1006          RTS
00001792                          1007  ;   Long
00001792                          1008  J_ABS_L:
00001792  FFFF FFFF               1009          SIMHALT
00001796  43F9 000019F3           1010          LEA         DOLLAR_MSG, A1
0000179C  103C 000E               1011          MOVE.B      #14, D0
000017A0  4E4F                    1012          TRAP        #15
000017A2                          1013  
000017A2  4281                    1014          CLR.L       D1
000017A4  4282                    1015          CLR.L       D2
000017A6  4287                    1016          CLR.L       D7
000017A8                          1017  
000017A8                          1018  
000017A8                          1019          
000017A8  241B                    1020          MOVE.L      (A3)+, D2
000017AA                          1021          
000017AA  4EB8 10BE               1022          JSR         FLIP_START
000017AE                          1023  
000017AE  4282                    1024          CLR.L       D2
000017B0                          1025          
000017B0                          1026  
000017B0  123C 0008               1027          MOVE.B      #8, D1
000017B4  4EB9 00001840           1028          JSR         CONVERT_HEX
000017BA                          1029  
000017BA                          1030  
000017BA                          1031          
000017BA                          1032          
000017BA  4E75                    1033          RTS
000017BC                          1034  
000017BC                          1035  ;   Error
000017BC                          1036  J_ABS_ERROR:
000017BC  4E75                    1037          RTS
000017BE                          1038  
000017BE                          1039  ;   Hard Coded Data
000017BE                          1040  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
000017BE                          1041  
000017BE                          1042  ;   Size num 0 = Byte 1 = Word 2 Long
000017BE                          1043  
000017BE                          1044  DATA_TABLE:
000017BE  FFFF FFFF               1045          SIMHALT
000017C2  43F9 000019F6           1046          LEA         DATA_MSG, A1
000017C8  103C 000E               1047          MOVE.B      #14, D0
000017CC  4E4F                    1048          TRAP        #15
000017CE                          1049  
000017CE                          1050  
000017CE  B63C 0000               1051          CMP.B       #0,D3 
000017D2  6700 0014               1052          BEQ         DATA_B
000017D6                          1053  
000017D6  B63C 0001               1054          CMP.B       #1,D3 
000017DA  6700 002A               1055          BEQ         DATA_W
000017DE                          1056          
000017DE  B63C 0002               1057          CMP.B       #2,D3 
000017E2  6700 003E               1058          BEQ         DATA_L
000017E6                          1059          
000017E6  4E75                    1060          RTS
000017E8                          1061  
000017E8                          1062  DATA_B:
000017E8  4281                    1063          CLR.L       D1
000017EA  4282                    1064          CLR.L       D2
000017EC  4287                    1065          CLR.L       D7
000017EE                          1066          
000017EE  341B                    1067          MOVE.W      (A3)+, D2
000017F0                          1068          * Only read first byte from the word 
000017F0                          1069          
000017F0  4EB8 10BE               1070          JSR         FLIP_START
000017F4  4847                    1071          SWAP        D7
000017F6  E09F                    1072          ROR.L       #8,D7
000017F8  4282                    1073          CLR.L       D2
000017FA                          1074          
000017FA                          1075  
000017FA  123C 0002               1076          MOVE.B      #2, D1
000017FE  4EB9 00001840           1077          JSR         CONVERT_HEX
00001804                          1078  
00001804                          1079  
00001804                          1080  
00001804  4E75                    1081          RTS
00001806                          1082  
00001806                          1083  DATA_W:
00001806  4281                    1084          CLR.L       D1
00001808  4282                    1085          CLR.L       D2
0000180A  4287                    1086          CLR.L       D7
0000180C                          1087          
0000180C  341B                    1088          MOVE.W      (A3)+, D2
0000180E                          1089          
0000180E  4EB8 10BE               1090          JSR         FLIP_START
00001812                          1091  
00001812  4847                    1092          SWAP        D7
00001814                          1093  
00001814  4282                    1094          CLR.L       D2
00001816                          1095          
00001816  123C 0004               1096          MOVE.B      #4, D1
0000181A                          1097          
0000181A                          1098          
0000181A  4EB9 00001840           1099          JSR         CONVERT_HEX
00001820                          1100  
00001820                          1101          
00001820                          1102  
00001820  4E75                    1103          RTS
00001822                          1104  
00001822                          1105  DATA_L:
00001822  FFFF FFFF               1106          SIMHALT
00001826  4281                    1107          CLR.L       D1
00001828  4282                    1108          CLR.L       D2
0000182A  4287                    1109          CLR.L       D7
0000182C                          1110          
0000182C  241B                    1111          MOVE.L      (A3)+, D2
0000182E                          1112          
0000182E  4EB8 10BE               1113          JSR         FLIP_START
00001832                          1114  
00001832  4282                    1115          CLR.L       D2
00001834                          1116          
00001834                          1117  
00001834  123C 0008               1118          MOVE.B      #8, D1
00001838  4EB9 00001840           1119          JSR         CONVERT_HEX
0000183E                          1120  
0000183E                          1121          
0000183E                          1122  
0000183E  4E75                    1123          RTS
00001840                          1124  
00001840                          1125  
00001840                          1126  CONVERT_HEX:
00001840                          1127          ; SIMHALT    
00001840  0C01 0000               1128          CMPI.B      #$0, D1    
00001844  6700 0092               1129          BEQ         HEX_DONE
00001848                          1130          
00001848  5301                    1131          SUBI.B      #$1, D1       
0000184A                          1132  
0000184A  4282                    1133          CLR.L       D2
0000184C                          1134      
0000184C  1407                    1135          MOVE.B      D7,D2
0000184E                          1136              
0000184E  103C 001C               1137          MOVE.B      #28,D0    
00001852  E1AA                    1138          LSL.L       D0,D2     
00001854  E99A                    1139          ROL.L       #4,D2
00001856                          1140          
00001856  E887                    1141          ASR.L       #4, D7
00001858                          1142          
00001858                          1143          
00001858  B43C 0000               1144          CMP.B       #0,D2
0000185C  6700 007C               1145          BEQ         PRINT_ASCII0
00001860  B43C 0001               1146          CMP.B       #1,D2
00001864  6700 0084               1147          BEQ         PRINT_ASCII1
00001868  B43C 0002               1148          CMP.B       #2,D2
0000186C  6700 008C               1149          BEQ         PRINT_ASCII2
00001870  B43C 0003               1150          CMP.B       #3,D2
00001874  6700 0094               1151          BEQ         PRINT_ASCII3
00001878  B43C 0004               1152          CMP.B       #4,D2
0000187C  6700 009C               1153          BEQ         PRINT_ASCII4
00001880  B43C 0005               1154          CMP.B       #5,D2
00001884  6700 00A4               1155          BEQ         PRINT_ASCII5
00001888  B43C 0006               1156          CMP.B       #6,D2
0000188C  6700 00AC               1157          BEQ         PRINT_ASCII6
00001890  B43C 0007               1158          CMP.B       #7,D2
00001894  6700 00B4               1159          BEQ         PRINT_ASCII7
00001898  B43C 0008               1160          CMP.B       #8,D2
0000189C  6700 00BC               1161          BEQ         PRINT_ASCII8
000018A0  B43C 0009               1162          CMP.B       #9,D2
000018A4  6700 00C4               1163          BEQ         PRINT_ASCII9
000018A8  B43C 000A               1164          CMP.B       #$A,D2
000018AC  6700 00CC               1165          BEQ         PRINT_ASCIIA
000018B0  B43C 000B               1166          CMP.B       #$B,D2
000018B4  6700 00D4               1167          BEQ         PRINT_ASCIIB
000018B8  B43C 000C               1168          CMP.B       #$C,D2
000018BC  6700 00DC               1169          BEQ         PRINT_ASCIIC
000018C0  B43C 000D               1170          CMP.B       #$D,D2
000018C4  6700 00E4               1171          BEQ         PRINT_ASCIID
000018C8  B43C 000E               1172          CMP.B       #$E,D2
000018CC  6700 00EC               1173          BEQ         PRINT_ASCIIE
000018D0  B43C 000F               1174          CMP.B       #$F,D2
000018D4  6700 00F4               1175          BEQ         PRINT_ASCIIF
000018D8                          1176          
000018D8                          1177          ; error handling here
000018D8                          1178          
000018D8                          1179          
000018D8                          1180  
000018D8                          1181  HEX_DONE:
000018D8  4E75                    1182          RTS
000018DA                          1183  
000018DA                          1184  
000018DA                          1185  
000018DA                          1186  PRINT_ASCII0:
000018DA  43F9 00001A54           1187          LEA         ZERO_MSG, A1
000018E0  103C 000E               1188          MOVE.B      #14, D0    
000018E4  4E4F                    1189          TRAP        #15
000018E6  6000 FF58               1190          BRA         CONVERT_HEX
000018EA                          1191  PRINT_ASCII1:
000018EA  43F9 00001A56           1192          LEA         ONE_MSG, A1
000018F0  103C 000E               1193          MOVE.B      #14, D0    
000018F4  4E4F                    1194          TRAP        #15
000018F6  6000 FF48               1195          BRA         CONVERT_HEX
000018FA                          1196  PRINT_ASCII2:
000018FA  43F9 00001A58           1197          LEA         TWO_MSG, A1
00001900  103C 000E               1198          MOVE.B      #14, D0    
00001904  4E4F                    1199          TRAP        #15
00001906  6000 FF38               1200          BRA         CONVERT_HEX
0000190A                          1201  PRINT_ASCII3:
0000190A  43F9 00001A5A           1202          LEA         THREE_MSG, A1
00001910  103C 000E               1203          MOVE.B      #14, D0    
00001914  4E4F                    1204          TRAP        #15
00001916  6000 FF28               1205          BRA         CONVERT_HEX
0000191A                          1206  PRINT_ASCII4:
0000191A  43F9 00001A5C           1207          LEA         FOUR_MSG, A1
00001920  103C 000E               1208          MOVE.B      #14, D0    
00001924  4E4F                    1209          TRAP        #15
00001926  6000 FF18               1210          BRA         CONVERT_HEX
0000192A                          1211  PRINT_ASCII5:
0000192A  43F9 00001A5E           1212          LEA         FIVE_MSG, A1
00001930  103C 000E               1213          MOVE.B      #14, D0    
00001934  4E4F                    1214          TRAP        #15
00001936  6000 FF08               1215          BRA         CONVERT_HEX        
0000193A                          1216  PRINT_ASCII6:
0000193A  43F9 00001A60           1217          LEA         SIX_MSG, A1
00001940  103C 000E               1218          MOVE.B      #14, D0    
00001944  4E4F                    1219          TRAP        #15
00001946  6000 FEF8               1220          BRA         CONVERT_HEX
0000194A                          1221  PRINT_ASCII7:
0000194A  43F9 00001A62           1222          LEA         SEVEN_MSG, A1
00001950  103C 000E               1223          MOVE.B      #14, D0    
00001954  4E4F                    1224          TRAP        #15
00001956  6000 FEE8               1225          BRA         CONVERT_HEX
0000195A                          1226  PRINT_ASCII8:
0000195A  43F9 00001A64           1227          LEA         EIGHT_MSG, A1
00001960  103C 000E               1228          MOVE.B      #14, D0    
00001964  4E4F                    1229          TRAP        #15
00001966  6000 FED8               1230          BRA         CONVERT_HEX
0000196A                          1231  PRINT_ASCII9:
0000196A  43F9 00001A66           1232          LEA         NINE_MSG, A1
00001970  103C 000E               1233          MOVE.B      #14, D0    
00001974  4E4F                    1234          TRAP        #15
00001976  6000 FEC8               1235          BRA         CONVERT_HEX
0000197A                          1236  PRINT_ASCIIA:
0000197A  43F9 00001A68           1237          LEA         A_MSG, A1
00001980  103C 000E               1238          MOVE.B      #14, D0    
00001984  4E4F                    1239          TRAP        #15
00001986  6000 FEB8               1240          BRA         CONVERT_HEX
0000198A                          1241  PRINT_ASCIIB:
0000198A  43F9 00001A6A           1242          LEA         B_MSG, A1
00001990  103C 000E               1243          MOVE.B      #14, D0    
00001994  4E4F                    1244          TRAP        #15
00001996  6000 FEA8               1245          BRA         CONVERT_HEX
0000199A                          1246  PRINT_ASCIIC:
0000199A  43F9 00001A6C           1247          LEA         C_MSG, A1
000019A0  103C 000E               1248          MOVE.B      #14, D0    
000019A4  4E4F                    1249          TRAP        #15
000019A6  6000 FE98               1250          BRA         CONVERT_HEX
000019AA                          1251  PRINT_ASCIID:
000019AA  43F9 00001A6E           1252          LEA         D_MSG, A1
000019B0  103C 000E               1253          MOVE.B      #14, D0    
000019B4  4E4F                    1254          TRAP        #15
000019B6  6000 FE88               1255          BRA         CONVERT_HEX
000019BA                          1256  PRINT_ASCIIE:
000019BA  43F9 00001A70           1257          LEA         E_MSG, A1
000019C0  103C 000E               1258          MOVE.B      #14, D0    
000019C4  4E4F                    1259          TRAP        #15
000019C6  6000 FE78               1260          BRA         CONVERT_HEX
000019CA                          1261  PRINT_ASCIIF:
000019CA  43F9 00001A72           1262          LEA         F_MSG, A1
000019D0  103C 000E               1263          MOVE.B      #14, D0    
000019D4  4E4F                    1264          TRAP        #15
000019D6  6000 FE68               1265          BRA         CONVERT_HEX
000019DA                          1266  
000019DA                          1267  
000019DA                          1268  
000019DA                          1269  
000019DA                          1270  
000019DA                          1271  
000019DA                          1272  
000019DA= 20 44 00                1273  MODE_0_MSG:     DC.B        ' D',0
000019DD= 20 41 00                1274  MODE_1_MSG:     DC.B        ' A',0
000019E0= 20 28 41 00             1275  MODE_A_MSG:     DC.B        ' (A',0
000019E4= 29 00                   1276  MODE_A_1_MSG:   DC.B        ')',0
000019E6= 29 2B 00                1277  MODE_A_2_MSG:   DC.B        ')+',0
000019E9= 20 2D 28 41 00          1278  MODE_MINUS_MSG: DC.B        ' -(A',0
000019EE                          1279  
000019EE= 2C 00                   1280  SEPERATOR:      DC.B        ',',0
000019F0                          1281  
000019F0= 20 23 00                1282  POUND_MSG:      DC.B        ' #',0
000019F3= 20 24 00                1283  DOLLAR_MSG:     DC.B        ' $',0
000019F6= 20 23 24 00             1284  DATA_MSG:       DC.B        ' #$',0
000019FA                          1285  
000019FA= 54 4D 50 00             1286  TEMP_MSG:       DC.B        'TMP',0
000019FE                          1287  
000019FE                          1288  
000019FE                          1289  
000019FE                          1290  TMP_STR         DS.B        32
00001A1E                          1291  
00001A1E                          1292  
00001A1E                          1293  
00001A1E                          1294  
00001A1E                          1295  
00001A1E                          1296  
00001A1E                          1297  
00001A1E                          1298  -------------------- end include --------------------
00001A1E= 45 6E 74 65 72 20 ...   1299  START_MSG:      DC.B        'Enter a starting address:',0
00001A38= 45 6E 74 65 72 20 ...   1300  END_MSG:        DC.B        'Enter an ending address:',0
00001A51                          1301                
00001A51  =0000000D               1302  CR              EQU         $0D
00001A51  =0000000A               1303  LF              EQU         $0A
00001A51                          1304  
00001A51= 20 20 00                1305  SPACE_MSG:      DC.B        '  ',0
00001A54                          1306  
00001A54= 30 00                   1307  ZERO_MSG:       DC.B        '0',0
00001A56= 31 00                   1308  ONE_MSG:        DC.B        '1',0
00001A58= 32 00                   1309  TWO_MSG:        DC.B        '2',0
00001A5A= 33 00                   1310  THREE_MSG:      DC.B        '3',0
00001A5C= 34 00                   1311  FOUR_MSG:       DC.B        '4',0
00001A5E= 35 00                   1312  FIVE_MSG:       DC.B        '5',0
00001A60= 36 00                   1313  SIX_MSG:        DC.B        '6',0
00001A62= 37 00                   1314  SEVEN_MSG:      DC.B        '7',0
00001A64= 38 00                   1315  EIGHT_MSG:      DC.B        '8',0
00001A66= 39 00                   1316  NINE_MSG:       DC.B        '9',0
00001A68= 41 00                   1317  A_MSG:          DC.B        'A',0
00001A6A= 42 00                   1318  B_MSG:          DC.B        'B',0
00001A6C= 43 00                   1319  C_MSG:          DC.B        'C',0
00001A6E= 44 00                   1320  D_MSG:          DC.B        'D',0
00001A70= 45 00                   1321  E_MSG:          DC.B        'E',0
00001A72= 46 00                   1322  F_MSG:          DC.B        'F',0
00001A74                          1323                  
00001A74= 45 72 72 6F 72 00       1324  ERROR_MSG:      DC.B        'Error',0
00001A7A= 53 75 63 63 65 73 ...   1325  SUCCESS_MSG:    DC.B        'Success',0
00001A82                          1326  
00001A82= 0D 0A 00                1327  NEW_LINE:       DC.B        '',CR,LF,0
00001A85                          1328  
00001A85                          1329    
00001A85                          1330                  
00001A85                          1331                  
00001A85                          1332  STA_ADDR        DS.B        40
00001AAD                          1333  END_ADDR        DS.B        40
00001AD5                          1334  
00001AD5                          1335  
00001AD5                          1336  
00001AD5                          1337  
00001AD5                          1338                  
00001AD5                          1339                  
00001AD5                          1340          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            15CA
ADDQ_MSG            1580
ADD_MSG             15C6
ASCII_DONE          106A
ASL_MSG             15CF
ASR_MSG             15D3
A_MSG               1A68
BITS11TO6           1472
BITS11TO8           147E
BITS11TO9           148A
BITS2TO0            1406
BITS3TO0            1412
BITS5TO3            141E
BITS7TO0            142E
BITS7TO4            1436
BITS7TO6            1442
BITS8TO3            144E
BITS8TO4            145A
BITS8TO6            1466
BRA_MSG             15A6
BSR_MSG             15AA
BYTE_MSG            15DD
B_MSG               1A6A
CMP_MSG             15BD
CONVERT_ASCII       1052
CONVERT_HEX         1840
CR                  D
C_MSG               1A6C
DATA_B              17E8
DATA_L              1822
DATA_MSG            19F6
DATA_TABLE          17BE
DATA_W              1806
DISPLAY_REG         1744
DIVU_MSG            15B4
DOLLAR              15D9
DOLLAR_MSG          19F3
DONE                12CA
D_MSG               1A6E
EA_LEA              166A
EA_MOVE             1616
EIGHT_MSG           1A64
END_ADDR            1AAD
END_MSG             1A38
ERROR_MSG           1A74
ERROR_OP_MSG        15E6
E_MSG               1A70
FILE_LOOP           1296
FIVE_MSG            1A5E
FLIP_DONE           10EC
FLIP_LOOP           10CE
FLIP_START          10BE
FOUR_MSG            1A5C
F_MSG               1A72
HEX_DONE            18D8
IMPLEMENT_MSG       15FA
INVALID_INSTR       13F8
JSR_MSG             15A2
JUMP_0              1332
JUMP_1              1336
JUMP_2              1344
JUMP_3              135C
JUMP_4              1374
JUMP_5              13A2
JUMP_6              13B4
JUMP_7              13BA
JUMP_8              13C0
JUMP_9              13C6
JUMP_A              13CC
JUMP_B              13D2
JUMP_C              13D8
JUMP_D              13DE
JUMP_E              13E4
JUMP_ERROR          13EA
JUMP_OP_CODE        12D0
J_ABS               16B4
J_ABS_ERROR         17BC
J_ABS_L             1792
J_ABS_TABLE         174E
J_ABS_W             1768
J_MOVEA_L           14B4
J_MOVEA_W           14FC
J_MOVE_L            14D8
J_MOVE_W            1520
J_TBL_A             16BC
J_TBL_A_DECR        1724
J_TBL_A_INCR        1704
J_TBL_A_P           16E4
J_TBL_D             16D0
LEA_MSG             159E
LET_ASCII           1080
LF                  A
LONG_MSG            15E3
MODE_0_MSG          19DA
MODE_1_MSG          19DD
MODE_A_1_MSG        19E4
MODE_A_2_MSG        19E6
MODE_A_MSG          19E0
MODE_MINUS_MSG      19E9
MODE_TABLE          1682
MOVEA_MSG           158A
MOVEM_MSG           1598
MOVEQ_MSG           15AE
MOVE_MSG            1585
MULU_MSG            15C1
NEW_LINE            1A82
NINE_MSG            1A66
NOP_MSG             1594
NUM_ASCII           106C
ONE_MSG             1A56
OP_CODE_ADDQ        1572
OP_CODE_BASE_MOVE   1496
OP_CODE_JSR         1552
OP_CODE_LEA         1560
OP_CODE_NOP         1544
ORI_MSG             1590
PERCENT             15DB
POUND               15D7
POUND_MSG           19F0
PRINT_ADDRESS       1094
PRINT_ADDRESS_EXIT  1188
PRINT_ADDRESS_LOOP  10EE
PRINT_ADR0          1196
PRINT_ADR1          11A6
PRINT_ADR2          11B6
PRINT_ADR3          11C6
PRINT_ADR4          11D6
PRINT_ADR5          11E6
PRINT_ADR6          11F6
PRINT_ADR7          1206
PRINT_ADR8          1216
PRINT_ADR9          1226
PRINT_ADRA          1236
PRINT_ADRB          1246
PRINT_ADRC          1256
PRINT_ADRD          1266
PRINT_ADRE          1276
PRINT_ADRF          1286
PRINT_ASCII0        18DA
PRINT_ASCII1        18EA
PRINT_ASCII2        18FA
PRINT_ASCII3        190A
PRINT_ASCII4        191A
PRINT_ASCII5        192A
PRINT_ASCII6        193A
PRINT_ASCII7        194A
PRINT_ASCII8        195A
PRINT_ASCII9        196A
PRINT_ASCIIA        197A
PRINT_ASCIIB        198A
PRINT_ASCIIC        199A
PRINT_ASCIID        19AA
PRINT_ASCIIE        19BA
PRINT_ASCIIF        19CA
SEPERATOR           19EE
SEVEN_MSG           1A62
SIX_MSG             1A60
SPACE_MSG           1A51
START               1000
START_MSG           1A1E
STA_ADDR            1A85
SUB_MSG             15B9
SUCCESS_MSG         1A7A
TEMP_MSG            19FA
THREE_MSG           1A5A
TMP_STR             19FE
TWO_MSG             1A58
WORD_MSG            15E0
ZERO_MSG            1A54
