00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/14/2021 12:43:04 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; D0 is used to store values that will get compared
00001000                            13      
00001000                            14  START:
00001000                            15  
00001000                            16          ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001000  43F9 00001D0E             17          LEA         START_MSG, A1
00001006  103C 000E                 18          MOVE.B      #14, D0    
0000100A  4E4F                      19          TRAP        #15
0000100C                            20          
0000100C  43F9 00001D75             21          LEA         STA_ADDR, A1
00001012  103C 0002                 22          MOVE.B      #2, D0
00001016  4E4F                      23          TRAP        #15             ; D1 has the length of the address
00001018                            24          
00001018                            25          
00001018  4282                      26          CLR.L       D2
0000101A  4284                      27          CLR.L       D4
0000101C  4287                      28          CLR.L       D7
0000101E  4EB9 00001052             29          JSR         CONVERT_ASCII
00001024  2647                      30          MOVEA.L     D7, A3
00001026                            31          
00001026                            32          
00001026                            33          
00001026                            34          
00001026                            35          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
00001026                            36          
00001026  43F9 00001D28             37          LEA         END_MSG, A1
0000102C  103C 000E                 38          MOVE.B      #14, D0    
00001030  4E4F                      39          TRAP        #15
00001032                            40          
00001032  43F9 00001D9D             41          LEA         END_ADDR, A1
00001038  103C 0002                 42          MOVE.B      #2, D0
0000103C  4E4F                      43          TRAP        #15
0000103E                            44          
0000103E  4282                      45          CLR.L       D2
00001040  4284                      46          CLR.L       D4
00001042  4287                      47          CLR.L       D7
00001044  4EB9 00001052             48          JSR         CONVERT_ASCII
0000104A  2847                      49          MOVEA.L     D7, A4
0000104C                            50          
0000104C                            51          
0000104C                            52          ; add loop later that checks if data entered is valid for both messages
0000104C                            53          
0000104C                            54          
0000104C  4EB9 00001296             55          JSR         FILE_LOOP
00001052                            56          
00001052                            57  
00001052                            58  
00001052                            59  
00001052                            60  
00001052                            61  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
00001052  0C01 0000                 62          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001056  6700 0012                 63          BEQ         ASCII_DONE
0000105A                            64      
0000105A  1419                      65          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
0000105C                            66          
0000105C                            67  
0000105C                            68      
0000105C  103C 0039                 69          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
00001060  B400                      70          CMP.B       D0, D2
00001062                            71          
00001062                            72  
00001062  6F00 0008                 73          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
00001066  6000 0018                 74          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
0000106A                            75  
0000106A                            76  ASCII_DONE:
0000106A  4E75                      77          RTS
0000106C                            78  
0000106C                            79  
0000106C                            80  NUM_ASCII:
0000106C  5301                      81          SUBI.B      #$1, D1
0000106E                            82          
0000106E  103C 0030                 83          MOVE.B      #$30, D0
00001072  9400                      84          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
00001074  DE02                      85          ADD.B       D2, D7      ; new ASCII number stored at D7
00001076                            86          
00001076                            87  
00001076  0C01 0000                 88          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000107A  67EE                      89          BEQ         ASCII_DONE
0000107C                            90          
0000107C  E987                      91          ASL.L       #4, D7
0000107E                            92        
0000107E  60D2                      93          BRA         CONVERT_ASCII
00001080                            94          
00001080                            95          
00001080                            96  LET_ASCII:
00001080  5301                      97          SUBI.B      #$1, D1
00001082                            98                 
00001082                            99  
00001082  103C 0037                100          MOVE.B      #$37, D0
00001086  9400                     101          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001088  DE02                     102          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
0000108A                           103                                  ; 46 is used to represent F in Hex. 46 - 37 = F
0000108A                           104          
0000108A  0C01 0000                105          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000108E  67DA                     106          BEQ         ASCII_DONE
00001090                           107          
00001090  E987                     108          ASL.L       #4, D7
00001092                           109          
00001092                           110          
00001092  60BE                     111          BRA         CONVERT_ASCII
00001094                           112  
00001094                           113  PRINT_ADDRESS:
00001094                           114          ; SIMHALT 0000 0000
00001094  4281                     115          CLR.L       D1
00001096  4282                     116          CLR.L       D2
00001098  240B                     117          MOVE.L      A3, D2
0000109A                           118          
0000109A                           119          
0000109A                           120  
0000109A                           121          
0000109A  4EB9 000010BE            122          JSR         FLIP_START
000010A0  2607                     123          MOVE.L      D7, D3
000010A2                           124  
000010A2  4281                     125          CLR.L       D1
000010A4  4282                     126          CLR.L       D2
000010A6  4287                     127          CLR.L       D7
000010A8                           128          
000010A8  123C 0008                129          MOVE.B      #$8, D1
000010AC  6000 0040                130          BRA         PRINT_ADDRESS_LOOP
000010B0                           131  
000010B0  43F9 00001D41            132          LEA         SPACE_MSG, A1
000010B6  103C 000E                133          MOVE.B      #14, D0    
000010BA  4E4F                     134          TRAP        #15
000010BC                           135          
000010BC  4E75                     136          RTS
000010BE                           137          
000010BE                           138  FLIP_START:        
000010BE  4281                     139          CLR.L       D1
000010C0  4287                     140          CLR.L       D7
000010C2                           141          
000010C2  123C 0008                142          MOVE.B      #$8, D1
000010C6                           143          
000010C6  4EB9 000010CE            144          JSR         FLIP_LOOP
000010CC                           145          
000010CC                           146          
000010CC  4E75                     147          RTS
000010CE                           148          
000010CE                           149  FLIP_LOOP:
000010CE                           150  
000010CE                           151          ; SIMHALT
000010CE                           152          
000010CE  0C01 0000                153          CMPI.B      #$0, D1
000010D2  6700 0018                154          BEQ         FLIP_DONE
000010D6  5301                     155          SUBI.B      #$1, D1
000010D8  E987                     156          ASL.L       #4, D7
000010DA                           157          
000010DA  4285                     158          CLR.L       D5
000010DC                           159          
000010DC  1A02                     160          MOVE.B      D2, D5
000010DE                           161          
000010DE  103C 001C                162          MOVE.B      #28,D0    
000010E2  E1AD                     163          LSL.L       D0, D5     
000010E4  E99D                     164          ROL.L       #4, D5
000010E6                           165          
000010E6  DE05                     166          ADD.B       D5, D7
000010E8                           167          
000010E8                           168          
000010E8  E882                     169          ASR.L       #4, D2
000010EA                           170          
000010EA  60E2                     171          BRA         FLIP_LOOP
000010EC                           172  
000010EC                           173  FLIP_DONE:
000010EC  4E75                     174          RTS
000010EE                           175  
000010EE                           176  
000010EE                           177          
000010EE                           178  
000010EE                           179  PRINT_ADDRESS_LOOP:
000010EE                           180          ; SIMHALT
000010EE                           181          
000010EE  0C01 0000                182          CMPI.B      #$0, D1
000010F2  6700 0094                183          BEQ         PRINT_ADDRESS_EXIT
000010F6                           184          
000010F6                           185          
000010F6  5301                     186          SUBI.B      #$1, D1
000010F8                           187          
000010F8  1403                     188          MOVE.B      D3, D2
000010FA  103C 001C                189          MOVE.B      #28,D0    
000010FE  E1AA                     190          LSL.L       D0,D2     
00001100  E99A                     191          ROL.L       #4,D2 
00001102                           192          
00001102                           193          
00001102  E883                     194          ASR.L       #4, D3
00001104                           195          
00001104                           196          
00001104  B43C 0000                197          CMP.B       #0,D2
00001108  6700 008C                198          BEQ         PRINT_ADR0
0000110C  B43C 0001                199          CMP.B       #1,D2
00001110  6700 0094                200          BEQ         PRINT_ADR1
00001114  B43C 0002                201          CMP.B       #2,D2
00001118  6700 009C                202          BEQ         PRINT_ADR2
0000111C  B43C 0003                203          CMP.B       #3,D2
00001120  6700 00A4                204          BEQ         PRINT_ADR3
00001124  B43C 0004                205          CMP.B       #4,D2
00001128  6700 00AC                206          BEQ         PRINT_ADR4
0000112C  B43C 0005                207          CMP.B       #5,D2
00001130  6700 00B4                208          BEQ         PRINT_ADR5
00001134  B43C 0006                209          CMP.B       #6,D2
00001138  6700 00BC                210          BEQ         PRINT_ADR6
0000113C  B43C 0007                211          CMP.B       #7,D2
00001140  6700 00C4                212          BEQ         PRINT_ADR7
00001144  B43C 0008                213          CMP.B       #8,D2
00001148  6700 00CC                214          BEQ         PRINT_ADR8
0000114C  B43C 0009                215          CMP.B       #9,D2
00001150  6700 00D4                216          BEQ         PRINT_ADR9
00001154  B43C 000A                217          CMP.B       #$A,D2
00001158  6700 00DC                218          BEQ         PRINT_ADRA
0000115C  B43C 000B                219          CMP.B       #$B,D2
00001160  6700 00E4                220          BEQ         PRINT_ADRB
00001164  B43C 000C                221          CMP.B       #$C,D2
00001168  6700 00EC                222          BEQ         PRINT_ADRC
0000116C  B43C 000D                223          CMP.B       #$D,D2
00001170  6700 00F4                224          BEQ         PRINT_ADRD
00001174  B43C 000E                225          CMP.B       #$E,D2
00001178  6700 00FC                226          BEQ         PRINT_ADRE
0000117C  B43C 000F                227          CMP.B       #$F,D2
00001180  6700 0104                228          BEQ         PRINT_ADRF
00001184                           229  
00001184                           230  
00001184                           231  
00001184  6000 FF68                232          BRA         PRINT_ADDRESS_LOOP
00001188                           233          
00001188                           234  
00001188                           235          
00001188                           236  
00001188                           237  PRINT_ADDRESS_EXIT:
00001188  43F9 00001D41            238          LEA         SPACE_MSG, A1
0000118E  103C 000E                239          MOVE.B      #14, D0    
00001192  4E4F                     240          TRAP        #15
00001194                           241          
00001194  4E75                     242          RTS
00001196                           243          
00001196                           244  PRINT_ADR0:
00001196  43F9 00001D44            245          LEA         ZERO_MSG, A1
0000119C  103C 000E                246          MOVE.B      #14, D0    
000011A0  4E4F                     247          TRAP        #15
000011A2  6000 FF4A                248          BRA         PRINT_ADDRESS_LOOP
000011A6                           249  PRINT_ADR1:
000011A6  43F9 00001D46            250          LEA         ONE_MSG, A1
000011AC  103C 000E                251          MOVE.B      #14, D0    
000011B0  4E4F                     252          TRAP        #15
000011B2  6000 FF3A                253          BRA         PRINT_ADDRESS_LOOP
000011B6                           254  PRINT_ADR2:
000011B6  43F9 00001D48            255          LEA         TWO_MSG, A1
000011BC  103C 000E                256          MOVE.B      #14, D0    
000011C0  4E4F                     257          TRAP        #15
000011C2  6000 FF2A                258          BRA         PRINT_ADDRESS_LOOP
000011C6                           259  PRINT_ADR3:
000011C6  43F9 00001D4A            260          LEA         THREE_MSG, A1
000011CC  103C 000E                261          MOVE.B      #14, D0    
000011D0  4E4F                     262          TRAP        #15
000011D2  6000 FF1A                263          BRA         PRINT_ADDRESS_LOOP
000011D6                           264  PRINT_ADR4:
000011D6  43F9 00001D4C            265          LEA         FOUR_MSG, A1
000011DC  103C 000E                266          MOVE.B      #14, D0    
000011E0  4E4F                     267          TRAP        #15
000011E2  6000 FF0A                268          BRA         PRINT_ADDRESS_LOOP
000011E6                           269  PRINT_ADR5:
000011E6  43F9 00001D4E            270          LEA         FIVE_MSG, A1
000011EC  103C 000E                271          MOVE.B      #14, D0    
000011F0  4E4F                     272          TRAP        #15
000011F2  6000 FEFA                273          BRA         PRINT_ADDRESS_LOOP
000011F6                           274  PRINT_ADR6:
000011F6  43F9 00001D50            275          LEA         SIX_MSG, A1
000011FC  103C 000E                276          MOVE.B      #14, D0    
00001200  4E4F                     277          TRAP        #15
00001202  6000 FEEA                278          BRA         PRINT_ADDRESS_LOOP
00001206                           279  PRINT_ADR7:
00001206  43F9 00001D52            280          LEA         SEVEN_MSG, A1
0000120C  103C 000E                281          MOVE.B      #14, D0    
00001210  4E4F                     282          TRAP        #15
00001212  6000 FEDA                283          BRA         PRINT_ADDRESS_LOOP
00001216                           284  PRINT_ADR8:
00001216  43F9 00001D54            285          LEA         EIGHT_MSG, A1
0000121C  103C 000E                286          MOVE.B      #14, D0    
00001220  4E4F                     287          TRAP        #15
00001222  6000 FECA                288          BRA         PRINT_ADDRESS_LOOP
00001226                           289  PRINT_ADR9:
00001226  43F9 00001D56            290          LEA         NINE_MSG, A1
0000122C  103C 000E                291          MOVE.B      #14, D0    
00001230  4E4F                     292          TRAP        #15
00001232  6000 FEBA                293          BRA         PRINT_ADDRESS_LOOP
00001236                           294  PRINT_ADRA:
00001236  43F9 00001D58            295          LEA         A_MSG, A1
0000123C  103C 000E                296          MOVE.B      #14, D0    
00001240  4E4F                     297          TRAP        #15
00001242  6000 FEAA                298          BRA         PRINT_ADDRESS_LOOP
00001246                           299  PRINT_ADRB:
00001246  43F9 00001D5A            300          LEA         B_MSG, A1
0000124C  103C 000E                301          MOVE.B      #14, D0    
00001250  4E4F                     302          TRAP        #15
00001252  6000 FE9A                303          BRA         PRINT_ADDRESS_LOOP
00001256                           304  PRINT_ADRC:
00001256  43F9 00001D5C            305          LEA         C_MSG, A1
0000125C  103C 000E                306          MOVE.B      #14, D0    
00001260  4E4F                     307          TRAP        #15
00001262  6000 FE8A                308          BRA         PRINT_ADDRESS_LOOP
00001266                           309  PRINT_ADRD:
00001266  43F9 00001D5E            310          LEA         D_MSG, A1
0000126C  103C 000E                311          MOVE.B      #14, D0    
00001270  4E4F                     312          TRAP        #15
00001272  6000 FE7A                313          BRA         PRINT_ADDRESS_LOOP
00001276                           314  PRINT_ADRE:
00001276  43F9 00001D60            315          LEA         E_MSG, A1
0000127C  103C 000E                316          MOVE.B      #14, D0    
00001280  4E4F                     317          TRAP        #15
00001282  6000 FE6A                318          BRA         PRINT_ADDRESS_LOOP
00001286                           319  PRINT_ADRF:
00001286  43F9 00001D62            320          LEA         F_MSG, A1
0000128C  103C 000E                321          MOVE.B      #14, D0    
00001290  4E4F                     322          TRAP        #15
00001292  6000 FE5A                323          BRA         PRINT_ADDRESS_LOOP
00001296                           324  
00001296                           325  
00001296                           326  FILE_LOOP:
00001296  4280                     327          CLR.L       D0
00001298  4281                     328          CLR.L       D1
0000129A  4282                     329          CLR.L       D2
0000129C  4283                     330          CLR.L       D3
0000129E  4284                     331          CLR.L       D4
000012A0  4285                     332          CLR.L       D5
000012A2  4286                     333          CLR.L       D6
000012A4  4287                     334          CLR.L       D7
000012A6                           335          
000012A6                           336  
000012A6                           337  
000012A6                           338  
000012A6                           339          ;       Add branch here that will take the current address in A3
000012A6                           340          ;       Turn it into characters and print it to the screen with space
000012A6  4EB8 1094                341          JSR         PRINT_ADDRESS
000012AA                           342          
000012AA                           343          
000012AA  381B                     344          MOVE.W      (A3)+, D4
000012AC                           345          ; SIMHALT
000012AC  4EB9 000012D0            346          JSR         JUMP_OP_CODE
000012B2                           347          
000012B2  43F9 00001D72            348          LEA         NEW_LINE, A1
000012B8  103C 000E                349          MOVE.B      #14, D0
000012BC  4E4F                     350          TRAP        #15
000012BE                           351  
000012BE                           352  
000012BE  B9CB                     353          CMP.L      A3, A4
000012C0                           354          ;       If our pointer is at the end or beyond, BRA to DONE
000012C0                           355          ; SIMHALT
000012C0                           356          
000012C0                           357          
000012C0                           358          
000012C0  6700 0008                359          BEQ         DONE
000012C4  6F00 0004                360          BLE         DONE       
000012C8  60CC                     361          BRA         FILE_LOOP
000012CA                           362  
000012CA                           363  
000012CA                           364  
000012CA                           365  
000012CA                           366  
000012CA                           367  DONE:   
000012CA  103C 0009                368          MOVE.B      #9, D0
000012CE  4E4F                     369          TRAP        #15
000012D0                           370          
000012D0                           371          
000012D0                           372          
000012D0                           373  * Put variables and constants here
000012D0                           374                  INCLUDE     'Disassembler_OP_Codes.x68'
000012D0                           375  
000012D0                           376  
000012D0                           377  
000012D0                           378  ; D4 Contains Original hex code
000012D0                           379  ; D3 Contains modified hex code
000012D0                           380  
000012D0                           381  ; D1 is used to bit shift
000012D0                           382  
000012D0                           383  
000012D0                           384  ; D4 = XXXX YYYY YYYY YYYY
000012D0                           385  JUMP_OP_CODE:
000012D0                           386          ; SIMHALT
000012D0  4283                     387          CLR.L       D3
000012D2  2604                     388          MOVE.L      D4, D3
000012D4  4281                     389          CLR.L       D1
000012D6  4282                     390          CLR.L       D2
000012D8  123C 000C                391          MOVE.B      #12, D1
000012DC  E26B                     392          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000012DE                           393  
000012DE                           394  
000012DE  B63C 0000                395          CMP.B       #$0, D3
000012E2  6700 006E                396          BEQ         JUMP_0 
000012E6  B63C 0001                397          CMP.B       #$1, D3
000012EA  6700 007C                398          BEQ         JUMP_1 
000012EE  B63C 0002                399          CMP.B       #$2, D3
000012F2  6700 0082                400          BEQ         JUMP_2
000012F6  B63C 0003                401          CMP.B       #$3, D3
000012FA  6700 0092                402          BEQ         JUMP_3
000012FE  B63C 0004                403          CMP.B       #$4, D3
00001302  6700 00A2                404          BEQ         JUMP_4
00001306  B63C 0005                405          CMP.B       #$5, D3
0000130A  6700 00CE                406          BEQ         JUMP_5
0000130E  B63C 0006                407          CMP.B       #$6, D3
00001312  6700 00D8                408          BEQ         JUMP_6
00001316  B63C 0007                409          CMP.B       #$7, D3
0000131A  6700 00EE                410          BEQ         JUMP_7
0000131E  B63C 0008                411          CMP.B       #$8, D3
00001322  6700 00FA                412          BEQ         JUMP_8
00001326  B63C 0009                413          CMP.B       #$9, D3
0000132A  6700 03FC                414          BEQ         OP_CODE_SUB
0000132E  B63C 000B                415          CMP.B       #11, D3
00001332  6700 0108                416          BEQ         JUMP_B ; 
00001336                           417          
00001336  B63C 000C                418          CMP.B       #12, D3
0000133A  6700 0126                419          BEQ         JUMP_C ;
0000133E                           420          
0000133E  B63C 000D                421          CMP.B       #13, D3
00001342  6700 013C                422          BEQ         JUMP_D ;
00001346                           423          
00001346  B63C 000E                424          CMP.B       #14, D3
0000134A  6700 0150                425          BEQ         JUMP_E ;
0000134E                           426  
0000134E  6000 016E                427          BRA         JUMP_ERROR
00001352                           428  
00001352                           429  
00001352                           430  
00001352                           431  
00001352                           432         
00001352                           433          
00001352                           434  JUMP_0:
00001352                           435          *ORI
00001352  4282                     436          CLR.L       D2
00001354  4EB9 0000156E            437          JSR         Bits11to8
0000135A  B43C 0000                438          CMP.B       #$0, D2  
0000135E  6700 02D4                439          BEQ         OP_CODE_ORI
00001362                           440          
00001362  6000 0168                441          BRA         INVALID_INSTR
00001366  4E75                     442          RTS
00001368                           443          
00001368                           444  JUMP_1:
00001368                           445  
00001368  4EB9 00001586            446          JSR         OP_CODE_BASE_MOVE
0000136E  4EB9 0000191E            447          JSR         EA_MOVE 
00001374  4E75                     448          RTS
00001376                           449  
00001376                           450  
00001376                           451  JUMP_2:
00001376                           452  
00001376  4EB9 0000154A            453          JSR         Bits8to6
0000137C  B43C 0001                454          CMP.B       #$1, D2 
00001380  6700 0222                455          BEQ         J_MOVEA_L 
00001384  6600 0242                456          BNE         J_MOVE_L
00001388                           457  
00001388                           458  
00001388  6000 0142                459          BRA         INVALID_INSTR
0000138C  4E75                     460          RTS
0000138E                           461          
0000138E                           462  JUMP_3:
0000138E                           463  
0000138E  4EB9 0000154A            464          JSR         Bits8to6
00001394  0C02 0001                465          CMPI.B       #$1, D2 
00001398  6700 0252                466          BEQ         J_MOVEA_W
0000139C  6600 0272                467          BNE         J_MOVE_W
000013A0                           468          
000013A0                           469          
000013A0                           470          
000013A0  6000 012A                471          BRA INVALID_INSTR
000013A4                           472          
000013A4  4E75                     473          RTS
000013A6                           474          
000013A6                           475  JUMP_4:
000013A6                           476  
000013A6  4282                     477          CLR.L       D2
000013A8  3404                     478          MOVE.W      D4, D2
000013AA  B47C 4E71                479          CMP.W       #$4E71, D2 ;NOP 
000013AE  6700 0292                480          BEQ         OP_CODE_NOP
000013B2                           481          
000013B2  4EB9 0000154A            482          JSR         Bits8to6     ;
000013B8  B43C 0007                483          CMP.B       #7, D2
000013BC  6700 02A0                484          BEQ         OP_CODE_LEA ;LEA
000013C0                           485  
000013C0  4EB9 0000157A            486          JSR         Bits11to9     ;
000013C6  B43C 0007                487          CMP.B       #7, D2
000013CA  6700 0284                488          BEQ         OP_CODE_JSR ;JSR
000013CE  4EF9 000016E2            489          JMP         MOVEM_CHECK ;
000013D4                           490          
000013D4                           491          
000013D4  6000 00F6                492          BRA INVALID_INSTR
000013D8                           493          
000013D8  4E75                     494          RTS  
000013DA                           495  
000013DA                           496  
000013DA                           497  
000013DA                           498  JUMP_5:
000013DA  4282                     499          CLR.L       D2
000013DC  2404                     500          MOVE.L      D4, D2
000013DE  0802 0008                501          BTST        #8,D2 
000013E2  6700 030C                502          BEQ         OP_CODE_ADDQ  
000013E6  6000 00E4                503          BRA         INVALID_INSTR
000013EA  4E75                     504          RTS  
000013EC                           505  JUMP_6:
000013EC  4282                     506          CLR.L       D2
000013EE  4EB9 0000156E            507          JSR     Bits11to8     ;
000013F4  B43C 0000                508          CMP.B   #0, D2        ;
000013F8  6700 03B2                509          BEQ     OP_CODE_BRA   ; 
000013FC  B43C 0001                510          CMP.B   #1, D2        ;
00001400  6700 03B8                511          BEQ     OP_CODE_BSR   ;
00001404                           512  
00001404  6000 00C6                513          BRA INVALID_INSTR
00001408                           514  
00001408  4E75                     515          RTS  
0000140A                           516  JUMP_7:
0000140A  4282                     517          CLR.L       D2
0000140C  43F9 0000189A            518          LEA         MOVEQ_MSG, A1
00001412  103C 000E                519          MOVE.B      #14, D0
00001416  4E4F                     520          TRAP        #15
00001418  6000 00B2                521          BRA         INVALID_INSTR 
0000141C  4E75                     522          RTS
0000141E                           523  
0000141E                           524  JUMP_8:
0000141E  4282                     525          CLR.L       D2
00001420  4EB9 0000154A            526          JSR         Bits8to6  ;
00001426  B43C 0003                527          CMP.B       #3, D2    ;
0000142A  6700 02E0                528          BEQ         OP_CODE_DIVU ;
0000142E  B43C 0007                529          CMP.B       #7, D2    ;
00001432  6700 02E6                530          BEQ         OP_CODE_DIVS ;
00001436  6000 0094                531          BRA         INVALID_INSTR
0000143A  4E75                     532          RTS
0000143C                           533  
0000143C                           534  
0000143C                           535  JUMP_B:
0000143C  4282                     536          CLR.L       D2
0000143E  4EB9 0000154A            537          JSR         Bits8to6  ;
00001444                           538      ;CHECKING OPMODE FIELD
00001444  B43C 0000                539          CMP.B       #0, D2   ;
00001448  6700 02B4                540          BEQ         OP_CODE_CMP ;
0000144C  B43C 0001                541          CMP.B       #1, D2    ;
00001450  6700 02AC                542          BEQ         OP_CODE_CMP ;
00001454  B43C 0002                543          CMP.B       #2, D2    ;
00001458  6700 02A4                544          BEQ         OP_CODE_CMP ;
0000145C  6000 006E                545          BRA         INVALID_INSTR
00001460  4E75                     546          RTS         
00001462                           547  
00001462                           548  JUMP_C:
00001462  4282                     549          CLR.L       D2
00001464  4EB9 0000154A            550          JSR         Bits8to6  ;
0000146A  B47C 0003                551          CMP         #3, D2    ;
0000146E  6700 0374                552          BEQ         OP_CODE_MULU ;
00001472  B47C 0007                553          CMP         #7, D2   ;
00001476  6700 035E                554          BEQ         OP_CODE_MULS ;
0000147A                           555  
0000147A  6000 0050                556          BRA         INVALID_INSTR
0000147E  4E75                     557          RTS 
00001480                           558  
00001480                           559  JUMP_D:
00001480  4282                     560          CLR.L       D2
00001482  4EB9 00001526            561          JSR         Bits7to6  ;
00001488  B43C 0003                562          CMP.B       #3, D2    ;
0000148C  6700 0372                563          BEQ         OP_CODE_ADDA
00001490  4EF9 000017F2            564          JMP         OP_CODE_ADD
00001496  6000 0034                565          BRA         INVALID_INSTR
0000149A  4E75                     566          RTS 
0000149C                           567   
0000149C                           568  JUMP_E:
0000149C  4282                     569          CLR.L       D2
0000149E  4EB9 00001526            570          JSR         Bits7to6
000014A4  B43C 0003                571          CMP.B       #3, D2
000014A8  6700 038C                572          BEQ         MEM_SHIFT
000014AC                           573   
000014AC                           574  JUMP_E_REG:
000014AC  4282                     575          CLR.L       D2
000014AE  4EB9 00001502            576          JSR         Bits4to3
000014B4  B47C 0000                577          CMP         #0, D2
000014B8  4EF9 0000180E            578          JMP         ASD_REG
000014BE                           579           
000014BE                           580  JUMP_ERROR:       
000014BE  43F9 000018F8            581          LEA         ERROR_INSTR, A1
000014C4  103C 000E                582          MOVE.B      #14, D0
000014C8  4E4F                     583          TRAP        #15
000014CA                           584  
000014CA  4E75                     585          RTS
000014CC                           586  
000014CC                           587  INVALID_INSTR:
000014CC  43F9 000018E0            588          LEA         IMPLEMENT_MSG, A1
000014D2  103C 000E                589          MOVE.B      #14, D0
000014D6  4E4F                     590          TRAP        #15
000014D8  4E75                     591          RTS
000014DA                           592  
000014DA                           593  
000014DA                           594  Bits2to0:
000014DA  3404                     595          MOVE.W      D4, D2
000014DC  103C 000D                596          MOVE.B      #13, D0     ; Shifting 13 bits
000014E0  E16A                     597          LSL.W       D0, D2      ; shorten to two bits
000014E2  E06A                     598          LSR.W       D0, D2      ; isolate two bits
000014E4  4E75                     599          RTS
000014E6                           600      
000014E6                           601  Bits3to0:
000014E6  3404                     602          MOVE.W      D4, D2
000014E8  103C 000C                603          MOVE.B      #12, D0     ; Shift 12 bits
000014EC  E16A                     604          LSL.W       D0, D2      ; Shorten to 4th bit
000014EE  E06A                     605          LSR.W       D0, D2      ; Isolate 4 bits
000014F0  4E75                     606          RTS
000014F2                           607      
000014F2                           608  Bits5to3:
000014F2  3404                     609          MOVE.W      D4, D2
000014F4  103C 000A                610          MOVE.B      #10, D0     ; Shift 10 bits
000014F8  E16A                     611          LSL.W       D0, D2      ; cut to 5th bit
000014FA  103C 000D                612          MOVE.B      #13, D0     ; Shift 13 bits
000014FE  E06A                     613          LSR.W       D0, D2      ; Isolate bits 5-3
00001500  4E75                     614          RTS
00001502                           615  Bits4to3:
00001502  3404                     616          MOVE.W      D4, D2
00001504  103C 000C                617          MOVE.B      #12, D0     ; Shift 12 bits
00001508  E16A                     618          LSL.W       D0, D2      ; cut to 5th bit
0000150A  103C 000E                619          MOVE.B      #14, D0     ; Shift 14 bits
0000150E  E06A                     620          LSR.W       D0, D2      ; Isolate bits 4-3
00001510  4E75                     621          RTS
00001512                           622          
00001512                           623  Bits7to0:
00001512  3404                     624          MOVE.W      D4, D2
00001514  E14A                     625          LSL.W       #8, D2      ; cut to 8th bit
00001516  E04A                     626          LSR.W       #8, D2      ; Isolate 7-0
00001518  4E75                     627          RTS
0000151A                           628  Bits7to4: 
0000151A  3404                     629          MOVE.W      D4, D2
0000151C  E14A                     630          LSL.W       #8, D2      ; cut to 8th bit
0000151E  103C 000C                631          MOVE.B      #12, D0     ; shift 12 bits
00001522  E06A                     632          LSR.W       D0, D2      ; isolate 7-4
00001524  4E75                     633          RTS
00001526                           634      
00001526                           635  Bits7to6:
00001526  3404                     636          MOVE.W      D4, D2
00001528  E14A                     637          LSL.W       #8, D2      ; cut to 8th bit
0000152A  103C 000E                638          MOVE.B      #14, D0     ; shift 14 bits
0000152E  E06A                     639          LSR.W       D0, D2      ; isolate 7-6
00001530  4E75                     640          RTS
00001532                           641      
00001532                           642  Bits8to3:
00001532  3404                     643          MOVE.W      D4, D2
00001534  EF4A                     644          LSL.W       #7, D2      ; cut to 9th bit
00001536  103C 000A                645          MOVE.B      #10, D0     ; shift 10 bits
0000153A  E06A                     646          LSR.W       D0, D2      ; isolate 8-3
0000153C  4E75                     647          RTS
0000153E                           648      
0000153E                           649  Bits8to4:
0000153E  3404                     650          MOVE.W      D4, D2
00001540  EF4A                     651          LSL.W       #7, D2      ; cut to 9th bit
00001542  103C 000B                652          MOVE.B      #11, D0     ; shift 11 bits
00001546  E06A                     653          LSR.W       D0, D2      ; isolate 8-4
00001548  4E75                     654          RTS
0000154A                           655      
0000154A                           656  Bits8to6:
0000154A  3404                     657          MOVE.W      D4, D2
0000154C  EF4A                     658          LSL.W       #7, D2      ; cut to 9th bit
0000154E  103C 000D                659          MOVE.B      #13, D0     ; shift 13 bits
00001552  E06A                     660          LSR.W       D0, D2      ; isolate 8-6
00001554  4E75                     661          RTS
00001556                           662  Bits9to7:
00001556  3404                     663          MOVE.W      D4, D2
00001558  ED4A                     664          LSL.W       #6, D2      ; cut to 10th bit
0000155A  103C 000D                665          MOVE.B      #13, D0     ; shift 13 bits
0000155E  E06A                     666          LSR.W       D0, D2      ; isolate 8-6
00001560  4E75                     667          RTS
00001562                           668  Bits11to6:
00001562  3404                     669          MOVE.W      D4, D2
00001564  E94A                     670          LSL.W       #4, D2      ; cut to 12th bit
00001566  103C 000A                671          MOVE.B      #10, D0     ; shift 10 bits
0000156A  E06A                     672          LSR.W       D0, D2      ; isolate 11-6
0000156C  4E75                     673          RTS
0000156E                           674  
0000156E                           675       
0000156E                           676  Bits11to8:
0000156E  3404                     677          MOVE.W      D4, D2
00001570  E94A                     678          LSL.W       #4, D2      ; cut to 12th bit
00001572  103C 000C                679          MOVE.B      #12, D0     ; shift 12 bits
00001576  E06A                     680          LSR.W       D0, D2      ; isolate 11-8
00001578  4E75                     681          RTS
0000157A                           682  
0000157A                           683  Bits11to9:
0000157A  3404                     684          MOVE.W      D4, D2
0000157C  E94A                     685          LSL.W       #4, D2      ; cut to 12th bit
0000157E  103C 000D                686          MOVE.B      #13, D0     ; shift 13 bits
00001582  E06A                     687          LSR.W       D0, D2      ; isolate 11-9
00001584  4E75                     688          RTS
00001586                           689  
00001586                           690  
00001586                           691  OP_CODE_BASE_MOVE:
00001586                           692          ; This should only execute for Move.B
00001586  43F9 00001871            693          LEA         MOVE_MSG, A1
0000158C  103C 000E                694          MOVE.B      #14, D0
00001590  4E4F                     695          TRAP        #15
00001592  43F9 000018D7            696          LEA         BYTE_MSG, A1
00001598  103C 000E                697          MOVE.B      #14, D0
0000159C  4E4F                     698          TRAP        #15
0000159E                           699          
0000159E  163C 0000                700          MOVE.B      #0, D3
000015A2                           701          
000015A2                           702          
000015A2                           703          
000015A2  4E75                     704          RTS         
000015A4                           705  
000015A4                           706  J_MOVEA_L:
000015A4  43F9 00001876            707          LEA         MOVEA_MSG, A1
000015AA  103C 000E                708          MOVE.B      #14, D0
000015AE  4E4F                     709          TRAP        #15
000015B0  43F9 000018DD            710          LEA         LONG_MSG, A1
000015B6  103C 000E                711          MOVE.B      #14, D0
000015BA  4E4F                     712          TRAP        #15
000015BC                           713          
000015BC  163C 0002                714          MOVE.B      #2, D3
000015C0  4EB9 0000191E            715          JSR         EA_MOVE
000015C6  4E75                     716          RTS    
000015C8                           717  J_MOVE_L:
000015C8  43F9 00001871            718          LEA         MOVE_MSG, A1
000015CE  103C 000E                719          MOVE.B      #14, D0
000015D2  4E4F                     720          TRAP        #15
000015D4  43F9 000018DD            721          LEA         LONG_MSG, A1
000015DA  103C 000E                722          MOVE.B      #14, D0
000015DE  4E4F                     723          TRAP        #15
000015E0                           724          
000015E0  163C 0002                725          MOVE.B      #2, D3
000015E4  4EB9 0000191E            726          JSR         EA_MOVE
000015EA                           727          
000015EA  4E75                     728          RTS
000015EC                           729  
000015EC                           730  
000015EC                           731  
000015EC                           732  J_MOVEA_W:
000015EC  43F9 00001876            733          LEA         MOVEA_MSG, A1
000015F2  103C 000E                734          MOVE.B      #14, D0
000015F6  4E4F                     735          TRAP        #15
000015F8  43F9 000018DA            736          LEA         WORD_MSG, A1
000015FE  103C 000E                737          MOVE.B      #14, D0
00001602  4E4F                     738          TRAP        #15
00001604                           739          
00001604  163C 0001                740          MOVE.B      #1, D3
00001608  4EB9 0000191E            741          JSR         EA_MOVE
0000160E                           742          
0000160E  4E75                     743          RTS  
00001610                           744      
00001610                           745  J_MOVE_W:
00001610  43F9 00001871            746          LEA         MOVE_MSG, A1
00001616  103C 000E                747          MOVE.B      #14, D0
0000161A  4E4F                     748          TRAP        #15
0000161C  43F9 000018DA            749          LEA         WORD_MSG, A1
00001622  103C 000E                750          MOVE.B      #14, D0
00001626  4E4F                     751          TRAP        #15
00001628                           752          
00001628  163C 0001                753          MOVE.B      #1, D3
0000162C  4EB9 0000191E            754          JSR         EA_MOVE
00001632                           755          
00001632  4E75                     756          RTS  
00001634                           757      
00001634                           758  OP_CODE_ORI:
00001634  43F9 0000187C            759          LEA         ORI_MSG, A1
0000163A  103C 000E                760          MOVE.B      #14, D0
0000163E  4E4F                     761          TRAP        #15
00001640                           762  
00001640  4E75                     763          RTS
00001642                           764  
00001642                           765  
00001642                           766  OP_CODE_NOP:
00001642  43F9 00001880            767          LEA         NOP_MSG, A1
00001648  103C 000E                768          MOVE.B      #14, D0
0000164C  4E4F                     769          TRAP        #15
0000164E                           770  
0000164E  4E75                     771          RTS
00001650                           772             
00001650                           773  
00001650                           774  OP_CODE_JSR:
00001650  43F9 0000188E            775          LEA         JSR_MSG, A1
00001656  103C 000E                776          MOVE.B      #14, D0
0000165A  4E4F                     777          TRAP        #15
0000165C                           778          
0000165C                           779          *STORE DEST AND STORE IN REGISTER
0000165C                           780          *EA
0000165C                           781  
0000165C  4E75                     782          RTS
0000165E                           783          
0000165E                           784  OP_CODE_LEA:
0000165E  43F9 0000188A            785          LEA         LEA_MSG, A1
00001664  103C 000E                786          MOVE.B      #14, D0
00001668  4E4F                     787          TRAP        #15
0000166A                           788          
0000166A                           789  
0000166A                           790          *EA
0000166A                           791          *JSR         EA_LEA
0000166A                           792  
0000166A  4E75                     793          RTS
0000166C                           794  
0000166C                           795  OP_CODE_MOVEM:
0000166C  4EB8 1556                796          JSR         Bits9to7 ;check for MOVEM and EXT
00001670  B43C 0001                797          CMP.B       #1, D2   ;
00001674  6700 0006                798          BEQ         MOVEM_OR_EXT
00001678  4EF8 14CC                799          JMP         INVALID_INSTR 
0000167C                           800          
0000167C                           801  MOVEM_OR_EXT:
0000167C  4EB8 14F2                802          JSR         Bits5to3  ;
00001680  B43C 0000                803          CMP.B       #0, D2    ;
00001684  6700 004E                804          BEQ         OP_CODE_EXT ;
00001688                           805          
00001688  3404                     806          MOVE.W      D4, D2
0000168A  0802 000A                807          BTST        #10, D2
0000168E  6700 0002                808          BEQ         MOVEM_SIZE
00001692                           809          
00001692                           810  MOVEM_SIZE:
00001692  0802 0006                811          BTST        #6, D2
00001696  6700 0008                812          BEQ         MOVEM_W
0000169A  4EF9 000016BA            813          JMP         MOVEM_L
000016A0                           814          
000016A0                           815  MOVEM_W:
000016A0  43F9 00001884            816          LEA         MOVEM_MSG, A1
000016A6  103C 000E                817          MOVE.B      #14, D0
000016AA  4E4F                     818          TRAP        #15
000016AC  43F9 000018DA            819          LEA         WORD_MSG, A1
000016B2  103C 000E                820          MOVE.B      #14, D0
000016B6  4E4F                     821          TRAP        #15  
000016B8                           822          *EA
000016B8  4E75                     823          RTS
000016BA                           824  MOVEM_L:
000016BA  43F9 00001884            825          LEA         MOVEM_MSG, A1
000016C0  103C 000E                826          MOVE.B      #14, D0
000016C4  4E4F                     827          TRAP        #15
000016C6  43F9 000018DD            828          LEA         LONG_MSG, A1
000016CC  103C 000E                829          MOVE.B      #14, D0
000016D0  4E4F                     830          TRAP        #15   
000016D2                           831          *EA
000016D2  4E75                     832          RTS   
000016D4                           833           
000016D4                           834  OP_CODE_EXT:
000016D4  43F9 000018CD            835          LEA         EXT_MSG, A1
000016DA  103C 000E                836          MOVE.B      #14, D0
000016DE  4E4F                     837          TRAP        #15
000016E0  4E75                     838          RTS
000016E2                           839  
000016E2                           840  
000016E2                           841  MOVEM_CHECK:
000016E2  4282                     842          CLR.L       D2
000016E4  2404                     843          MOVE.L      D4, D2
000016E6  0802 000B                844          BTST        #11,D2 ;
000016EA  6680                     845          BNE         OP_CODE_MOVEM
000016EC  4EF8 14CC                846          JMP         INVALID_INSTR               
000016F0                           847  
000016F0                           848  
000016F0                           849  OP_CODE_ADDQ:
000016F0  43F9 0000186C            850          LEA         ADDQ_MSG, A1
000016F6  103C 000E                851          MOVE.B      #14, D0
000016FA  4E4F                     852          TRAP        #15
000016FC                           853          
000016FC  4E75                     854          RTS
000016FE                           855          ;JSR         Bits7to6  
000016FE                           856          ;MOVE        #5, TAB
000016FE                           857          ;JSR         SizeTwoBits 
000016FE                           858   *EA STUFF, MAYBE CHECK FOR DISPLACEMENT COUNT?
000016FE                           859   
000016FE                           860  OP_CODE_CMP:
000016FE                           861  
000016FE  43F9 000018AE            862          LEA         CMP_MSG, A1
00001704  103C 000E                863          MOVE.B      #14, D0
00001708  4E4F                     864          TRAP        #15
0000170A  4E75                     865          RTS
0000170C                           866          
0000170C                           867  OP_CODE_DIVU:
0000170C  43F9 000018A0            868          LEA         DIVU_MSG, A1
00001712  103C 000E                869          MOVE.B      #14, D0
00001716  4E4F                     870          TRAP        #15
00001718  4E75                     871          RTS
0000171A                           872          
0000171A                           873  OP_CODE_DIVS:
0000171A  43F9 000018A5            874          LEA         DIVS_MSG, A1
00001720  103C 000E                875          MOVE.B      #14, D0
00001724  4E4F                     876          TRAP        #15
00001726  4E75                     877          RTS
00001728                           878  
00001728                           879  OP_CODE_SUB:
00001728  43F9 000018AA            880          LEA         SUB_MSG, A1
0000172E  103C 000E                881          MOVE.B      #14, D0
00001732  4E4F                     882          TRAP        #15
00001734                           883          
00001734                           884          *CALL OUT EA
00001734                           885          
00001734                           886          *FIGURE OUT SIZE
00001734  4EF9 0000173A            887          JMP         OPMODE
0000173A                           888          
0000173A                           889  OPMODE:
0000173A  4EB8 154A                890          JSR         Bits8to6
0000173E  B43C 0000                891          CMP.B       #0, D2
00001742  6700 0030                892          BEQ         PRINT_BYTE
00001746  B43C 0004                893          CMP.B       #4, D2
0000174A  6700 0028                894          BEQ         PRINT_BYTE
0000174E                           895          
0000174E  B43C 0001                896          CMP.B       #1, D2
00001752  6700 002E                897          BEQ         PRINT_WORD
00001756  B43C 0005                898          CMP.B       #5, D2
0000175A  6700 0026                899          BEQ         PRINT_WORD
0000175E                           900          
0000175E  B43C 0002                901          CMP.B       #2, D2
00001762  6700 002C                902          BEQ         PRINT_LONG
00001766  B43C 0006                903          CMP.B       #6, D2
0000176A  6700 0024                904          BEQ         PRINT_LONG
0000176E                           905          
0000176E  4EF9 0000179E            906          JMP         WRONG_SIZE
00001774                           907          
00001774                           908  PRINT_BYTE:
00001774  43F9 000018D7            909          LEA         BYTE_MSG, A1
0000177A  103C 000E                910          MOVE.B      #14, D0
0000177E  4E4F                     911          TRAP        #15
00001780  4E75                     912          RTS
00001782                           913  
00001782                           914  PRINT_WORD:
00001782  43F9 000018DA            915          LEA         WORD_MSG, A1
00001788  103C 000E                916          MOVE.B      #14, D0
0000178C  4E4F                     917          TRAP        #15
0000178E  4E75                     918          RTS
00001790                           919  
00001790                           920  PRINT_LONG:
00001790  43F9 000018DD            921          LEA         LONG_MSG, A1
00001796  103C 000E                922          MOVE.B      #14, D0
0000179A  4E4F                     923          TRAP        #15
0000179C  4E75                     924          RTS
0000179E                           925  
0000179E                           926  WRONG_SIZE:
0000179E  43F9 00001908            927          LEA         ERROR_SIZE_MSG, A1
000017A4  103C 000E                928          MOVE.B      #14, D0
000017A8  4E4F                     929          TRAP        #15
000017AA  4E75                     930          RTS
000017AC                           931          
000017AC                           932  OP_CODE_BRA:
000017AC  43F9 00001892            933          LEA         BRA_MSG, A1
000017B2  103C 000E                934          MOVE.B      #14, D0
000017B6  4E4F                     935          TRAP        #15
000017B8  4E75                     936          RTS
000017BA                           937          *CONNECT TO RTS
000017BA                           938  
000017BA                           939  OP_CODE_BSR:
000017BA  43F9 00001896            940          LEA         BSR_MSG, A1
000017C0  103C 000E                941          MOVE.B      #14, D0
000017C4  4E4F                     942          TRAP        #15
000017C6  4E75                     943          RTS
000017C8                           944          
000017C8                           945  OP_CODE_MOVEQ:
000017C8  43F9 0000189A            946          LEA         MOVEQ_MSG, A1
000017CE  103C 000E                947          MOVE.B      #14, D0
000017D2  4E4F                     948          TRAP        #15
000017D4  4E75                     949          RTS
000017D6                           950  
000017D6                           951  OP_CODE_MULS:
000017D6  43F9 000018B7            952          LEA         MULS_MSG, A1
000017DC  103C 000E                953          MOVE.B      #14, D0
000017E0  4E4F                     954          TRAP        #15
000017E2  4E75                     955          RTS
000017E4                           956          
000017E4                           957  OP_CODE_MULU:
000017E4  43F9 000018B2            958          LEA         MULU_MSG, A1
000017EA  103C 000E                959          MOVE.B      #14, D0
000017EE  4E4F                     960          TRAP        #15
000017F0  4E75                     961          RTS
000017F2                           962  
000017F2                           963  OP_CODE_ADD:
000017F2  43F9 000018BC            964          LEA         ADD_MSG, A1
000017F8  103C 000E                965          MOVE.B      #14, D0
000017FC  4E4F                     966          TRAP        #15
000017FE  4E75                     967          RTS
00001800                           968          
00001800                           969  OP_CODE_ADDA:
00001800  43F9 000018C0            970          LEA         ADDA_MSG, A1
00001806  103C 000E                971          MOVE.B      #14, D0
0000180A  4E4F                     972          TRAP        #15
0000180C  4E75                     973          RTS
0000180E                           974          
0000180E                           975        
0000180E                           976  ASD_REG:
0000180E  4282                     977          CLR.L       D2
00001810  3404                     978          MOVE.W      D4, D2
00001812  0802 0008                979          BTST        #8, D2
00001816  6600 0010                980          BNE         OP_CODE_ASL_REG
0000181A  43F9 000018C9            981          LEA         ASR_MSG, A1
00001820  103C 000E                982          MOVE.B      #14, D0
00001824  4E4F                     983          TRAP        #15
00001826  4E75                     984          RTS
00001828                           985          *EA
00001828                           986          
00001828                           987  OP_CODE_ASL_REG:
00001828  43F9 000018C5            988          LEA         ASL_MSG, A1
0000182E  103C 000E                989          MOVE.B      #14, D0
00001832  4E4F                     990          TRAP        #15
00001834  4E75                     991          RTS
00001836                           992          *EA
00001836                           993          
00001836                           994          
00001836                           995  
00001836                           996  MEM_SHIFT:
00001836  4282                     997          CLR.L       D2
00001838  4EB8 1502                998          JSR         Bits4to3
0000183C  B43C 0000                999          CMP.B       #0, D2
00001840  6700 0002               1000          BEQ         ASD_MEM
00001844                          1001  
00001844                          1002  ASD_MEM:
00001844  4282                    1003          CLR.L       D2
00001846  3404                    1004          MOVE.W      D4, D2
00001848  0802 0008               1005          BTST        #8, D2
0000184C  6700 0010               1006          BEQ         OP_CODE_ASR_MEM
00001850  43F9 000018C5           1007          LEA         ASL_MSG, A1
00001856  103C 000E               1008          MOVE.B      #14, D0
0000185A  4E4F                    1009          TRAP        #15
0000185C  4E75                    1010          RTS
0000185E                          1011          *EA
0000185E                          1012        
0000185E                          1013  OP_CODE_ASR_MEM:
0000185E  43F9 000018C9           1014          LEA         ASR_MSG, A1
00001864  103C 000E               1015          MOVE.B      #14, D0
00001868  4E4F                    1016          TRAP        #15
0000186A                          1017          *EA
0000186A  4E75                    1018          RTS
0000186C                          1019          
0000186C                          1020          
0000186C                          1021  
0000186C                          1022  
0000186C                          1023  
0000186C                          1024  
0000186C= 41 44 44 51 00          1025  ADDQ_MSG:       DC.B        'ADDQ',0
00001871= 4D 4F 56 45 00          1026  MOVE_MSG:       DC.B        'MOVE',0
00001876= 4D 4F 56 45 41 00       1027  MOVEA_MSG:      DC.B        'MOVEA',0
0000187C= 4F 52 49 00             1028  ORI_MSG:        DC.B        'ORI',0
00001880= 4E 4F 50 00             1029  NOP_MSG:        DC.B        'NOP',0
00001884= 4D 4F 56 45 4D 00       1030  MOVEM_MSG:      DC.B        'MOVEM',0
0000188A= 4C 45 41 00             1031  LEA_MSG:        DC.B        'LEA',0
0000188E= 4A 53 52 00             1032  JSR_MSG:        DC.B        'JSR',0
00001892= 42 52 41 00             1033  BRA_MSG:        DC.B        'BRA',0
00001896= 42 53 52 00             1034  BSR_MSG:        DC.B        'BSR',0
0000189A= 4D 4F 56 45 51 00       1035  MOVEQ_MSG:      DC.B        'MOVEQ',0
000018A0= 44 49 56 55 00          1036  DIVU_MSG:       DC.B        'DIVU',0
000018A5= 44 49 56 53 00          1037  DIVS_MSG:       DC.B        'DIVS',0
000018AA= 53 55 42 00             1038  SUB_MSG:        DC.B        'SUB',0
000018AE= 43 4D 50 00             1039  CMP_MSG:        DC.B        'CMP',0
000018B2= 4D 55 4C 55 00          1040  MULU_MSG:       DC.B        'MULU',0
000018B7= 4D 55 4C 53 00          1041  MULS_MSG:       DC.B        'MULS',0
000018BC= 41 44 44 00             1042  ADD_MSG:        DC.B        'ADD',0
000018C0= 41 44 44 41 00          1043  ADDA_MSG:       DC.B        'ADDA',0
000018C5= 41 53 4C 00             1044  ASL_MSG:        DC.B        'ASL',0
000018C9= 41 53 52 00             1045  ASR_MSG:        DC.B        'ASR',0
000018CD= 45 58 54 00             1046  EXT_MSG:        DC.B        'EXT',0
000018D1= 23 00                   1047  POUND:          DC.B        '#',0
000018D3= 24 00                   1048  DOLLAR:         DC.B        '$',0
000018D5= 25 00                   1049  PERCENT:        DC.B        '%',0
000018D7                          1050  
000018D7                          1051  ; Size messages
000018D7                          1052  
000018D7= 2E 42 00                1053  BYTE_MSG:       DC.B        '.B',0
000018DA= 2E 57 00                1054  WORD_MSG:       DC.B        '.W',0
000018DD= 2E 4C 00                1055  LONG_MSG:       DC.B        '.L',0
000018E0= 4F 50 2D 43 4F 44 ...   1056  IMPLEMENT_MSG:  DC.B        'OP-CODE NOT IMPLEMENTED',0
000018F8= 49 4E 56 41 4C 49 ...   1057  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001908= 49 4E 56 41 4C 49 ...   1058  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
0000191E                          1059  
0000191E                          1060  
0000191E                          1061  
0000191E                          1062  
0000191E                          1063  
0000191E                          1064  
0000191E                          1065  
0000191E                          1066  
0000191E                          1067  
0000191E                          1068  
0000191E                          1069  
0000191E                          1070  
0000191E                          1071  
0000191E                          1072  
0000191E                          1073  
0000191E                          1074  
0000191E                          1075  
0000191E                          1076  
0000191E                          1077  
0000191E                          1078  
0000191E                          1079  
0000191E                          1080  
0000191E                          1081  
0000191E                          1082  
0000191E                          1083  
0000191E                          1084  
0000191E                          1085  
0000191E                          1086  
0000191E                          1087  
0000191E                          1088  
0000191E                          1089  
0000191E                          1090  
0000191E                          1091  
0000191E                          1092  
0000191E                          1093  
0000191E                          1094  
0000191E                          1095  
0000191E                          1096  
0000191E                          1097  
0000191E                          1098  -------------------- end include --------------------
0000191E                          1099                
0000191E                          1100                  INCLUDE     'Disassembler_EA_Codes.x68'
0000191E                          1101  
0000191E                          1102  
0000191E                          1103  ; D3 = OP size. ie. Byte, Word, Long
0000191E                          1104  ; D4 = Original hex code
0000191E                          1105  ; D5 = Current Mode being isolated
0000191E                          1106  ; D6 = Current Register being isolated
0000191E                          1107  
0000191E                          1108  ; A3 will store starting address
0000191E                          1109  ; A4 will store ending address
0000191E                          1110  
0000191E                          1111  
0000191E                          1112  
0000191E                          1113  ; based on the size of the move operation Print out an amount of data as is.
0000191E                          1114  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
0000191E                          1115  EA_MOVE:
0000191E                          1116          
0000191E                          1117  ; A = Size
0000191E                          1118  ; B = Destination Register
0000191E                          1119  ; C = Destination Mode
0000191E                          1120  ; D = Source Mode
0000191E                          1121  ; E = Source Register
0000191E                          1122  
0000191E                          1123  ; 00AA BBBC CCDD DEEE 
0000191E                          1124          ;SIMHALT
0000191E  4281                    1125          CLR.L       D1
00001920  4285                    1126          CLR.L       D5
00001922  4286                    1127          CLR.L       D6
00001924                          1128          
00001924  3A04                    1129          MOVE.W      D4, D5
00001926  3C04                    1130          MOVE.W      D4, D6
00001928                          1131          
00001928                          1132          
00001928  123C 000A               1133          MOVE.B      #10,D1
0000192C  E36D                    1134          LSL.W       D1,D5       
0000192E  123C 000D               1135          MOVE.B      #13,D1
00001932  E26D                    1136          LSR.W       D1,D5
00001934                          1137          ; 0000 0000 00DD D000
00001934                          1138          ; Isolating Source Mode
00001934                          1139          
00001934                          1140          
00001934  E36E                    1141          LSL.W       D1,D6
00001936  E26E                    1142          LSR.W       D1,D6
00001938                          1143          ; 0000 0000 0000 0EEE
00001938                          1144          ; Isolating Source Register 
00001938                          1145         
00001938  4EB9 00001982           1146          JSR         MODE_TABLE
0000193E                          1147          
0000193E                          1148          ; Print Out ", "
0000193E  43F9 00001CDE           1149          LEA         SEPERATOR, A1
00001944  103C 000E               1150          MOVE.B      #14, D0
00001948  4E4F                    1151          TRAP        #15
0000194A                          1152          ;SIMHALT
0000194A  4285                    1153          CLR.L       D5
0000194C  4286                    1154          CLR.L       D6
0000194E  3A04                    1155          MOVE.W      D4, D5
00001950  3C04                    1156          MOVE.W      D4, D6
00001952                          1157          
00001952  123C 0007               1158          MOVE.B      #7,D1     
00001956  E36D                    1159          LSL.W       D1,D5       
00001958  123C 000D               1160          MOVE.B      #13,D1
0000195C  E26D                    1161          LSR.W       D1,D5
0000195E                          1162          ; 0000 000C CC00 0000
0000195E                          1163          ; Isolating Destination Mode  
0000195E                          1164              
0000195E  E94E                    1165          LSL.W       #4,D6  
00001960  E26E                    1166          LSR.W       D1,D6
00001962                          1167          ; 0000 BBB0 0000 0000
00001962                          1168          ; Isolating Destination Register
00001962                          1169          
00001962  4EB9 00001982           1170          JSR         MODE_TABLE
00001968                          1171  
00001968                          1172  
00001968  4E75                    1173          RTS
0000196A                          1174          
0000196A                          1175          
0000196A                          1176  ; X+Y = Effective addressing
0000196A                          1177  ; XXX = Mode
0000196A                          1178  ; YYY = Register
0000196A                          1179      
0000196A                          1180  ; 0000 0000 00XX XYYY
0000196A                          1181  EA_LEA:
0000196A  4281                    1182          CLR.L       D1
0000196C  4285                    1183          CLR.L       D5
0000196E  4286                    1184          CLR.L       D6
00001970                          1185  
00001970  3A04                    1186          MOVE.W      D4, D5
00001972  3C04                    1187          MOVE.W      D4, D6
00001974                          1188  
00001974                          1189  
00001974                          1190          ; Print Out ", "
00001974  43F9 00001CDE           1191          LEA         SEPERATOR, A1
0000197A  103C 000E               1192          MOVE.B      #14, D0
0000197E  4E4F                    1193          TRAP        #15
00001980                          1194  
00001980                          1195  
00001980  4E75                    1196          RTS
00001982                          1197  
00001982                          1198  
00001982                          1199  
00001982                          1200  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00001982                          1201  MODE_TABLE:
00001982                          1202  
00001982  BA3C 0000               1203          CMP.B       #0,D5
00001986  6700 0048               1204          BEQ         J_TBL_D
0000198A  BA3C 0001               1205          CMP.B       #1,D5
0000198E  6700 002C               1206          BEQ         J_TBL_A
00001992  BA3C 0002               1207          CMP.B       #2,D5
00001996  6700 004C               1208          BEQ         J_TBL_A_P
0000199A  BA3C 0003               1209          CMP.B       #3,D5
0000199E  6700 0064               1210          BEQ         J_TBL_A_INCR
000019A2  BA3C 0004               1211          CMP.B       #4,D5
000019A6  6700 007C               1212          BEQ         J_TBL_A_DECR
000019AA  BA3C 0007               1213          CMP.B       #7,D5
000019AE  6700 0004               1214          BEQ         J_ABS
000019B2                          1215          
000019B2  4E75                    1216          RTS
000019B4                          1217          ;   deal with errors here
000019B4                          1218  
000019B4                          1219  J_ABS:
000019B4  4EB9 00001A4E           1220          JSR         J_ABS_TABLE
000019BA  4E75                    1221          RTS
000019BC                          1222  
000019BC                          1223  J_TBL_A:
000019BC  43F9 00001CCD           1224          LEA         MODE_1_MSG, A1 ; A#
000019C2  103C 000E               1225          MOVE.B      #14, D0
000019C6  4E4F                    1226          TRAP        #15
000019C8  4EB9 00001A44           1227          JSR         DISPLAY_REG
000019CE                          1228  
000019CE  4E75                    1229          RTS
000019D0                          1230  
000019D0                          1231  
000019D0                          1232  J_TBL_D:
000019D0  43F9 00001CCA           1233          LEA         MODE_0_MSG, A1 ; D#
000019D6  103C 000E               1234          MOVE.B      #14, D0
000019DA  4E4F                    1235          TRAP        #15
000019DC  4EB9 00001A44           1236          JSR         DISPLAY_REG
000019E2  4E75                    1237          RTS
000019E4                          1238  
000019E4                          1239  J_TBL_A_P:
000019E4                          1240  
000019E4  43F9 00001CD0           1241          LEA         MODE_A_MSG, A1 ; (A#)
000019EA  103C 000E               1242          MOVE.B      #14, D0
000019EE  4E4F                    1243          TRAP        #15
000019F0  4EB9 00001A44           1244          JSR         DISPLAY_REG
000019F6                          1245          
000019F6  43F9 00001CD4           1246          LEA         MODE_A_1_MSG, A1
000019FC  103C 000E               1247          MOVE.B      #14, D0
00001A00  4E4F                    1248          TRAP        #15
00001A02                          1249  
00001A02                          1250          
00001A02  4E75                    1251          RTS
00001A04                          1252      
00001A04                          1253  J_TBL_A_INCR:
00001A04  43F9 00001CD0           1254          LEA         MODE_A_MSG, A1 ; (A#)+
00001A0A  103C 000E               1255          MOVE.B      #14, D0
00001A0E  4E4F                    1256          TRAP        #15
00001A10  4EB9 00001A44           1257          JSR         DISPLAY_REG
00001A16                          1258          
00001A16  43F9 00001CD6           1259          LEA         MODE_A_2_MSG, A1
00001A1C  103C 000E               1260          MOVE.B      #14, D0
00001A20  4E4F                    1261          TRAP        #15
00001A22                          1262  
00001A22  4E75                    1263          RTS
00001A24                          1264          
00001A24                          1265  J_TBL_A_DECR:
00001A24  43F9 00001CD9           1266          LEA         MODE_MINUS_MSG, A1 ; -(A#)
00001A2A  103C 000E               1267          MOVE.B      #14, D0
00001A2E  4E4F                    1268          TRAP        #15
00001A30  4EB9 00001A44           1269          JSR         DISPLAY_REG
00001A36                          1270          
00001A36  43F9 00001CD4           1271          LEA         MODE_A_1_MSG, A1
00001A3C  103C 000E               1272          MOVE.B      #14, D0
00001A40  4E4F                    1273          TRAP        #15
00001A42                          1274  
00001A42  4E75                    1275          RTS
00001A44                          1276          
00001A44                          1277          
00001A44                          1278  DISPLAY_REG:
00001A44  1206                    1279          MOVE.B      D6, D1
00001A46  103C 0003               1280          MOVE.B      #$3, D0
00001A4A  4E4F                    1281          TRAP        #15
00001A4C  4E75                    1282          RTS
00001A4E                          1283  
00001A4E                          1284  J_ABS_TABLE:
00001A4E                          1285          ; SIMHALT
00001A4E  BC3C 0000               1286          CMP.B       #0,D6
00001A52  6700 0014               1287          BEQ         J_ABS_W
00001A56                          1288              
00001A56  BC3C 0001               1289          CMP.B       #1,D6
00001A5A  6700 0032               1290          BEQ         J_ABS_L
00001A5E                          1291              
00001A5E  BC3C 0004               1292          CMP.B       #4,D6
00001A62  6700 0052               1293          BEQ         DATA_TABLE
00001A66                          1294              
00001A66  4E75                    1295          RTS
00001A68                          1296          
00001A68                          1297  ;   Word
00001A68                          1298  J_ABS_W:
00001A68                          1299          ;SIMHALT
00001A68  43F9 00001CE3           1300          LEA         DOLLAR_MSG, A1
00001A6E  103C 000E               1301          MOVE.B      #14, D0
00001A72  4E4F                    1302          TRAP        #15
00001A74                          1303         
00001A74                          1304  
00001A74  325B                    1305          MOVE.W      (A3)+, A1
00001A76                          1306          
00001A76                          1307  
00001A76                          1308          
00001A76  4281                    1309          CLR.L       D1
00001A78  4282                    1310          CLR.L       D2
00001A7A  4287                    1311          CLR.L       D7
00001A7C  123C 0004               1312          MOVE.B      #4, D1
00001A80  4EB8 1052               1313          JSR         CONVERT_ASCII
00001A84                          1314          
00001A84  2247                    1315          MOVE.L      D7, A1
00001A86  103C 000E               1316          MOVE.B      #14, D0
00001A8A  4E4F                    1317          TRAP        #15
00001A8C                          1318  
00001A8C  4E75                    1319          RTS
00001A8E                          1320  ;   Long
00001A8E                          1321  J_ABS_L:
00001A8E                          1322          ;SIMHALT
00001A8E  43F9 00001CE3           1323          LEA         DOLLAR_MSG, A1
00001A94  103C 000E               1324          MOVE.B      #14, D0
00001A98  4E4F                    1325          TRAP        #15
00001A9A                          1326  
00001A9A  4281                    1327          CLR.L       D1
00001A9C  4282                    1328          CLR.L       D2
00001A9E  4287                    1329          CLR.L       D7
00001AA0                          1330  
00001AA0                          1331  
00001AA0                          1332          
00001AA0  241B                    1333          MOVE.L      (A3)+, D2
00001AA2                          1334          
00001AA2  4EB8 10BE               1335          JSR         FLIP_START
00001AA6                          1336  
00001AA6  4282                    1337          CLR.L       D2
00001AA8                          1338          
00001AA8                          1339  
00001AA8  123C 0008               1340          MOVE.B      #8, D1
00001AAC  4EB9 00001B30           1341          JSR         CONVERT_HEX
00001AB2                          1342  
00001AB2                          1343  
00001AB2                          1344          
00001AB2                          1345          
00001AB2  4E75                    1346          RTS
00001AB4                          1347  
00001AB4                          1348  ;   Error
00001AB4                          1349  J_ABS_ERROR:
00001AB4  4E75                    1350          RTS
00001AB6                          1351  
00001AB6                          1352  ;   Hard Coded Data
00001AB6                          1353  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00001AB6                          1354  
00001AB6                          1355  ;   Size num 0 = Byte 1 = Word 2 Long
00001AB6                          1356  
00001AB6                          1357  DATA_TABLE:
00001AB6                          1358          ;SIMHALT
00001AB6  43F9 00001CE6           1359          LEA         DATA_MSG, A1
00001ABC  103C 000E               1360          MOVE.B      #14, D0
00001AC0  4E4F                    1361          TRAP        #15
00001AC2                          1362  
00001AC2                          1363  
00001AC2  B63C 0000               1364          CMP.B       #0,D3 
00001AC6  6700 0014               1365          BEQ         DATA_B
00001ACA                          1366  
00001ACA  B63C 0001               1367          CMP.B       #1,D3 
00001ACE  6700 002A               1368          BEQ         DATA_W
00001AD2                          1369          
00001AD2  B63C 0002               1370          CMP.B       #2,D3 
00001AD6  6700 003E               1371          BEQ         DATA_L
00001ADA                          1372          
00001ADA  4E75                    1373          RTS
00001ADC                          1374  
00001ADC                          1375  DATA_B:
00001ADC  4281                    1376          CLR.L       D1
00001ADE  4282                    1377          CLR.L       D2
00001AE0  4287                    1378          CLR.L       D7
00001AE2                          1379          
00001AE2  341B                    1380          MOVE.W      (A3)+, D2
00001AE4                          1381          * Only read first byte from the word 
00001AE4                          1382          
00001AE4  4EB8 10BE               1383          JSR         FLIP_START
00001AE8  4847                    1384          SWAP        D7
00001AEA  E09F                    1385          ROR.L       #8,D7
00001AEC  4282                    1386          CLR.L       D2
00001AEE                          1387          
00001AEE                          1388  
00001AEE  123C 0002               1389          MOVE.B      #2, D1
00001AF2  4EB9 00001B30           1390          JSR         CONVERT_HEX
00001AF8                          1391  
00001AF8                          1392  
00001AF8                          1393  
00001AF8  4E75                    1394          RTS
00001AFA                          1395  
00001AFA                          1396  DATA_W:
00001AFA  4281                    1397          CLR.L       D1
00001AFC  4282                    1398          CLR.L       D2
00001AFE  4287                    1399          CLR.L       D7
00001B00                          1400          
00001B00  341B                    1401          MOVE.W      (A3)+, D2
00001B02                          1402          
00001B02  4EB8 10BE               1403          JSR         FLIP_START
00001B06                          1404  
00001B06  4847                    1405          SWAP        D7
00001B08                          1406  
00001B08  4282                    1407          CLR.L       D2
00001B0A                          1408          
00001B0A  123C 0004               1409          MOVE.B      #4, D1
00001B0E                          1410          
00001B0E                          1411          
00001B0E  4EB9 00001B30           1412          JSR         CONVERT_HEX
00001B14                          1413  
00001B14                          1414          
00001B14                          1415  
00001B14  4E75                    1416          RTS
00001B16                          1417  
00001B16                          1418  DATA_L:
00001B16                          1419          ;SIMHALT
00001B16  4281                    1420          CLR.L       D1
00001B18  4282                    1421          CLR.L       D2
00001B1A  4287                    1422          CLR.L       D7
00001B1C                          1423          
00001B1C  241B                    1424          MOVE.L      (A3)+, D2
00001B1E                          1425          
00001B1E  4EB8 10BE               1426          JSR         FLIP_START
00001B22                          1427  
00001B22  4282                    1428          CLR.L       D2
00001B24                          1429          
00001B24                          1430  
00001B24  123C 0008               1431          MOVE.B      #8, D1
00001B28  4EB9 00001B30           1432          JSR         CONVERT_HEX
00001B2E                          1433  
00001B2E                          1434          
00001B2E                          1435  
00001B2E  4E75                    1436          RTS
00001B30                          1437  
00001B30                          1438  
00001B30                          1439  CONVERT_HEX:
00001B30                          1440          ; SIMHALT    
00001B30  0C01 0000               1441          CMPI.B      #$0, D1    
00001B34  6700 0092               1442          BEQ         HEX_DONE
00001B38                          1443          
00001B38  5301                    1444          SUBI.B      #$1, D1       
00001B3A                          1445  
00001B3A  4282                    1446          CLR.L       D2
00001B3C                          1447      
00001B3C  1407                    1448          MOVE.B      D7,D2
00001B3E                          1449              
00001B3E  103C 001C               1450          MOVE.B      #28,D0    
00001B42  E1AA                    1451          LSL.L       D0,D2     
00001B44  E99A                    1452          ROL.L       #4,D2
00001B46                          1453          
00001B46  E887                    1454          ASR.L       #4, D7
00001B48                          1455          
00001B48                          1456          
00001B48  B43C 0000               1457          CMP.B       #0,D2
00001B4C  6700 007C               1458          BEQ         PRINT_ASCII0
00001B50  B43C 0001               1459          CMP.B       #1,D2
00001B54  6700 0084               1460          BEQ         PRINT_ASCII1
00001B58  B43C 0002               1461          CMP.B       #2,D2
00001B5C  6700 008C               1462          BEQ         PRINT_ASCII2
00001B60  B43C 0003               1463          CMP.B       #3,D2
00001B64  6700 0094               1464          BEQ         PRINT_ASCII3
00001B68  B43C 0004               1465          CMP.B       #4,D2
00001B6C  6700 009C               1466          BEQ         PRINT_ASCII4
00001B70  B43C 0005               1467          CMP.B       #5,D2
00001B74  6700 00A4               1468          BEQ         PRINT_ASCII5
00001B78  B43C 0006               1469          CMP.B       #6,D2
00001B7C  6700 00AC               1470          BEQ         PRINT_ASCII6
00001B80  B43C 0007               1471          CMP.B       #7,D2
00001B84  6700 00B4               1472          BEQ         PRINT_ASCII7
00001B88  B43C 0008               1473          CMP.B       #8,D2
00001B8C  6700 00BC               1474          BEQ         PRINT_ASCII8
00001B90  B43C 0009               1475          CMP.B       #9,D2
00001B94  6700 00C4               1476          BEQ         PRINT_ASCII9
00001B98  B43C 000A               1477          CMP.B       #$A,D2
00001B9C  6700 00CC               1478          BEQ         PRINT_ASCIIA
00001BA0  B43C 000B               1479          CMP.B       #$B,D2
00001BA4  6700 00D4               1480          BEQ         PRINT_ASCIIB
00001BA8  B43C 000C               1481          CMP.B       #$C,D2
00001BAC  6700 00DC               1482          BEQ         PRINT_ASCIIC
00001BB0  B43C 000D               1483          CMP.B       #$D,D2
00001BB4  6700 00E4               1484          BEQ         PRINT_ASCIID
00001BB8  B43C 000E               1485          CMP.B       #$E,D2
00001BBC  6700 00EC               1486          BEQ         PRINT_ASCIIE
00001BC0  B43C 000F               1487          CMP.B       #$F,D2
00001BC4  6700 00F4               1488          BEQ         PRINT_ASCIIF
00001BC8                          1489          
00001BC8                          1490          ; error handling here
00001BC8                          1491          
00001BC8                          1492          
00001BC8                          1493  
00001BC8                          1494  HEX_DONE:
00001BC8  4E75                    1495          RTS
00001BCA                          1496  
00001BCA                          1497  
00001BCA                          1498  
00001BCA                          1499  PRINT_ASCII0:
00001BCA  43F9 00001D44           1500          LEA         ZERO_MSG, A1
00001BD0  103C 000E               1501          MOVE.B      #14, D0    
00001BD4  4E4F                    1502          TRAP        #15
00001BD6  6000 FF58               1503          BRA         CONVERT_HEX
00001BDA                          1504  PRINT_ASCII1:
00001BDA  43F9 00001D46           1505          LEA         ONE_MSG, A1
00001BE0  103C 000E               1506          MOVE.B      #14, D0    
00001BE4  4E4F                    1507          TRAP        #15
00001BE6  6000 FF48               1508          BRA         CONVERT_HEX
00001BEA                          1509  PRINT_ASCII2:
00001BEA  43F9 00001D48           1510          LEA         TWO_MSG, A1
00001BF0  103C 000E               1511          MOVE.B      #14, D0    
00001BF4  4E4F                    1512          TRAP        #15
00001BF6  6000 FF38               1513          BRA         CONVERT_HEX
00001BFA                          1514  PRINT_ASCII3:
00001BFA  43F9 00001D4A           1515          LEA         THREE_MSG, A1
00001C00  103C 000E               1516          MOVE.B      #14, D0    
00001C04  4E4F                    1517          TRAP        #15
00001C06  6000 FF28               1518          BRA         CONVERT_HEX
00001C0A                          1519  PRINT_ASCII4:
00001C0A  43F9 00001D4C           1520          LEA         FOUR_MSG, A1
00001C10  103C 000E               1521          MOVE.B      #14, D0    
00001C14  4E4F                    1522          TRAP        #15
00001C16  6000 FF18               1523          BRA         CONVERT_HEX
00001C1A                          1524  PRINT_ASCII5:
00001C1A  43F9 00001D4E           1525          LEA         FIVE_MSG, A1
00001C20  103C 000E               1526          MOVE.B      #14, D0    
00001C24  4E4F                    1527          TRAP        #15
00001C26  6000 FF08               1528          BRA         CONVERT_HEX        
00001C2A                          1529  PRINT_ASCII6:
00001C2A  43F9 00001D50           1530          LEA         SIX_MSG, A1
00001C30  103C 000E               1531          MOVE.B      #14, D0    
00001C34  4E4F                    1532          TRAP        #15
00001C36  6000 FEF8               1533          BRA         CONVERT_HEX
00001C3A                          1534  PRINT_ASCII7:
00001C3A  43F9 00001D52           1535          LEA         SEVEN_MSG, A1
00001C40  103C 000E               1536          MOVE.B      #14, D0    
00001C44  4E4F                    1537          TRAP        #15
00001C46  6000 FEE8               1538          BRA         CONVERT_HEX
00001C4A                          1539  PRINT_ASCII8:
00001C4A  43F9 00001D54           1540          LEA         EIGHT_MSG, A1
00001C50  103C 000E               1541          MOVE.B      #14, D0    
00001C54  4E4F                    1542          TRAP        #15
00001C56  6000 FED8               1543          BRA         CONVERT_HEX
00001C5A                          1544  PRINT_ASCII9:
00001C5A  43F9 00001D56           1545          LEA         NINE_MSG, A1
00001C60  103C 000E               1546          MOVE.B      #14, D0    
00001C64  4E4F                    1547          TRAP        #15
00001C66  6000 FEC8               1548          BRA         CONVERT_HEX
00001C6A                          1549  PRINT_ASCIIA:
00001C6A  43F9 00001D58           1550          LEA         A_MSG, A1
00001C70  103C 000E               1551          MOVE.B      #14, D0    
00001C74  4E4F                    1552          TRAP        #15
00001C76  6000 FEB8               1553          BRA         CONVERT_HEX
00001C7A                          1554  PRINT_ASCIIB:
00001C7A  43F9 00001D5A           1555          LEA         B_MSG, A1
00001C80  103C 000E               1556          MOVE.B      #14, D0    
00001C84  4E4F                    1557          TRAP        #15
00001C86  6000 FEA8               1558          BRA         CONVERT_HEX
00001C8A                          1559  PRINT_ASCIIC:
00001C8A  43F9 00001D5C           1560          LEA         C_MSG, A1
00001C90  103C 000E               1561          MOVE.B      #14, D0    
00001C94  4E4F                    1562          TRAP        #15
00001C96  6000 FE98               1563          BRA         CONVERT_HEX
00001C9A                          1564  PRINT_ASCIID:
00001C9A  43F9 00001D5E           1565          LEA         D_MSG, A1
00001CA0  103C 000E               1566          MOVE.B      #14, D0    
00001CA4  4E4F                    1567          TRAP        #15
00001CA6  6000 FE88               1568          BRA         CONVERT_HEX
00001CAA                          1569  PRINT_ASCIIE:
00001CAA  43F9 00001D60           1570          LEA         E_MSG, A1
00001CB0  103C 000E               1571          MOVE.B      #14, D0    
00001CB4  4E4F                    1572          TRAP        #15
00001CB6  6000 FE78               1573          BRA         CONVERT_HEX
00001CBA                          1574  PRINT_ASCIIF:
00001CBA  43F9 00001D62           1575          LEA         F_MSG, A1
00001CC0  103C 000E               1576          MOVE.B      #14, D0    
00001CC4  4E4F                    1577          TRAP        #15
00001CC6  6000 FE68               1578          BRA         CONVERT_HEX
00001CCA                          1579  
00001CCA                          1580  
00001CCA                          1581  
00001CCA                          1582  
00001CCA                          1583  
00001CCA                          1584  
00001CCA                          1585  
00001CCA= 20 44 00                1586  MODE_0_MSG:     DC.B        ' D',0
00001CCD= 20 41 00                1587  MODE_1_MSG:     DC.B        ' A',0
00001CD0= 20 28 41 00             1588  MODE_A_MSG:     DC.B        ' (A',0
00001CD4= 29 00                   1589  MODE_A_1_MSG:   DC.B        ')',0
00001CD6= 29 2B 00                1590  MODE_A_2_MSG:   DC.B        ')+',0
00001CD9= 20 2D 28 41 00          1591  MODE_MINUS_MSG: DC.B        ' -(A',0
00001CDE                          1592  
00001CDE= 2C 00                   1593  SEPERATOR:      DC.B        ',',0
00001CE0                          1594  
00001CE0= 20 23 00                1595  POUND_MSG:      DC.B        ' #',0
00001CE3= 20 24 00                1596  DOLLAR_MSG:     DC.B        ' $',0
00001CE6= 20 23 24 00             1597  DATA_MSG:       DC.B        ' #$',0
00001CEA                          1598  
00001CEA= 54 4D 50 00             1599  TEMP_MSG:       DC.B        'TMP',0
00001CEE                          1600  
00001CEE                          1601  
00001CEE                          1602  
00001CEE                          1603  TMP_STR         DS.B        32
00001D0E                          1604  
00001D0E                          1605  
00001D0E                          1606  
00001D0E                          1607  
00001D0E                          1608  
00001D0E                          1609  
00001D0E                          1610  
00001D0E                          1611  
00001D0E                          1612  -------------------- end include --------------------
00001D0E= 45 6E 74 65 72 20 ...   1613  START_MSG:      DC.B        'Enter a starting address:',0
00001D28= 45 6E 74 65 72 20 ...   1614  END_MSG:        DC.B        'Enter an ending address:',0
00001D41                          1615                
00001D41  =0000000D               1616  CR              EQU         $0D
00001D41  =0000000A               1617  LF              EQU         $0A
00001D41                          1618  
00001D41= 20 20 00                1619  SPACE_MSG:      DC.B        '  ',0
00001D44                          1620  
00001D44= 30 00                   1621  ZERO_MSG:       DC.B        '0',0
00001D46= 31 00                   1622  ONE_MSG:        DC.B        '1',0
00001D48= 32 00                   1623  TWO_MSG:        DC.B        '2',0
00001D4A= 33 00                   1624  THREE_MSG:      DC.B        '3',0
00001D4C= 34 00                   1625  FOUR_MSG:       DC.B        '4',0
00001D4E= 35 00                   1626  FIVE_MSG:       DC.B        '5',0
00001D50= 36 00                   1627  SIX_MSG:        DC.B        '6',0
00001D52= 37 00                   1628  SEVEN_MSG:      DC.B        '7',0
00001D54= 38 00                   1629  EIGHT_MSG:      DC.B        '8',0
00001D56= 39 00                   1630  NINE_MSG:       DC.B        '9',0
00001D58= 41 00                   1631  A_MSG:          DC.B        'A',0
00001D5A= 42 00                   1632  B_MSG:          DC.B        'B',0
00001D5C= 43 00                   1633  C_MSG:          DC.B        'C',0
00001D5E= 44 00                   1634  D_MSG:          DC.B        'D',0
00001D60= 45 00                   1635  E_MSG:          DC.B        'E',0
00001D62= 46 00                   1636  F_MSG:          DC.B        'F',0
00001D64                          1637                  
00001D64= 45 72 72 6F 72 00       1638  ERROR_MSG:      DC.B        'Error',0
00001D6A= 53 75 63 63 65 73 ...   1639  SUCCESS_MSG:    DC.B        'Success',0
00001D72                          1640  
00001D72= 0D 0A 00                1641  NEW_LINE:       DC.B        '',CR,LF,0
00001D75                          1642  
00001D75                          1643    
00001D75                          1644                  
00001D75                          1645                  
00001D75                          1646  STA_ADDR        DS.B        40
00001D9D                          1647  END_ADDR        DS.B        40
00001DC5                          1648  
00001DC5                          1649  
00001DC5                          1650  
00001DC5                          1651  
00001DC5                          1652                  
00001DC5                          1653                  
00001DC5                          1654          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            18C0
ADDQ_MSG            186C
ADD_MSG             18BC
ASCII_DONE          106A
ASD_MEM             1844
ASD_REG             180E
ASL_MSG             18C5
ASR_MSG             18C9
A_MSG               1D58
BITS11TO6           1562
BITS11TO8           156E
BITS11TO9           157A
BITS2TO0            14DA
BITS3TO0            14E6
BITS4TO3            1502
BITS5TO3            14F2
BITS7TO0            1512
BITS7TO4            151A
BITS7TO6            1526
BITS8TO3            1532
BITS8TO4            153E
BITS8TO6            154A
BITS9TO7            1556
BRA_MSG             1892
BSR_MSG             1896
BYTE_MSG            18D7
B_MSG               1D5A
CMP_MSG             18AE
CONVERT_ASCII       1052
CONVERT_HEX         1B30
CR                  D
C_MSG               1D5C
DATA_B              1ADC
DATA_L              1B16
DATA_MSG            1CE6
DATA_TABLE          1AB6
DATA_W              1AFA
DISPLAY_REG         1A44
DIVS_MSG            18A5
DIVU_MSG            18A0
DOLLAR              18D3
DOLLAR_MSG          1CE3
DONE                12CA
D_MSG               1D5E
EA_LEA              196A
EA_MOVE             191E
EIGHT_MSG           1D54
END_ADDR            1D9D
END_MSG             1D28
ERROR_INSTR         18F8
ERROR_MSG           1D64
ERROR_SIZE_MSG      1908
EXT_MSG             18CD
E_MSG               1D60
FILE_LOOP           1296
FIVE_MSG            1D4E
FLIP_DONE           10EC
FLIP_LOOP           10CE
FLIP_START          10BE
FOUR_MSG            1D4C
F_MSG               1D62
HEX_DONE            1BC8
IMPLEMENT_MSG       18E0
INVALID_INSTR       14CC
JSR_MSG             188E
JUMP_0              1352
JUMP_1              1368
JUMP_2              1376
JUMP_3              138E
JUMP_4              13A6
JUMP_5              13DA
JUMP_6              13EC
JUMP_7              140A
JUMP_8              141E
JUMP_B              143C
JUMP_C              1462
JUMP_D              1480
JUMP_E              149C
JUMP_ERROR          14BE
JUMP_E_REG          14AC
JUMP_OP_CODE        12D0
J_ABS               19B4
J_ABS_ERROR         1AB4
J_ABS_L             1A8E
J_ABS_TABLE         1A4E
J_ABS_W             1A68
J_MOVEA_L           15A4
J_MOVEA_W           15EC
J_MOVE_L            15C8
J_MOVE_W            1610
J_TBL_A             19BC
J_TBL_A_DECR        1A24
J_TBL_A_INCR        1A04
J_TBL_A_P           19E4
J_TBL_D             19D0
LEA_MSG             188A
LET_ASCII           1080
LF                  A
LONG_MSG            18DD
MEM_SHIFT           1836
MODE_0_MSG          1CCA
MODE_1_MSG          1CCD
MODE_A_1_MSG        1CD4
MODE_A_2_MSG        1CD6
MODE_A_MSG          1CD0
MODE_MINUS_MSG      1CD9
MODE_TABLE          1982
MOVEA_MSG           1876
MOVEM_CHECK         16E2
MOVEM_L             16BA
MOVEM_MSG           1884
MOVEM_OR_EXT        167C
MOVEM_SIZE          1692
MOVEM_W             16A0
MOVEQ_MSG           189A
MOVE_MSG            1871
MULS_MSG            18B7
MULU_MSG            18B2
NEW_LINE            1D72
NINE_MSG            1D56
NOP_MSG             1880
NUM_ASCII           106C
ONE_MSG             1D46
OPMODE              173A
OP_CODE_ADD         17F2
OP_CODE_ADDA        1800
OP_CODE_ADDQ        16F0
OP_CODE_ASL_REG     1828
OP_CODE_ASR_MEM     185E
OP_CODE_BASE_MOVE   1586
OP_CODE_BRA         17AC
OP_CODE_BSR         17BA
OP_CODE_CMP         16FE
OP_CODE_DIVS        171A
OP_CODE_DIVU        170C
OP_CODE_EXT         16D4
OP_CODE_JSR         1650
OP_CODE_LEA         165E
OP_CODE_MOVEM       166C
OP_CODE_MOVEQ       17C8
OP_CODE_MULS        17D6
OP_CODE_MULU        17E4
OP_CODE_NOP         1642
OP_CODE_ORI         1634
OP_CODE_SUB         1728
ORI_MSG             187C
PERCENT             18D5
POUND               18D1
POUND_MSG           1CE0
PRINT_ADDRESS       1094
PRINT_ADDRESS_EXIT  1188
PRINT_ADDRESS_LOOP  10EE
PRINT_ADR0          1196
PRINT_ADR1          11A6
PRINT_ADR2          11B6
PRINT_ADR3          11C6
PRINT_ADR4          11D6
PRINT_ADR5          11E6
PRINT_ADR6          11F6
PRINT_ADR7          1206
PRINT_ADR8          1216
PRINT_ADR9          1226
PRINT_ADRA          1236
PRINT_ADRB          1246
PRINT_ADRC          1256
PRINT_ADRD          1266
PRINT_ADRE          1276
PRINT_ADRF          1286
PRINT_ASCII0        1BCA
PRINT_ASCII1        1BDA
PRINT_ASCII2        1BEA
PRINT_ASCII3        1BFA
PRINT_ASCII4        1C0A
PRINT_ASCII5        1C1A
PRINT_ASCII6        1C2A
PRINT_ASCII7        1C3A
PRINT_ASCII8        1C4A
PRINT_ASCII9        1C5A
PRINT_ASCIIA        1C6A
PRINT_ASCIIB        1C7A
PRINT_ASCIIC        1C8A
PRINT_ASCIID        1C9A
PRINT_ASCIIE        1CAA
PRINT_ASCIIF        1CBA
PRINT_BYTE          1774
PRINT_LONG          1790
PRINT_WORD          1782
SEPERATOR           1CDE
SEVEN_MSG           1D52
SIX_MSG             1D50
SPACE_MSG           1D41
START               1000
START_MSG           1D0E
STA_ADDR            1D75
SUB_MSG             18AA
SUCCESS_MSG         1D6A
TEMP_MSG            1CEA
THREE_MSG           1D4A
TMP_STR             1CEE
TWO_MSG             1D48
WORD_MSG            18DA
WRONG_SIZE          179E
ZERO_MSG            1D44
