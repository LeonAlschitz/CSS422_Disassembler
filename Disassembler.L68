00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/14/2021 6:07:05 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; A5 will be used for paging
00001000                            13  ; D0 is used to store values that will get compared
00001000                            14      
00001000                            15  START:
00001000                            16  
00001000  4EB9 00001060             17          JSR         CLEAR_ALL_REG
00001006                            18  
00001006                            19          ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001006  43F9 00001F1F             20          LEA         START_MSG, A1
0000100C  103C 000E                 21          MOVE.B      #14, D0    
00001010  4E4F                      22          TRAP        #15
00001012                            23          
00001012  43F9 00001FA9             24          LEA         STA_ADDR, A1
00001018  103C 0002                 25          MOVE.B      #2, D0
0000101C  4E4F                      26          TRAP        #15             ; D1 has the length of the address
0000101E                            27          
0000101E                            28          
0000101E  4282                      29          CLR.L       D2
00001020  4284                      30          CLR.L       D4
00001022  4287                      31          CLR.L       D7
00001024  4EB9 0000109C             32          JSR         CONVERT_ASCII
0000102A  2647                      33          MOVEA.L     D7, A3
0000102C                            34          
0000102C                            35          
0000102C                            36          
0000102C                            37          
0000102C                            38          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
0000102C                            39          
0000102C  43F9 00001F39             40          LEA         END_MSG, A1
00001032  103C 000E                 41          MOVE.B      #14, D0    
00001036  4E4F                      42          TRAP        #15
00001038                            43          
00001038  43F9 00001FD1             44          LEA         END_ADDR, A1
0000103E  103C 0002                 45          MOVE.B      #2, D0
00001042  4E4F                      46          TRAP        #15
00001044                            47          
00001044  4282                      48          CLR.L       D2
00001046  4284                      49          CLR.L       D4
00001048  4287                      50          CLR.L       D7
0000104A  4EB9 0000109C             51          JSR         CONVERT_ASCII
00001050  2847                      52          MOVEA.L     D7, A4
00001052                            53          
00001052                            54          
00001052                            55          ; add loop later that checks if data entered is valid for both messages
00001052                            56          
00001052                            57          
00001052                            58          
00001052  2A4B                      59          MOVEA.L     A3, A5
00001054  DBFC 00000020             60          ADD.L       #32, A5
0000105A                            61          
0000105A  4EB9 000012E0             62          JSR         FILE_LOOP
00001060                            63          
00001060                            64  CLEAR_ALL_REG:
00001060  4280                      65          CLR.L       D0
00001062  4281                      66          CLR.L       D1
00001064  4282                      67          CLR.L       D2
00001066  4283                      68          CLR.L       D3
00001068  4284                      69          CLR.L       D4
0000106A  4285                      70          CLR.L       D5
0000106C  4286                      71          CLR.L       D6
0000106E  4287                      72          CLR.L       D7
00001070                            73  
00001070  207C 00000000             74          MOVEA.L     #$00000000, A0
00001076  227C 00000000             75          MOVEA.L     #$00000000, A1
0000107C  247C 00000000             76          MOVEA.L     #$00000000, A2
00001082  267C 00000000             77          MOVEA.L     #$00000000, A3
00001088  287C 00000000             78          MOVEA.L     #$00000000, A4
0000108E  2A7C 00000000             79          MOVEA.L     #$00000000, A5
00001094  2C7C 00000000             80          MOVEA.L     #$00000000, A6
0000109A                            81          
0000109A                            82          
0000109A                            83  
0000109A  4E75                      84          RTS
0000109C                            85  
0000109C                            86  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
0000109C  0C01 0000                 87          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010A0  6700 0012                 88          BEQ         ASCII_DONE
000010A4                            89      
000010A4  1419                      90          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
000010A6                            91          
000010A6                            92  
000010A6                            93      
000010A6  103C 0039                 94          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
000010AA  B400                      95          CMP.B       D0, D2
000010AC                            96          
000010AC                            97  
000010AC  6F00 0008                 98          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
000010B0  6000 0018                 99          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
000010B4                           100  
000010B4                           101  ASCII_DONE:
000010B4  4E75                     102          RTS
000010B6                           103  
000010B6                           104  
000010B6                           105  NUM_ASCII:
000010B6  5301                     106          SUBI.B      #$1, D1
000010B8                           107          
000010B8  103C 0030                108          MOVE.B      #$30, D0
000010BC  9400                     109          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
000010BE  DE02                     110          ADD.B       D2, D7      ; new ASCII number stored at D7
000010C0                           111          
000010C0                           112  
000010C0  0C01 0000                113          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010C4  67EE                     114          BEQ         ASCII_DONE
000010C6                           115          
000010C6  E987                     116          ASL.L       #4, D7
000010C8                           117        
000010C8  60D2                     118          BRA         CONVERT_ASCII
000010CA                           119          
000010CA                           120          
000010CA                           121  LET_ASCII:
000010CA  5301                     122          SUBI.B      #$1, D1
000010CC                           123                 
000010CC                           124  
000010CC  103C 0037                125          MOVE.B      #$37, D0
000010D0  9400                     126          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
000010D2  DE02                     127          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
000010D4                           128                                  ; 46 is used to represent F in Hex. 46 - 37 = F
000010D4                           129          
000010D4  0C01 0000                130          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010D8  67DA                     131          BEQ         ASCII_DONE
000010DA                           132          
000010DA  E987                     133          ASL.L       #4, D7
000010DC                           134          
000010DC                           135          
000010DC  60BE                     136          BRA         CONVERT_ASCII
000010DE                           137  
000010DE                           138  PRINT_ADDRESS:
000010DE                           139          ; SIMHALT 0000 0000
000010DE  4281                     140          CLR.L       D1
000010E0  4282                     141          CLR.L       D2
000010E2  240B                     142          MOVE.L      A3, D2
000010E4                           143          
000010E4                           144          
000010E4                           145  
000010E4                           146          
000010E4  4EB9 00001108            147          JSR         FLIP_START
000010EA  2607                     148          MOVE.L      D7, D3
000010EC                           149  
000010EC  4281                     150          CLR.L       D1
000010EE  4282                     151          CLR.L       D2
000010F0  4287                     152          CLR.L       D7
000010F2                           153          
000010F2  123C 0008                154          MOVE.B      #$8, D1
000010F6  6000 0040                155          BRA         PRINT_ADDRESS_LOOP
000010FA                           156  
000010FA  43F9 00001F52            157          LEA         SPACE_MSG, A1
00001100  103C 000E                158          MOVE.B      #14, D0    
00001104  4E4F                     159          TRAP        #15
00001106                           160          
00001106  4E75                     161          RTS
00001108                           162          
00001108                           163  FLIP_START:        
00001108  4281                     164          CLR.L       D1
0000110A  4287                     165          CLR.L       D7
0000110C                           166          
0000110C  123C 0008                167          MOVE.B      #$8, D1
00001110                           168          
00001110  4EB9 00001118            169          JSR         FLIP_LOOP
00001116                           170          
00001116                           171          
00001116  4E75                     172          RTS
00001118                           173          
00001118                           174  FLIP_LOOP:
00001118                           175  
00001118                           176          ; SIMHALT
00001118                           177          
00001118  0C01 0000                178          CMPI.B      #$0, D1
0000111C  6700 0018                179          BEQ         FLIP_DONE
00001120  5301                     180          SUBI.B      #$1, D1
00001122  E987                     181          ASL.L       #4, D7
00001124                           182          
00001124  4285                     183          CLR.L       D5
00001126                           184          
00001126  1A02                     185          MOVE.B      D2, D5
00001128                           186          
00001128  103C 001C                187          MOVE.B      #28,D0    
0000112C  E1AD                     188          LSL.L       D0, D5     
0000112E  E99D                     189          ROL.L       #4, D5
00001130                           190          
00001130  DE05                     191          ADD.B       D5, D7
00001132                           192          
00001132                           193          
00001132  E882                     194          ASR.L       #4, D2
00001134                           195          
00001134  60E2                     196          BRA         FLIP_LOOP
00001136                           197  
00001136                           198  FLIP_DONE:
00001136  4E75                     199          RTS
00001138                           200  
00001138                           201  
00001138                           202          
00001138                           203  
00001138                           204  PRINT_ADDRESS_LOOP:
00001138                           205          ; SIMHALT
00001138                           206          
00001138  0C01 0000                207          CMPI.B      #$0, D1
0000113C  6700 0094                208          BEQ         PRINT_ADDRESS_EXIT
00001140                           209          
00001140                           210          
00001140  5301                     211          SUBI.B      #$1, D1
00001142                           212          
00001142  1403                     213          MOVE.B      D3, D2
00001144  103C 001C                214          MOVE.B      #28,D0    
00001148  E1AA                     215          LSL.L       D0,D2     
0000114A  E99A                     216          ROL.L       #4,D2 
0000114C                           217          
0000114C                           218          
0000114C  E883                     219          ASR.L       #4, D3
0000114E                           220          
0000114E                           221          
0000114E  B43C 0000                222          CMP.B       #0,D2
00001152  6700 008C                223          BEQ         PRINT_ADR0
00001156  B43C 0001                224          CMP.B       #1,D2
0000115A  6700 0094                225          BEQ         PRINT_ADR1
0000115E  B43C 0002                226          CMP.B       #2,D2
00001162  6700 009C                227          BEQ         PRINT_ADR2
00001166  B43C 0003                228          CMP.B       #3,D2
0000116A  6700 00A4                229          BEQ         PRINT_ADR3
0000116E  B43C 0004                230          CMP.B       #4,D2
00001172  6700 00AC                231          BEQ         PRINT_ADR4
00001176  B43C 0005                232          CMP.B       #5,D2
0000117A  6700 00B4                233          BEQ         PRINT_ADR5
0000117E  B43C 0006                234          CMP.B       #6,D2
00001182  6700 00BC                235          BEQ         PRINT_ADR6
00001186  B43C 0007                236          CMP.B       #7,D2
0000118A  6700 00C4                237          BEQ         PRINT_ADR7
0000118E  B43C 0008                238          CMP.B       #8,D2
00001192  6700 00CC                239          BEQ         PRINT_ADR8
00001196  B43C 0009                240          CMP.B       #9,D2
0000119A  6700 00D4                241          BEQ         PRINT_ADR9
0000119E  B43C 000A                242          CMP.B       #$A,D2
000011A2  6700 00DC                243          BEQ         PRINT_ADRA
000011A6  B43C 000B                244          CMP.B       #$B,D2
000011AA  6700 00E4                245          BEQ         PRINT_ADRB
000011AE  B43C 000C                246          CMP.B       #$C,D2
000011B2  6700 00EC                247          BEQ         PRINT_ADRC
000011B6  B43C 000D                248          CMP.B       #$D,D2
000011BA  6700 00F4                249          BEQ         PRINT_ADRD
000011BE  B43C 000E                250          CMP.B       #$E,D2
000011C2  6700 00FC                251          BEQ         PRINT_ADRE
000011C6  B43C 000F                252          CMP.B       #$F,D2
000011CA  6700 0104                253          BEQ         PRINT_ADRF
000011CE                           254  
000011CE                           255  
000011CE                           256  
000011CE  6000 FF68                257          BRA         PRINT_ADDRESS_LOOP
000011D2                           258          
000011D2                           259  
000011D2                           260          
000011D2                           261  
000011D2                           262  PRINT_ADDRESS_EXIT:
000011D2  43F9 00001F52            263          LEA         SPACE_MSG, A1
000011D8  103C 000E                264          MOVE.B      #14, D0    
000011DC  4E4F                     265          TRAP        #15
000011DE                           266          
000011DE  4E75                     267          RTS
000011E0                           268          
000011E0                           269  PRINT_ADR0:
000011E0  43F9 00001F55            270          LEA         ZERO_MSG, A1
000011E6  103C 000E                271          MOVE.B      #14, D0    
000011EA  4E4F                     272          TRAP        #15
000011EC  6000 FF4A                273          BRA         PRINT_ADDRESS_LOOP
000011F0                           274  PRINT_ADR1:
000011F0  43F9 00001F57            275          LEA         ONE_MSG, A1
000011F6  103C 000E                276          MOVE.B      #14, D0    
000011FA  4E4F                     277          TRAP        #15
000011FC  6000 FF3A                278          BRA         PRINT_ADDRESS_LOOP
00001200                           279  PRINT_ADR2:
00001200  43F9 00001F59            280          LEA         TWO_MSG, A1
00001206  103C 000E                281          MOVE.B      #14, D0    
0000120A  4E4F                     282          TRAP        #15
0000120C  6000 FF2A                283          BRA         PRINT_ADDRESS_LOOP
00001210                           284  PRINT_ADR3:
00001210  43F9 00001F5B            285          LEA         THREE_MSG, A1
00001216  103C 000E                286          MOVE.B      #14, D0    
0000121A  4E4F                     287          TRAP        #15
0000121C  6000 FF1A                288          BRA         PRINT_ADDRESS_LOOP
00001220                           289  PRINT_ADR4:
00001220  43F9 00001F5D            290          LEA         FOUR_MSG, A1
00001226  103C 000E                291          MOVE.B      #14, D0    
0000122A  4E4F                     292          TRAP        #15
0000122C  6000 FF0A                293          BRA         PRINT_ADDRESS_LOOP
00001230                           294  PRINT_ADR5:
00001230  43F9 00001F5F            295          LEA         FIVE_MSG, A1
00001236  103C 000E                296          MOVE.B      #14, D0    
0000123A  4E4F                     297          TRAP        #15
0000123C  6000 FEFA                298          BRA         PRINT_ADDRESS_LOOP
00001240                           299  PRINT_ADR6:
00001240  43F9 00001F61            300          LEA         SIX_MSG, A1
00001246  103C 000E                301          MOVE.B      #14, D0    
0000124A  4E4F                     302          TRAP        #15
0000124C  6000 FEEA                303          BRA         PRINT_ADDRESS_LOOP
00001250                           304  PRINT_ADR7:
00001250  43F9 00001F63            305          LEA         SEVEN_MSG, A1
00001256  103C 000E                306          MOVE.B      #14, D0    
0000125A  4E4F                     307          TRAP        #15
0000125C  6000 FEDA                308          BRA         PRINT_ADDRESS_LOOP
00001260                           309  PRINT_ADR8:
00001260  43F9 00001F65            310          LEA         EIGHT_MSG, A1
00001266  103C 000E                311          MOVE.B      #14, D0    
0000126A  4E4F                     312          TRAP        #15
0000126C  6000 FECA                313          BRA         PRINT_ADDRESS_LOOP
00001270                           314  PRINT_ADR9:
00001270  43F9 00001F67            315          LEA         NINE_MSG, A1
00001276  103C 000E                316          MOVE.B      #14, D0    
0000127A  4E4F                     317          TRAP        #15
0000127C  6000 FEBA                318          BRA         PRINT_ADDRESS_LOOP
00001280                           319  PRINT_ADRA:
00001280  43F9 00001F69            320          LEA         A_MSG, A1
00001286  103C 000E                321          MOVE.B      #14, D0    
0000128A  4E4F                     322          TRAP        #15
0000128C  6000 FEAA                323          BRA         PRINT_ADDRESS_LOOP
00001290                           324  PRINT_ADRB:
00001290  43F9 00001F6B            325          LEA         B_MSG, A1
00001296  103C 000E                326          MOVE.B      #14, D0    
0000129A  4E4F                     327          TRAP        #15
0000129C  6000 FE9A                328          BRA         PRINT_ADDRESS_LOOP
000012A0                           329  PRINT_ADRC:
000012A0  43F9 00001F6D            330          LEA         C_MSG, A1
000012A6  103C 000E                331          MOVE.B      #14, D0    
000012AA  4E4F                     332          TRAP        #15
000012AC  6000 FE8A                333          BRA         PRINT_ADDRESS_LOOP
000012B0                           334  PRINT_ADRD:
000012B0  43F9 00001F6F            335          LEA         D_MSG, A1
000012B6  103C 000E                336          MOVE.B      #14, D0    
000012BA  4E4F                     337          TRAP        #15
000012BC  6000 FE7A                338          BRA         PRINT_ADDRESS_LOOP
000012C0                           339  PRINT_ADRE:
000012C0  43F9 00001F71            340          LEA         E_MSG, A1
000012C6  103C 000E                341          MOVE.B      #14, D0    
000012CA  4E4F                     342          TRAP        #15
000012CC  6000 FE6A                343          BRA         PRINT_ADDRESS_LOOP
000012D0                           344  PRINT_ADRF:
000012D0  43F9 00001F73            345          LEA         F_MSG, A1
000012D6  103C 000E                346          MOVE.B      #14, D0    
000012DA  4E4F                     347          TRAP        #15
000012DC  6000 FE5A                348          BRA         PRINT_ADDRESS_LOOP
000012E0                           349  
000012E0                           350  
000012E0                           351  FILE_LOOP:
000012E0  4280                     352          CLR.L       D0
000012E2  4281                     353          CLR.L       D1
000012E4  4282                     354          CLR.L       D2
000012E6  4283                     355          CLR.L       D3
000012E8  4284                     356          CLR.L       D4
000012EA  4285                     357          CLR.L       D5
000012EC  4286                     358          CLR.L       D6
000012EE  4287                     359          CLR.L       D7
000012F0                           360          
000012F0                           361  
000012F0                           362  
000012F0                           363  
000012F0                           364          ;       Add branch here that will take the current address in A3
000012F0                           365          ;       Turn it into characters and print it to the screen with space
000012F0  4EB8 10DE                366          JSR         PRINT_ADDRESS
000012F4                           367          
000012F4                           368          
000012F4  381B                     369          MOVE.W      (A3)+, D4
000012F6                           370          ; SIMHALT
000012F6  4EB9 00001340            371          JSR         JUMP_OP_CODE
000012FC                           372          
000012FC  43F9 00001F83            373          LEA         NEW_LINE, A1
00001302  103C 000E                374          MOVE.B      #14, D0
00001306  4E4F                     375          TRAP        #15
00001308                           376  
00001308                           377  
00001308  B9CB                     378          CMP.L      A3, A4
0000130A                           379          ;       If our pointer is at the end or beyond, BRA to DONE
0000130A  6700 002E                380          BEQ         DONE
0000130E  6F00 002A                381          BLE         DONE
00001312                           382          
00001312                           383          ; SIMHALT
00001312  BBCB                     384          CMP.L       A3, A5
00001314  6700 0004                385          BEQ         PRINT_DELAY
00001318                           386          ; BGT         PRINT_DELAY
00001318                           387  
00001318                           388  
00001318                           389         
00001318  60C6                     390          BRA         FILE_LOOP
0000131A                           391  
0000131A                           392  
0000131A                           393  
0000131A                           394  PRINT_DELAY:
0000131A                           395          ; SIMHALT
0000131A  43F9 00001F86            396          LEA         NEXT_PAGE_MSG, A1
00001320  103C 000E                397          MOVE.B      #14, D0    
00001324  4E4F                     398          TRAP        #15
00001326                           399          
00001326                           400  
00001326  103C 0005                401          MOVE.B      #5, D0
0000132A  4E4F                     402          TRAP        #15
0000132C                           403  
0000132C  0C01 000D                404          CMPI.B      #13, D1
00001330  66E8                     405          BNE         PRINT_DELAY
00001332                           406  
00001332  DBFC 00000020            407          ADD.L       #32, A5
00001338  60A6                     408          BRA         FILE_LOOP
0000133A                           409  
0000133A                           410  
0000133A                           411  
0000133A                           412  DONE:   
0000133A  103C 0009                413          MOVE.B      #9, D0
0000133E  4E4F                     414          TRAP        #15
00001340                           415          
00001340                           416          
00001340                           417          
00001340                           418  * Put variables and constants here
00001340                           419                  INCLUDE     'Disassembler_OP_Codes.x68'
00001340                           420  
00001340                           421  
00001340                           422  
00001340                           423  ; D4 Contains Original hex code
00001340                           424  ; D3 Contains modified hex code
00001340                           425  
00001340                           426  ; D1 is used to bit shift
00001340                           427  
00001340                           428  
00001340                           429  ; D4 = XXXX YYYY YYYY YYYY
00001340                           430  JUMP_OP_CODE:
00001340                           431          ; SIMHALT
00001340  4283                     432          CLR.L       D3
00001342  2604                     433          MOVE.L      D4, D3
00001344  4281                     434          CLR.L       D1
00001346  4282                     435          CLR.L       D2
00001348  123C 000C                436          MOVE.B      #12, D1
0000134C  E26B                     437          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
0000134E                           438  
0000134E                           439  
0000134E  B63C 0000                440          CMP.B       #$0, D3
00001352  6700 006E                441          BEQ         JUMP_0 
00001356  B63C 0001                442          CMP.B       #$1, D3
0000135A  6700 007C                443          BEQ         JUMP_1 
0000135E  B63C 0002                444          CMP.B       #$2, D3
00001362  6700 0082                445          BEQ         JUMP_2
00001366  B63C 0003                446          CMP.B       #$3, D3
0000136A  6700 0092                447          BEQ         JUMP_3
0000136E  B63C 0004                448          CMP.B       #$4, D3
00001372  6700 00A2                449          BEQ         JUMP_4
00001376  B63C 0005                450          CMP.B       #$5, D3
0000137A  6700 00CE                451          BEQ         JUMP_5
0000137E  B63C 0006                452          CMP.B       #$6, D3
00001382  6700 00D8                453          BEQ         JUMP_6
00001386  B63C 0007                454          CMP.B       #$7, D3
0000138A  6700 00EE                455          BEQ         JUMP_7
0000138E  B63C 0008                456          CMP.B       #$8, D3
00001392  6700 00FA                457          BEQ         JUMP_8
00001396  B63C 0009                458          CMP.B       #$9, D3
0000139A  6700 0424                459          BEQ         OP_CODE_SUB
0000139E  B63C 000B                460          CMP.B       #11, D3
000013A2  6700 0114                461          BEQ         JUMP_B ; 
000013A6                           462          
000013A6  B63C 000C                463          CMP.B       #12, D3
000013AA  6700 0132                464          BEQ         JUMP_C ;
000013AE                           465          
000013AE  B63C 000D                466          CMP.B       #13, D3
000013B2  6700 0148                467          BEQ         JUMP_D ;
000013B6                           468          
000013B6  B63C 000E                469          CMP.B       #14, D3
000013BA  6700 015C                470          BEQ         JUMP_E ;
000013BE                           471  
000013BE  6000 015E                472          BRA         JUMP_ERROR
000013C2                           473  
000013C2                           474  
000013C2                           475  
000013C2                           476  
000013C2                           477         
000013C2                           478          
000013C2                           479  JUMP_0:
000013C2                           480          *ORI
000013C2  4282                     481          CLR.L       D2
000013C4  4EB9 000015CE            482          JSR         Bits11to8
000013CA  B43C 0000                483          CMP.B       #$0, D2  
000013CE  6700 02D4                484          BEQ         OP_CODE_ORI
000013D2                           485          
000013D2  6000 0158                486          BRA         INVALID_INSTR
000013D6  4E75                     487          RTS
000013D8                           488          
000013D8                           489  JUMP_1:
000013D8                           490  
000013D8  4EB9 000015F6            491          JSR         OP_CODE_BASE_MOVE
000013DE  4EB9 00001A3A            492          JSR         EA_MOVE 
000013E4  4E75                     493          RTS
000013E6                           494  
000013E6                           495  
000013E6                           496  JUMP_2:
000013E6                           497  
000013E6  4EB9 000015AA            498          JSR         Bits8to6
000013EC  B23C 0001                499          CMP.B       #$1, D1 
000013F0  6700 0222                500          BEQ         J_MOVEA_L 
000013F4  6600 0242                501          BNE         J_MOVE_L
000013F8                           502  
000013F8                           503  
000013F8  6000 0132                504          BRA         INVALID_INSTR
000013FC  4E75                     505          RTS
000013FE                           506          
000013FE                           507  JUMP_3:
000013FE                           508  
000013FE  4EB9 000015AA            509          JSR         Bits8to6
00001404  0C01 0001                510          CMPI.B       #$1, D1 
00001408  6700 0252                511          BEQ         J_MOVEA_W
0000140C  6600 0272                512          BNE         J_MOVE_W
00001410                           513      
00001410  6000 011A                514          BRA INVALID_INSTR
00001414                           515          
00001414  4E75                     516          RTS
00001416                           517  
00001416                           518  JUMP_4:
00001416                           519  
00001416  4282                     520          CLR.L       D2
00001418  3404                     521          MOVE.W      D4, D2
0000141A  B47C 4E71                522          CMP.W       #$4E71, D2 ;NOP 
0000141E  6700 0292                523          BEQ         OP_CODE_NOP
00001422                           524          
00001422  4EB9 000015AA            525          JSR         Bits8to6     ;
00001428  B43C 0007                526          CMP.B       #7, D2
0000142C  6700 02A6                527          BEQ         OP_CODE_LEA ;LEA
00001430                           528  
00001430  4EB9 000015DA            529          JSR         Bits11to9     ;
00001436  B43C 0007                530          CMP.B       #7, D2
0000143A  6700 0284                531          BEQ         OP_CODE_JSR ;JSR
0000143E  4EF9 00001764            532          JMP         MOVEM_CHECK ;
00001444                           533          
00001444                           534          
00001444  6000 00E6                535          BRA INVALID_INSTR
00001448                           536          
00001448  4E75                     537          RTS   
0000144A                           538  
0000144A                           539  
0000144A                           540  
0000144A                           541  
0000144A                           542  JUMP_5:
0000144A  4282                     543          CLR.L       D2
0000144C  2404                     544          MOVE.L      D4, D2
0000144E  0802 0008                545          BTST        #8,D2 
00001452  6700 031E                546          BEQ         OP_CODE_ADDQ  
00001456  6000 00D4                547          BRA         INVALID_INSTR
0000145A  4E75                     548          RTS  
0000145C                           549  JUMP_6:
0000145C  4282                     550          CLR.L       D2
0000145E  4EB9 000015CE            551          JSR     Bits11to8     ;
00001464  B43C 0000                552          CMP.B   #0, D2        ;
00001468  6700 042A                553          BEQ     OP_CODE_BRA   ; 
0000146C  B43C 0001                554          CMP.B   #1, D2        ;
00001470  6700 0430                555          BEQ     OP_CODE_BSR   ;
00001474                           556  
00001474  6000 00B6                557          BRA INVALID_INSTR
00001478                           558  
00001478  4E75                     559          RTS  
0000147A                           560  JUMP_7:
0000147A  4282                     561          CLR.L       D2
0000147C  43F9 0000199E            562          LEA         MOVEQ_MSG, A1
00001482  103C 000E                563          MOVE.B      #14, D0
00001486  4E4F                     564          TRAP        #15
00001488  6000 00A2                565          BRA         INVALID_INSTR 
0000148C  4E75                     566          RTS
0000148E                           567  
0000148E                           568  JUMP_8:
0000148E  4282                     569          CLR.L       D2
00001490  4EB9 000015AA            570          JSR         Bits8to6  ;
00001496  B43C 0003                571          CMP.B       #3, D2    ;
0000149A  6700 02FE                572          BEQ         OP_CODE_DIVU ;
0000149E  B43C 0007                573          CMP.B       #7, D2    ;
000014A2  6700 030E                574          BEQ         OP_CODE_DIVS ;
000014A6  6000 0084                575          BRA         INVALID_INSTR
000014AA  4E75                     576          RTS
000014AC                           577  
000014AC                           578  JUMP_9:
000014AC  6000 007E                579          BRA         INVALID_INSTR
000014B0  4E75                     580          RTS         
000014B2                           581  
000014B2                           582  JUMP_A:
000014B2  6000 0078                583          BRA         INVALID_INSTR
000014B6  4E75                     584          RTS 
000014B8                           585  JUMP_B:
000014B8  4282                     586          CLR.L       D2
000014BA  4EB9 000015AA            587          JSR         Bits8to6  ;
000014C0                           588      ;CHECKING OPMODE FIELD
000014C0  B43C 0000                589          CMP.B       #0, D2   ;
000014C4  6700 02BA                590          BEQ         OP_CODE_CMP ;
000014C8  B43C 0001                591          CMP.B       #1, D2    ;
000014CC  6700 02B2                592          BEQ         OP_CODE_CMP ;
000014D0  B43C 0002                593          CMP.B       #2, D2    ;
000014D4  6700 02AA                594          BEQ         OP_CODE_CMP ;
000014D8  6000 0052                595          BRA         INVALID_INSTR
000014DC  4E75                     596          RTS         
000014DE                           597  
000014DE                           598  JUMP_C:
000014DE  4282                     599          CLR.L       D2
000014E0  4EB9 000015AA            600          JSR         Bits8to6  ;
000014E6  B47C 0003                601          CMP         #3, D2    ;
000014EA  6700 03E0                602          BEQ         OP_CODE_MULU ;
000014EE  B47C 0007                603          CMP         #7, D2   ;
000014F2  6700 03CA                604          BEQ         OP_CODE_MULS ;
000014F6                           605  
000014F6  6000 0034                606          BRA         INVALID_INSTR
000014FA  4E75                     607          RTS 
000014FC                           608  
000014FC                           609  JUMP_D:
000014FC  4282                     610          CLR.L       D2
000014FE  4EB9 00001586            611          JSR         Bits7to6  ;
00001504  B43C 0003                612          CMP.B       #3, D2    ;
00001508  6700 03EE                613          BEQ         OP_CODE_ADDA
0000150C  4EF9 000018E0            614          JMP         OP_CODE_ADD
00001512  6000 0018                615          BRA         INVALID_INSTR
00001516  4E75                     616          RTS 
00001518                           617   
00001518                           618   
00001518                           619  JUMP_E:
00001518  6000 03F6                620          BRA         ASD_REG
0000151C  4E75                     621          RTS  
0000151E                           622           
0000151E                           623  JUMP_ERROR:       
0000151E  43F9 000019E4            624          LEA         ERROR_OP_MSG, A1
00001524  103C 000E                625          MOVE.B      #14, D0
00001528  4E4F                     626          TRAP        #15
0000152A                           627  
0000152A  4E75                     628          RTS
0000152C                           629  
0000152C                           630  INVALID_INSTR:
0000152C  43F9 000019F8            631          LEA         IMPLEMENT_MSG, A1
00001532  103C 000E                632          MOVE.B      #14, D0
00001536  4E4F                     633          TRAP        #15
00001538  4E75                     634          RTS
0000153A                           635  
0000153A                           636  
0000153A                           637  
0000153A                           638  Bits2to0:
0000153A  3404                     639          MOVE.W      D4, D2
0000153C  103C 000D                640          MOVE.B      #13, D0     ; Shifting 13 bits
00001540  E16A                     641          LSL.W       D0, D2      ; shorten to two bits
00001542  E06A                     642          LSR.W       D0, D2      ; isolate two bits
00001544  4E75                     643          RTS
00001546                           644      
00001546                           645  Bits3to0:
00001546  3404                     646          MOVE.W      D4, D2
00001548  103C 000C                647          MOVE.B      #12, D0     ; Shift 12 bits
0000154C  E16A                     648          LSL.W       D0, D2      ; Shorten to 4th bit
0000154E  E06A                     649          LSR.W       D0, D2      ; Isolate 4 bits
00001550  4E75                     650          RTS
00001552                           651      
00001552                           652  Bits5to3:
00001552  3404                     653          MOVE.W      D4, D2
00001554  103C 000A                654          MOVE.B      #10, D0     ; Shift 10 bits
00001558  E16A                     655          LSL.W       D0, D2      ; cut to 5th bit
0000155A  103C 000D                656          MOVE.B      #13, D0     ; Shift 13 bits
0000155E  E06A                     657          LSR.W       D0, D2      ; Isolate bits 5-3
00001560  4E75                     658          RTS
00001562                           659  Bits4to3:
00001562  3404                     660          MOVE.W      D4, D2
00001564  103C 000C                661          MOVE.B      #12, D0     ; Shift 12 bits
00001568  E16A                     662          LSL.W       D0, D2      ; cut to 5th bit
0000156A  103C 000E                663          MOVE.B      #14, D0     ; Shift 14 bits
0000156E  E06A                     664          LSR.W       D0, D2      ; Isolate bits 4-3
00001570  4E75                     665          RTS
00001572                           666          
00001572                           667  Bits7to0:
00001572  3404                     668          MOVE.W      D4, D2
00001574  E14A                     669          LSL.W       #8, D2      ; cut to 8th bit
00001576  E04A                     670          LSR.W       #8, D2      ; Isolate 7-0
00001578  4E75                     671          RTS
0000157A                           672  Bits7to4: 
0000157A  3404                     673          MOVE.W      D4, D2
0000157C  E14A                     674          LSL.W       #8, D2      ; cut to 8th bit
0000157E  103C 000C                675          MOVE.B      #12, D0     ; shift 12 bits
00001582  E06A                     676          LSR.W       D0, D2      ; isolate 7-4
00001584  4E75                     677          RTS
00001586                           678      
00001586                           679  Bits7to6:
00001586  3404                     680          MOVE.W      D4, D2
00001588  E14A                     681          LSL.W       #8, D2      ; cut to 8th bit
0000158A  103C 000E                682          MOVE.B      #14, D0     ; shift 14 bits
0000158E  E06A                     683          LSR.W       D0, D2      ; isolate 7-6
00001590  4E75                     684          RTS
00001592                           685      
00001592                           686  Bits8to3:
00001592  3404                     687          MOVE.W      D4, D2
00001594  EF4A                     688          LSL.W       #7, D2      ; cut to 9th bit
00001596  103C 000A                689          MOVE.B      #10, D0     ; shift 10 bits
0000159A  E06A                     690          LSR.W       D0, D2      ; isolate 8-3
0000159C  4E75                     691          RTS
0000159E                           692      
0000159E                           693  Bits8to4:
0000159E  3404                     694          MOVE.W      D4, D2
000015A0  EF4A                     695          LSL.W       #7, D2      ; cut to 9th bit
000015A2  103C 000B                696          MOVE.B      #11, D0     ; shift 11 bits
000015A6  E06A                     697          LSR.W       D0, D2      ; isolate 8-4
000015A8  4E75                     698          RTS
000015AA                           699      
000015AA                           700  Bits8to6:
000015AA  3404                     701          MOVE.W      D4, D2
000015AC  EF4A                     702          LSL.W       #7, D2      ; cut to 9th bit
000015AE  103C 000D                703          MOVE.B      #13, D0     ; shift 13 bits
000015B2  E06A                     704          LSR.W       D0, D2      ; isolate 8-6
000015B4  4E75                     705          RTS
000015B6                           706  Bits9to7:
000015B6  3404                     707          MOVE.W      D4, D2
000015B8  ED4A                     708          LSL.W       #6, D2      ; cut to 10th bit
000015BA  103C 000D                709          MOVE.B      #13, D0     ; shift 13 bits
000015BE  E06A                     710          LSR.W       D0, D2      ; isolate 8-6
000015C0  4E75                     711          RTS
000015C2                           712  Bits11to6:
000015C2  3404                     713          MOVE.W      D4, D2
000015C4  E94A                     714          LSL.W       #4, D2      ; cut to 12th bit
000015C6  103C 000A                715          MOVE.B      #10, D0     ; shift 10 bits
000015CA  E06A                     716          LSR.W       D0, D2      ; isolate 11-6
000015CC  4E75                     717          RTS
000015CE                           718  
000015CE                           719       
000015CE                           720  Bits11to8:
000015CE  3404                     721          MOVE.W      D4, D2
000015D0  E94A                     722          LSL.W       #4, D2      ; cut to 12th bit
000015D2  103C 000C                723          MOVE.B      #12, D0     ; shift 12 bits
000015D6  E06A                     724          LSR.W       D0, D2      ; isolate 11-8
000015D8  4E75                     725          RTS
000015DA                           726  
000015DA                           727  Bits11to9:
000015DA  3404                     728          MOVE.W      D4, D2
000015DC  E94A                     729          LSL.W       #4, D2      ; cut to 12th bit
000015DE  103C 000D                730          MOVE.B      #13, D0     ; shift 13 bits
000015E2  E06A                     731          LSR.W       D0, D2      ; isolate 11-9
000015E4  4E75                     732          RTS
000015E6                           733  
000015E6                           734  Bit5:
000015E6  3404                     735          MOVE.W      D4, D2
000015E8  103C 000A                736          MOVE.B      #10, D0
000015EC  E16A                     737          LSL.W       D0, D2     
000015EE  103C 000F                738          MOVE.B      #15, D0     
000015F2  E06A                     739          LSR.W       D0, D2     
000015F4  4E75                     740          RTS
000015F6                           741  
000015F6                           742  
000015F6                           743  
000015F6                           744  OP_CODE_BASE_MOVE:
000015F6                           745          ; This should only execute for Move.B
000015F6  43F9 00001973            746          LEA         MOVE_MSG, A1
000015FC  103C 000E                747          MOVE.B      #14, D0
00001600  4E4F                     748          TRAP        #15
00001602  43F9 000019DB            749          LEA         BYTE_MSG, A1
00001608  103C 000E                750          MOVE.B      #14, D0
0000160C  4E4F                     751          TRAP        #15
0000160E                           752          
0000160E  163C 0000                753          MOVE.B      #0, D3
00001612                           754          
00001612                           755          
00001612                           756          
00001612  4E75                     757          RTS         
00001614                           758  
00001614                           759  J_MOVEA_L:
00001614  43F9 00001978            760          LEA         MOVEA_MSG, A1
0000161A  103C 000E                761          MOVE.B      #14, D0
0000161E  4E4F                     762          TRAP        #15
00001620  43F9 000019E1            763          LEA         LONG_MSG, A1
00001626  103C 000E                764          MOVE.B      #14, D0
0000162A  4E4F                     765          TRAP        #15
0000162C                           766          
0000162C  163C 0002                767          MOVE.B      #2, D3
00001630  4EB9 00001A3A            768          JSR         EA_MOVE
00001636  4E75                     769          RTS    
00001638                           770  J_MOVE_L:
00001638  43F9 00001973            771          LEA         MOVE_MSG, A1
0000163E  103C 000E                772          MOVE.B      #14, D0
00001642  4E4F                     773          TRAP        #15
00001644  43F9 000019E1            774          LEA         LONG_MSG, A1
0000164A  103C 000E                775          MOVE.B      #14, D0
0000164E  4E4F                     776          TRAP        #15
00001650                           777          
00001650  163C 0002                778          MOVE.B      #2, D3
00001654  4EB9 00001A3A            779          JSR         EA_MOVE
0000165A                           780          
0000165A  4E75                     781          RTS
0000165C                           782  
0000165C                           783  
0000165C                           784  
0000165C                           785  J_MOVEA_W:
0000165C  43F9 00001978            786          LEA         MOVEA_MSG, A1
00001662  103C 000E                787          MOVE.B      #14, D0
00001666  4E4F                     788          TRAP        #15
00001668  43F9 000019DE            789          LEA         WORD_MSG, A1
0000166E  103C 000E                790          MOVE.B      #14, D0
00001672  4E4F                     791          TRAP        #15
00001674                           792          
00001674  163C 0001                793          MOVE.B      #1, D3
00001678  4EB9 00001A3A            794          JSR         EA_MOVE
0000167E                           795          
0000167E  4E75                     796          RTS  
00001680                           797      
00001680                           798  J_MOVE_W:
00001680  43F9 00001973            799          LEA         MOVE_MSG, A1
00001686  103C 000E                800          MOVE.B      #14, D0
0000168A  4E4F                     801          TRAP        #15
0000168C  43F9 000019DE            802          LEA         WORD_MSG, A1
00001692  103C 000E                803          MOVE.B      #14, D0
00001696  4E4F                     804          TRAP        #15
00001698                           805          
00001698  163C 0001                806          MOVE.B      #1, D3
0000169C  4EB9 00001A3A            807          JSR         EA_MOVE
000016A2                           808          
000016A2  4E75                     809          RTS  
000016A4                           810  
000016A4                           811  OP_CODE_ORI:
000016A4  43F9 0000197E            812          LEA         ORI_MSG, A1
000016AA  103C 000E                813          MOVE.B      #14, D0
000016AE  4E4F                     814          TRAP        #15
000016B0                           815  
000016B0  4E75                     816          RTS
000016B2                           817  
000016B2                           818  
000016B2                           819  OP_CODE_NOP:
000016B2  43F9 00001982            820          LEA         NOP_MSG, A1
000016B8  103C 000E                821          MOVE.B      #14, D0
000016BC  4E4F                     822          TRAP        #15
000016BE                           823  
000016BE  4E75                     824          RTS
000016C0                           825             
000016C0                           826  
000016C0                           827  OP_CODE_JSR:
000016C0  43F9 00001990            828          LEA         JSR_MSG, A1
000016C6  103C 000E                829          MOVE.B      #14, D0
000016CA  4E4F                     830          TRAP        #15
000016CC                           831          
000016CC  4EB9 00001A74            832          JSR         EA_GENERIC
000016D2                           833  
000016D2  4E75                     834          RTS
000016D4                           835          
000016D4                           836  OP_CODE_LEA:
000016D4  43F9 0000198C            837          LEA         LEA_MSG, A1
000016DA  103C 000E                838          MOVE.B      #14, D0
000016DE  4E4F                     839          TRAP        #15
000016E0                           840          
000016E0  4283                     841          CLR.L       D3
000016E2  163C 0002                842          MOVE.B      #2, D3
000016E6                           843  
000016E6                           844          *EA
000016E6  4EB9 00001AE2            845          JSR         EA_ASRC
000016EC                           846  
000016EC  4E75                     847          RTS
000016EE                           848  
000016EE                           849  OP_CODE_MOVEM:
000016EE  4EB8 15B6                850          JSR         Bits9to7 ;check for MOVEM and EXT
000016F2  B43C 0001                851          CMP.B       #1, D2   ;
000016F6  6700 0006                852          BEQ         MOVEM_OR_EXT
000016FA  4EF8 152C                853          JMP         INVALID_INSTR 
000016FE                           854          
000016FE                           855  MOVEM_OR_EXT:
000016FE  4EB8 1552                856          JSR         Bits5to3  ;
00001702  B43C 0000                857          CMP.B       #0, D2    ;
00001706  6700 004E                858          BEQ         OP_CODE_EXT ;
0000170A                           859          
0000170A  3404                     860          MOVE.W      D4, D2
0000170C  0802 000A                861          BTST        #10, D2
00001710  6700 0002                862          BEQ         MOVEM_SIZE
00001714                           863          
00001714                           864  MOVEM_SIZE:
00001714  0802 0006                865          BTST        #6, D2
00001718  6700 0008                866          BEQ         MOVEM_W
0000171C  4EF9 0000173C            867          JMP         MOVEM_L
00001722                           868          
00001722                           869  MOVEM_W:
00001722  43F9 00001986            870          LEA         MOVEM_MSG, A1
00001728  103C 000E                871          MOVE.B      #14, D0
0000172C  4E4F                     872          TRAP        #15
0000172E  43F9 000019DE            873          LEA         WORD_MSG, A1
00001734  103C 000E                874          MOVE.B      #14, D0
00001738  4E4F                     875          TRAP        #15  
0000173A                           876          *EA
0000173A  4E75                     877          RTS
0000173C                           878          
0000173C                           879  MOVEM_L:
0000173C  43F9 00001986            880          LEA         MOVEM_MSG, A1
00001742  103C 000E                881          MOVE.B      #14, D0
00001746  4E4F                     882          TRAP        #15
00001748  43F9 000019E1            883          LEA         LONG_MSG, A1
0000174E  103C 000E                884          MOVE.B      #14, D0
00001752  4E4F                     885          TRAP        #15   
00001754                           886          *EA
00001754  4E75                     887          RTS   
00001756                           888           
00001756                           889  OP_CODE_EXT:
00001756  43F9 000019D1            890          LEA         EXT_MSG, A1
0000175C  103C 000E                891          MOVE.B      #14, D0
00001760  4E4F                     892          TRAP        #15
00001762  4E75                     893          RTS
00001764                           894  
00001764                           895  
00001764                           896  MOVEM_CHECK:
00001764  4282                     897          CLR.L       D2
00001766  2404                     898          MOVE.L      D4, D2
00001768  0802 000B                899          BTST        #11,D2 ;
0000176C  6680                     900          BNE         OP_CODE_MOVEM
0000176E  4EF8 152C                901          JMP         INVALID_INSTR               
00001772                           902  
00001772                           903  
00001772                           904  OP_CODE_ADDQ:
00001772  43F9 0000196E            905          LEA         ADDQ_MSG, A1
00001778  103C 000E                906          MOVE.B      #14, D0
0000177C  4E4F                     907          TRAP        #15
0000177E                           908          
0000177E  4E75                     909          RTS
00001780                           910          
00001780                           911   
00001780                           912  OP_CODE_CMP:
00001780                           913  
00001780  43F9 000019B2            914          LEA         CMP_MSG, A1
00001786  103C 000E                915          MOVE.B      #14, D0
0000178A  4E4F                     916          TRAP        #15
0000178C                           917          
0000178C  4EB9 000017DA            918          JSR         OPMODE
00001792  4EB9 00001AA0            919          JSR         REVERSESRC_EA
00001798                           920          
00001798  4E75                     921          RTS
0000179A                           922          
0000179A                           923  OP_CODE_DIVU:
0000179A  43F9 000019A4            924          LEA         DIVU_MSG, A1
000017A0  103C 000E                925          MOVE.B      #14, D0
000017A4  4E4F                     926          TRAP        #15
000017A6                           927          
000017A6  163C 0001                928          MOVE.B      #1, D3        
000017AA  4EB9 00001B04            929          JSR         EA_DSRC
000017B0                           930          
000017B0  4E75                     931          RTS
000017B2                           932          
000017B2                           933  OP_CODE_DIVS:
000017B2  43F9 000019A9            934          LEA         DIVS_MSG, A1
000017B8  103C 000E                935          MOVE.B      #14, D0
000017BC  4E4F                     936          TRAP        #15
000017BE  4E75                     937          RTS
000017C0                           938  
000017C0                           939  OP_CODE_SUB:
000017C0  43F9 000019AE            940          LEA         SUB_MSG, A1
000017C6  103C 000E                941          MOVE.B      #14, D0
000017CA  4E4F                     942          TRAP        #15
000017CC                           943          
000017CC  4EB9 000017DA            944          JSR         OPMODE
000017D2                           945          
000017D2  4EB9 00001AA0            946          JSR         REVERSESRC_EA
000017D8                           947          
000017D8  4E75                     948          RTS
000017DA                           949          
000017DA                           950  OPMODE:
000017DA  4EB8 15AA                951          JSR         Bits8to6
000017DE  B43C 0000                952          CMP.B       #0, D2
000017E2  6700 006C                953          BEQ         PRINT_BYTE
000017E6  B43C 0004                954          CMP.B       #4, D2
000017EA  6700 0064                955          BEQ         PRINT_BYTE
000017EE                           956          
000017EE  B43C 0001                957          CMP.B       #1, D2
000017F2  6700 006E                958          BEQ         PRINT_WORD
000017F6  B43C 0005                959          CMP.B       #5, D2
000017FA  6700 0066                960          BEQ         PRINT_WORD
000017FE                           961          
000017FE  B43C 0002                962          CMP.B       #2, D2
00001802  6700 0070                963          BEQ         PRINT_LONG
00001806  B43C 0006                964          CMP.B       #6, D2
0000180A  6700 0068                965          BEQ         PRINT_LONG
0000180E                           966          
0000180E  4EB9 00001886            967          JSR         WRONG_SIZE
00001814                           968          
00001814                           969  OPMODE_ADDA:
00001814  4EB8 15AA                970          JSR         Bits8to6
00001818  B43C 0003                971          CMP.B       #3, D2
0000181C  6700 0044                972          BEQ         PRINT_WORD 
00001820  B43C 0007                973          CMP.B       #7, D2
00001824  6700 004E                974          BEQ         PRINT_LONG
00001828  4EB9 00001886            975          JSR         WRONG_SIZE        
0000182E                           976  
0000182E                           977  OPMODE_ASHIFT:
0000182E  4EB8 1586                978          JSR         Bits7to6
00001832  B43C 0000                979          CMP.B       #0, D2
00001836  6700 0018                980          BEQ         PRINT_BYTE
0000183A  B43C 0001                981          CMP.B       #1, D2
0000183E  6700 0022                982          BEQ         PRINT_WORD
00001842  B43C 0002                983          CMP.B       #2, D2
00001846  6700 002C                984          BEQ         PRINT_LONG
0000184A                           985  
0000184A  4EB9 00001886            986          JSR         WRONG_SIZE
00001850                           987          
00001850                           988  PRINT_BYTE:
00001850  43F9 000019DB            989          LEA         BYTE_MSG, A1
00001856  103C 000E                990          MOVE.B      #14, D0
0000185A  4E4F                     991          TRAP        #15
0000185C                           992          
0000185C  163C 0000                993          MOVE.B      #0, D3
00001860  4E75                     994          RTS
00001862                           995  
00001862                           996  PRINT_WORD:
00001862  43F9 000019DE            997          LEA         WORD_MSG, A1
00001868  103C 000E                998          MOVE.B      #14, D0
0000186C  4E4F                     999          TRAP        #15
0000186E  163C 0001               1000          MOVE.B      #1, D3
00001872  4E75                    1001          RTS
00001874                          1002  
00001874                          1003  PRINT_LONG:
00001874  43F9 000019E1           1004          LEA         LONG_MSG, A1
0000187A  103C 000E               1005          MOVE.B      #14, D0
0000187E  4E4F                    1006          TRAP        #15
00001880  163C 0002               1007          MOVE.B      #2, D3
00001884  4E75                    1008          RTS
00001886                          1009  
00001886                          1010  WRONG_SIZE:
00001886  43F9 00001A24           1011          LEA         ERROR_SIZE_MSG, A1
0000188C  103C 000E               1012          MOVE.B      #14, D0
00001890  4E4F                    1013          TRAP        #15
00001892  4E75                    1014          RTS
00001894                          1015          
00001894                          1016  OP_CODE_BRA:
00001894  43F9 00001994           1017          LEA         BRA_MSG, A1
0000189A  103C 000E               1018          MOVE.B      #14, D0
0000189E  4E4F                    1019          TRAP        #15
000018A0                          1020          
000018A0  4E75                    1021          RTS
000018A2                          1022  
000018A2                          1023  OP_CODE_BSR:
000018A2  43F9 0000199A           1024          LEA         BSR_MSG, A1
000018A8  103C 000E               1025          MOVE.B      #14, D0
000018AC  4E4F                    1026          TRAP        #15
000018AE  4E75                    1027          RTS
000018B0                          1028          
000018B0                          1029  OP_CODE_MOVEQ:
000018B0  43F9 0000199E           1030          LEA         MOVEQ_MSG, A1
000018B6  103C 000E               1031          MOVE.B      #14, D0
000018BA  4E4F                    1032          TRAP        #15
000018BC  4E75                    1033          RTS
000018BE                          1034  
000018BE                          1035  OP_CODE_MULS:
000018BE  43F9 000019BB           1036          LEA         MULS_MSG, A1
000018C4  103C 000E               1037          MOVE.B      #14, D0
000018C8  4E4F                    1038          TRAP        #15
000018CA  4E75                    1039          RTS
000018CC                          1040          
000018CC                          1041  OP_CODE_MULU:
000018CC  43F9 000019B6           1042          LEA         MULU_MSG, A1
000018D2  103C 000E               1043          MOVE.B      #14, D0
000018D6  4E4F                    1044          TRAP        #15
000018D8                          1045          
000018D8  4EB9 00001AA0           1046          JSR         REVERSESRC_EA
000018DE  4E75                    1047          RTS
000018E0                          1048  
000018E0                          1049  OP_CODE_ADD:
000018E0  43F9 000019C0           1050          LEA         ADD_MSG, A1
000018E6  103C 000E               1051          MOVE.B      #14, D0
000018EA  4E4F                    1052          TRAP        #15
000018EC                          1053          
000018EC  4EB8 17DA               1054          JSR         OPMODE
000018F0  4EB9 00001ABE           1055          JSR         EA_ADD
000018F6                          1056          
000018F6  4E75                    1057          RTS
000018F8                          1058          
000018F8                          1059  OP_CODE_ADDA:
000018F8  43F9 000019C4           1060          LEA         ADDA_MSG, A1
000018FE  103C 000E               1061          MOVE.B      #14, D0
00001902  4E4F                    1062          TRAP        #15
00001904                          1063          
00001904  4EB8 1814               1064          JSR         OPMODE_ADDA
00001908  4EB9 00001AE2           1065          JSR         EA_ASRC
0000190E                          1066          
0000190E  4E75                    1067          RTS
00001910                          1068          
00001910                          1069        
00001910                          1070  ASD_REG:
00001910  4282                    1071          CLR.L       D2
00001912  3404                    1072          MOVE.W      D4, D2
00001914  0802 0008               1073          BTST        #8, D2
00001918  6600 0010               1074          BNE         OP_CODE_ASL_REG
0000191C  43F9 000019CD           1075          LEA         ASR_MSG, A1
00001922  103C 000E               1076          MOVE.B      #14, D0
00001926  4E4F                    1077          TRAP        #15
00001928  4E75                    1078          RTS
0000192A                          1079          *EA
0000192A                          1080          
0000192A                          1081  OP_CODE_ASL_REG:
0000192A  43F9 000019C9           1082          LEA         ASL_MSG, A1
00001930  103C 000E               1083          MOVE.B      #14, D0
00001934  4E4F                    1084          TRAP        #15
00001936  4E75                    1085          RTS
00001938                          1086          *EA
00001938                          1087          
00001938                          1088          
00001938                          1089  
00001938                          1090  MEM_SHIFT:
00001938  4282                    1091          CLR.L       D2
0000193A  4EB8 1562               1092          JSR         Bits4to3
0000193E  B43C 0000               1093          CMP.B       #0, D2
00001942  6700 0002               1094          BEQ         ASD_MEM
00001946                          1095  
00001946                          1096  ASD_MEM:
00001946  4282                    1097          CLR.L       D2
00001948  3404                    1098          MOVE.W      D4, D2
0000194A  0802 0008               1099          BTST        #8, D2
0000194E  6700 0010               1100          BEQ         OP_CODE_ASR_MEM
00001952  43F9 000019C9           1101          LEA         ASL_MSG, A1
00001958  103C 000E               1102          MOVE.B      #14, D0
0000195C  4E4F                    1103          TRAP        #15
0000195E  4E75                    1104          RTS
00001960                          1105          *EA
00001960                          1106        
00001960                          1107  OP_CODE_ASR_MEM:
00001960  43F9 000019CD           1108          LEA         ASR_MSG, A1
00001966  103C 000E               1109          MOVE.B      #14, D0
0000196A  4E4F                    1110          TRAP        #15
0000196C                          1111          *EA
0000196C  4E75                    1112          RTS
0000196E                          1113          
0000196E                          1114          
0000196E                          1115  
0000196E                          1116  
0000196E                          1117  
0000196E                          1118  
0000196E= 41 44 44 51 00          1119  ADDQ_MSG:       DC.B        'ADDQ',0
00001973= 4D 4F 56 45 00          1120  MOVE_MSG:       DC.B        'MOVE',0
00001978= 4D 4F 56 45 41 00       1121  MOVEA_MSG:      DC.B        'MOVEA',0
0000197E= 4F 52 49 00             1122  ORI_MSG:        DC.B        'ORI',0
00001982= 4E 4F 50 00             1123  NOP_MSG:        DC.B        'NOP',0
00001986= 4D 4F 56 45 4D 00       1124  MOVEM_MSG:      DC.B        'MOVEM',0
0000198C= 4C 45 41 00             1125  LEA_MSG:        DC.B        'LEA',0
00001990= 4A 53 52 00             1126  JSR_MSG:        DC.B        'JSR',0
00001994= 42 52 41 20 20 00       1127  BRA_MSG:        DC.B        'BRA  ',0
0000199A= 42 53 52 00             1128  BSR_MSG:        DC.B        'BSR',0
0000199E= 4D 4F 56 45 51 00       1129  MOVEQ_MSG:      DC.B        'MOVEQ',0
000019A4= 44 49 56 55 00          1130  DIVU_MSG:       DC.B        'DIVU',0
000019A9= 44 49 56 53 00          1131  DIVS_MSG:       DC.B        'DIVS',0
000019AE= 53 55 42 00             1132  SUB_MSG:        DC.B        'SUB',0
000019B2= 43 4D 50 00             1133  CMP_MSG:        DC.B        'CMP',0
000019B6= 4D 55 4C 55 00          1134  MULU_MSG:       DC.B        'MULU',0
000019BB= 4D 55 4C 53 00          1135  MULS_MSG:       DC.B        'MULS',0
000019C0= 41 44 44 00             1136  ADD_MSG:        DC.B        'ADD',0
000019C4= 41 44 44 41 00          1137  ADDA_MSG:       DC.B        'ADDA',0
000019C9= 41 53 4C 00             1138  ASL_MSG:        DC.B        'ASL',0
000019CD= 41 53 52 00             1139  ASR_MSG:        DC.B        'ASR',0
000019D1= 45 58 54 00             1140  EXT_MSG:        DC.B        'EXT',0
000019D5= 23 00                   1141  POUND:          DC.B        '#',0
000019D7= 24 00                   1142  DOLLAR:         DC.B        '$',0
000019D9= 25 00                   1143  PERCENT:        DC.B        '%',0
000019DB                          1144  
000019DB                          1145  ; Size messages
000019DB                          1146  
000019DB= 2E 42 00                1147  BYTE_MSG:       DC.B        '.B',0
000019DE= 2E 57 00                1148  WORD_MSG:       DC.B        '.W',0
000019E1= 2E 4C 00                1149  LONG_MSG:       DC.B        '.L',0
000019E4= 4E 6F 74 20 41 20 ...   1150  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
000019F8= 4F 50 20 63 6F 64 ...   1151  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001A14= 49 4E 56 41 4C 49 ...   1152  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001A24= 49 4E 56 41 4C 49 ...   1153  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
00001A3A                          1154  
00001A3A                          1155  
00001A3A                          1156  
00001A3A                          1157  
00001A3A                          1158  
00001A3A                          1159  
00001A3A                          1160  
00001A3A                          1161  
00001A3A                          1162  
00001A3A                          1163  
00001A3A                          1164  
00001A3A                          1165  
00001A3A                          1166  
00001A3A                          1167  
00001A3A                          1168  
00001A3A                          1169  
00001A3A                          1170  
00001A3A                          1171  
00001A3A                          1172  
00001A3A                          1173  
00001A3A                          1174  
00001A3A                          1175  
00001A3A                          1176  
00001A3A                          1177  -------------------- end include --------------------
00001A3A                          1178                
00001A3A                          1179                  INCLUDE     'Disassembler_EA_Codes.x68'
00001A3A                          1180  
00001A3A                          1181  
00001A3A                          1182  ; D3 = OP size. ie. Byte, Word, Long
00001A3A                          1183  ; D4 = Original hex code
00001A3A                          1184  ; D5 = Current Mode being isolated
00001A3A                          1185  ; D6 = Current Register being isolated
00001A3A                          1186  
00001A3A                          1187  ; A3 will store starting address
00001A3A                          1188  ; A4 will store ending address
00001A3A                          1189  
00001A3A                          1190  
00001A3A                          1191  
00001A3A                          1192  ; based on the size of the move operation Print out an amount of data as is.
00001A3A                          1193  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001A3A                          1194  EA_MOVE:
00001A3A  4285                    1195          CLR.L       D5
00001A3C  4286                    1196          CLR.L       D6
00001A3E                          1197  
00001A3E  4EB8 1552               1198          JSR         Bits5to3
00001A42  1A02                    1199          MOVE.B      D2, D5
00001A44  4EB8 1546               1200          JSR         Bits3to0
00001A48  1C02                    1201          MOVE.B      D2, D6
00001A4A  4EB9 00001B80           1202          JSR         MODE_TABLE
00001A50                          1203          
00001A50  43F9 00001EE8           1204          LEA         SEPERATOR, A1
00001A56  103C 000E               1205          MOVE.B      #14, D0
00001A5A  4E4F                    1206          TRAP        #15
00001A5C                          1207          
00001A5C  4285                    1208          CLR.L       D5
00001A5E  4286                    1209          CLR.L       D6
00001A60                          1210  
00001A60  4EB8 15AA               1211          JSR         Bits8to6
00001A64  1A02                    1212          MOVE.B      D2, D5
00001A66  4EB8 15DA               1213          JSR         Bits11to9
00001A6A  1C02                    1214          MOVE.B      D2, D6
00001A6C  4EB9 00001B80           1215          JSR         MODE_TABLE
00001A72                          1216          
00001A72  4E75                    1217          RTS
00001A74                          1218          
00001A74                          1219  EA_GENERIC:
00001A74                          1220      
00001A74  4EB8 1552               1221          JSR         Bits5to3
00001A78  1A02                    1222          MOVE.B      D2, D5
00001A7A  4EB8 1546               1223          JSR         Bits3to0
00001A7E  1C02                    1224          MOVE.B      D2, D6
00001A80  4EB9 00001B80           1225          JSR         MODE_TABLE
00001A86                          1226  
00001A86  4E75                    1227          RTS
00001A88                          1228          
00001A88                          1229          ; #data, ea
00001A88                          1230  DATASRC_EA:
00001A88                          1231          
00001A88  4EB9 00001C4C           1232          JSR         J_ABS_TABLE
00001A8E                          1233          
00001A8E                          1234          ; Print Out ", "
00001A8E  43F9 00001EE8           1235          LEA         SEPERATOR, A1
00001A94  103C 000E               1236          MOVE.B      #14, D0
00001A98  4E4F                    1237          TRAP        #15
00001A9A                          1238          
00001A9A  4EB8 1A74               1239          JSR         EA_GENERIC
00001A9E                          1240          
00001A9E  4E75                    1241          RTS
00001AA0                          1242          
00001AA0                          1243          
00001AA0                          1244  REVERSESRC_EA:
00001AA0                          1245      
00001AA0  4EB8 1A74               1246          JSR         EA_GENERIC
00001AA4  43F9 00001EE8           1247          LEA         SEPERATOR, A1
00001AAA  103C 000E               1248          MOVE.B      #14, D0
00001AAE  4E4F                    1249          TRAP        #15
00001AB0                          1250          
00001AB0  4EB8 15DA               1251          JSR         Bits11to9
00001AB4  1C02                    1252          MOVE.B      D2, D6
00001AB6  4EB9 00001B80           1253          JSR         MODE_TABLE
00001ABC  4E75                    1254          RTS        
00001ABE                          1255  EA_ADD:
00001ABE  4EB8 1A74               1256          JSR         EA_GENERIC
00001AC2  43F9 00001EE8           1257          LEA         SEPERATOR, A1
00001AC8  103C 000E               1258          MOVE.B      #14, D0
00001ACC  4E4F                    1259          TRAP        #15
00001ACE                          1260  
00001ACE  4EB8 15DA               1261          JSR         Bits11to9
00001AD2  1C02                    1262          MOVE.B      D2, D6
00001AD4  4EB8 15AA               1263          JSR         Bits8to6
00001AD8  1A02                    1264          MOVE.B      D2, D5
00001ADA                          1265          
00001ADA  4EB9 00001B80           1266          JSR         MODE_TABLE
00001AE0  4E75                    1267          RTS  
00001AE2                          1268          
00001AE2                          1269          
00001AE2                          1270          
00001AE2                          1271          ; ea, A source
00001AE2                          1272  EA_ASRC:
00001AE2  4EB8 1A74               1273          JSR         EA_GENERIC
00001AE6                          1274          
00001AE6                          1275          ; Print Out ", "
00001AE6  43F9 00001EE8           1276          LEA         SEPERATOR, A1
00001AEC  103C 000E               1277          MOVE.B      #14, D0
00001AF0  4E4F                    1278          TRAP        #15
00001AF2                          1279  
00001AF2  1A3C 0001               1280          MOVE.B      #1, D5
00001AF6  4EB8 15DA               1281          JSR         Bits11to9
00001AFA  1C02                    1282          MOVE.B      D2, D6
00001AFC                          1283          
00001AFC  4EB9 00001B80           1284          JSR         MODE_TABLE
00001B02                          1285  
00001B02  4E75                    1286          RTS
00001B04                          1287          ; ea, D source
00001B04                          1288  EA_DSRC:
00001B04  4EB8 1A74               1289          JSR         EA_GENERIC
00001B08                          1290          
00001B08                          1291          ; Print Out ", "
00001B08  43F9 00001EE8           1292          LEA         SEPERATOR, A1
00001B0E  103C 000E               1293          MOVE.B      #14, D0
00001B12  4E4F                    1294          TRAP        #15
00001B14                          1295  
00001B14  1A3C 0000               1296          MOVE.B      #0, D5
00001B18  4EB8 15DA               1297          JSR         Bits11to9
00001B1C  1C02                    1298          MOVE.B      D2, D6
00001B1E                          1299          
00001B1E  4EB9 00001B80           1300          JSR         MODE_TABLE
00001B24                          1301  
00001B24  4E75                    1302          RTS
00001B26                          1303          
00001B26                          1304  EA_AS:
00001B26                          1305  
00001B26  4EB8 15E6               1306          JSR         Bit5
00001B2A  B43C 0000               1307          CMP.B       #0, D2
00001B2E  6700 0010               1308          BEQ         AS_COUNT
00001B32                          1309          
00001B32  43F9 00001EE8           1310          LEA         SEPERATOR, A1
00001B38  103C 000E               1311          MOVE.B      #14, D0
00001B3C  4E4F                    1312          TRAP        #15
00001B3E                          1313          
00001B3E                          1314          
00001B3E                          1315  
00001B3E  4E75                    1316          RTS        
00001B40                          1317  AS_COUNT:
00001B40  43F9 00001EEA           1318          LEA         POUND_MSG, A1
00001B46  103C 000E               1319          MOVE.B      #14, D0    
00001B4A  4E4F                    1320          TRAP        #15
00001B4C  4EB8 15DA               1321          JSR         Bits11to9
00001B50  B43C 0000               1322          CMP.B       #0, D2
00001B54  6700 000C               1323          BEQ         AS_FIX
00001B58  1C02                    1324          MOVE.B      D2, D6
00001B5A  4EB9 00001C42           1325          JSR         DISPLAY_REG
00001B60                          1326  
00001B60                          1327          
00001B60                          1328  
00001B60                          1329  
00001B60  4E75                    1330          RTS        
00001B62                          1331  
00001B62                          1332  AS_FIX:
00001B62  143C 0008               1333          MOVE.B      #8, D2
00001B66  4E75                    1334          RTS
00001B68                          1335          
00001B68                          1336  ; X+Y = Effective addressing
00001B68                          1337  ; XXX = Mode
00001B68                          1338  ; YYY = Register
00001B68                          1339      
00001B68                          1340  ; 0000 0000 00XX XYYY
00001B68                          1341  EA_LEA:
00001B68  4281                    1342          CLR.L       D1
00001B6A  4285                    1343          CLR.L       D5
00001B6C  4286                    1344          CLR.L       D6
00001B6E                          1345  
00001B6E  3A04                    1346          MOVE.W      D4, D5
00001B70  3C04                    1347          MOVE.W      D4, D6
00001B72                          1348  
00001B72                          1349  
00001B72                          1350          ; Print Out ", "
00001B72  43F9 00001EE8           1351          LEA         SEPERATOR, A1
00001B78  103C 000E               1352          MOVE.B      #14, D0
00001B7C  4E4F                    1353          TRAP        #15
00001B7E                          1354  
00001B7E                          1355  
00001B7E  4E75                    1356          RTS
00001B80                          1357  
00001B80                          1358  
00001B80                          1359  
00001B80                          1360  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00001B80                          1361  MODE_TABLE:
00001B80                          1362  
00001B80  BA3C 0000               1363          CMP.B       #0,D5
00001B84  6700 0048               1364          BEQ         J_TBL_D
00001B88  BA3C 0001               1365          CMP.B       #1,D5
00001B8C  6700 002C               1366          BEQ         J_TBL_A
00001B90  BA3C 0002               1367          CMP.B       #2,D5
00001B94  6700 004C               1368          BEQ         J_TBL_A_P
00001B98  BA3C 0003               1369          CMP.B       #3,D5
00001B9C  6700 0064               1370          BEQ         J_TBL_A_INCR
00001BA0  BA3C 0004               1371          CMP.B       #4,D5
00001BA4  6700 007C               1372          BEQ         J_TBL_A_DECR
00001BA8  BA3C 0007               1373          CMP.B       #7,D5
00001BAC  6700 0004               1374          BEQ         J_ABS
00001BB0                          1375          
00001BB0  4E75                    1376          RTS
00001BB2                          1377          ;   deal with errors here
00001BB2                          1378  
00001BB2                          1379  J_ABS:
00001BB2  4EB9 00001C4C           1380          JSR         J_ABS_TABLE
00001BB8  4E75                    1381          RTS
00001BBA                          1382  
00001BBA                          1383  J_TBL_A:
00001BBA  43F9 00001ED7           1384          LEA         MODE_1_MSG, A1 ; A#
00001BC0  103C 000E               1385          MOVE.B      #14, D0
00001BC4  4E4F                    1386          TRAP        #15
00001BC6  4EB9 00001C42           1387          JSR         DISPLAY_REG
00001BCC                          1388  
00001BCC  4E75                    1389          RTS
00001BCE                          1390  
00001BCE                          1391  
00001BCE                          1392  J_TBL_D:
00001BCE  43F9 00001ED4           1393          LEA         MODE_0_MSG, A1 ; D#
00001BD4  103C 000E               1394          MOVE.B      #14, D0
00001BD8  4E4F                    1395          TRAP        #15
00001BDA  4EB9 00001C42           1396          JSR         DISPLAY_REG
00001BE0  4E75                    1397          RTS
00001BE2                          1398  
00001BE2                          1399  J_TBL_A_P:
00001BE2                          1400  
00001BE2  43F9 00001EDA           1401          LEA         MODE_A_MSG, A1 ; (A#)
00001BE8  103C 000E               1402          MOVE.B      #14, D0
00001BEC  4E4F                    1403          TRAP        #15
00001BEE  4EB9 00001C42           1404          JSR         DISPLAY_REG
00001BF4                          1405          
00001BF4  43F9 00001EDE           1406          LEA         MODE_A_1_MSG, A1
00001BFA  103C 000E               1407          MOVE.B      #14, D0
00001BFE  4E4F                    1408          TRAP        #15
00001C00                          1409  
00001C00                          1410          
00001C00  4E75                    1411          RTS
00001C02                          1412      
00001C02                          1413  J_TBL_A_INCR:
00001C02  43F9 00001EDA           1414          LEA         MODE_A_MSG, A1 ; (A#)+
00001C08  103C 000E               1415          MOVE.B      #14, D0
00001C0C  4E4F                    1416          TRAP        #15
00001C0E  4EB9 00001C42           1417          JSR         DISPLAY_REG
00001C14                          1418          
00001C14  43F9 00001EE0           1419          LEA         MODE_A_2_MSG, A1
00001C1A  103C 000E               1420          MOVE.B      #14, D0
00001C1E  4E4F                    1421          TRAP        #15
00001C20                          1422  
00001C20  4E75                    1423          RTS
00001C22                          1424          
00001C22                          1425  J_TBL_A_DECR:
00001C22  43F9 00001EE3           1426          LEA         MODE_MINUS_MSG, A1 ; -(A#)
00001C28  103C 000E               1427          MOVE.B      #14, D0
00001C2C  4E4F                    1428          TRAP        #15
00001C2E  4EB9 00001C42           1429          JSR         DISPLAY_REG
00001C34                          1430          
00001C34  43F9 00001EDE           1431          LEA         MODE_A_1_MSG, A1
00001C3A  103C 000E               1432          MOVE.B      #14, D0
00001C3E  4E4F                    1433          TRAP        #15
00001C40                          1434  
00001C40  4E75                    1435          RTS
00001C42                          1436          
00001C42                          1437          
00001C42                          1438  DISPLAY_REG:
00001C42  1206                    1439          MOVE.B      D6, D1
00001C44  103C 0003               1440          MOVE.B      #$3, D0
00001C48  4E4F                    1441          TRAP        #15
00001C4A  4E75                    1442          RTS
00001C4C                          1443  
00001C4C                          1444  J_ABS_TABLE:
00001C4C                          1445          ; SIMHALT
00001C4C  BC3C 0000               1446          CMP.B       #0,D6
00001C50  6700 0014               1447          BEQ         J_SUBCLASS_0
00001C54                          1448              
00001C54  BC3C 0001               1449          CMP.B       #1,D6
00001C58  6700 0032               1450          BEQ         J_SUBCLASS_1
00001C5C                          1451              
00001C5C  BC3C 0004               1452          CMP.B       #4,D6
00001C60  6700 005E               1453          BEQ         DATA_TABLE
00001C64                          1454              
00001C64  4E75                    1455          RTS
00001C66                          1456          
00001C66                          1457  
00001C66                          1458  J_SUBCLASS_0:
00001C66                          1459  
00001C66  43F9 00001EF9           1460          LEA         DOLLAR_MSG, A1
00001C6C  103C 000E               1461          MOVE.B      #14, D0
00001C70  4E4F                    1462          TRAP        #15
00001C72                          1463         
00001C72                          1464  
00001C72  325B                    1465          MOVE.W      (A3)+, A1
00001C74                          1466          
00001C74                          1467  
00001C74                          1468          
00001C74  4281                    1469          CLR.L       D1
00001C76  4282                    1470          CLR.L       D2
00001C78  4287                    1471          CLR.L       D7
00001C7A  123C 0004               1472          MOVE.B      #4, D1
00001C7E  4EB8 109C               1473          JSR         CONVERT_ASCII
00001C82                          1474          
00001C82  3247                    1475          MOVE.W      D7, A1
00001C84  103C 000E               1476          MOVE.B      #14, D0
00001C88  4E4F                    1477          TRAP        #15
00001C8A                          1478          
00001C8A                          1479  
00001C8A                          1480  
00001C8A  4E75                    1481          RTS
00001C8C                          1482  
00001C8C                          1483  
00001C8C                          1484  J_SUBCLASS_1:
00001C8C                          1485          ; SIMHALT
00001C8C  43F9 00001EED           1486          LEA         SUBCLASS1_1, A1
00001C92  103C 000E               1487          MOVE.B      #14, D0
00001C96  4E4F                    1488          TRAP        #15
00001C98                          1489  
00001C98  4281                    1490          CLR.L       D1
00001C9A  4282                    1491          CLR.L       D2
00001C9C  4287                    1492          CLR.L       D7
00001C9E                          1493  
00001C9E                          1494  
00001C9E                          1495          
00001C9E  241B                    1496          MOVE.L      (A3)+, D2
00001CA0                          1497          
00001CA0  4EB8 1108               1498          JSR         FLIP_START
00001CA4                          1499  
00001CA4  4282                    1500          CLR.L       D2
00001CA6                          1501          
00001CA6                          1502  
00001CA6  123C 0008               1503          MOVE.B      #8, D1
00001CAA  4EB9 00001D3A           1504          JSR         CONVERT_HEX
00001CB0                          1505  
00001CB0                          1506  
00001CB0  43F9 00001EF1           1507          LEA         SUBCLASS1_2, A1
00001CB6  103C 000E               1508          MOVE.B      #14, D0
00001CBA  4E4F                    1509          TRAP        #15
00001CBC                          1510          
00001CBC  4E75                    1511          RTS
00001CBE                          1512  
00001CBE                          1513  ;   Error
00001CBE                          1514  J_ABS_ERROR:
00001CBE  4E75                    1515          RTS
00001CC0                          1516  
00001CC0                          1517  ;   Hard Coded Data
00001CC0                          1518  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00001CC0                          1519  
00001CC0                          1520  ;   Size num 0 = Byte 1 = Word 2 Long
00001CC0                          1521  
00001CC0                          1522  DATA_TABLE:
00001CC0                          1523          ; SIMHALT
00001CC0  43F9 00001EF5           1524          LEA         DATA_MSG, A1
00001CC6  103C 000E               1525          MOVE.B      #14, D0
00001CCA  4E4F                    1526          TRAP        #15
00001CCC                          1527  
00001CCC                          1528  
00001CCC  B63C 0000               1529          CMP.B       #0,D3 
00001CD0  6700 0014               1530          BEQ         DATA_B
00001CD4                          1531  
00001CD4  B63C 0001               1532          CMP.B       #1,D3 
00001CD8  6700 002A               1533          BEQ         DATA_W
00001CDC                          1534          
00001CDC  B63C 0002               1535          CMP.B       #2,D3 
00001CE0  6700 003E               1536          BEQ         DATA_L
00001CE4                          1537          
00001CE4  4E75                    1538          RTS
00001CE6                          1539  
00001CE6                          1540  DATA_B:
00001CE6  4281                    1541          CLR.L       D1
00001CE8  4282                    1542          CLR.L       D2
00001CEA  4287                    1543          CLR.L       D7
00001CEC                          1544          
00001CEC  341B                    1545          MOVE.W      (A3)+, D2
00001CEE                          1546          * Only read first byte from the word 
00001CEE                          1547          
00001CEE  4EB8 1108               1548          JSR         FLIP_START
00001CF2  4847                    1549          SWAP        D7
00001CF4  E09F                    1550          ROR.L       #8,D7
00001CF6  4282                    1551          CLR.L       D2
00001CF8                          1552          
00001CF8                          1553  
00001CF8  123C 0002               1554          MOVE.B      #2, D1
00001CFC  4EB9 00001D3A           1555          JSR         CONVERT_HEX
00001D02                          1556  
00001D02                          1557  
00001D02                          1558  
00001D02  4E75                    1559          RTS
00001D04                          1560  
00001D04                          1561  DATA_W:
00001D04  4281                    1562          CLR.L       D1
00001D06  4282                    1563          CLR.L       D2
00001D08  4287                    1564          CLR.L       D7
00001D0A                          1565          
00001D0A  341B                    1566          MOVE.W      (A3)+, D2
00001D0C                          1567          
00001D0C  4EB8 1108               1568          JSR         FLIP_START
00001D10                          1569  
00001D10  4847                    1570          SWAP        D7
00001D12                          1571  
00001D12  4282                    1572          CLR.L       D2
00001D14                          1573          
00001D14  123C 0004               1574          MOVE.B      #4, D1
00001D18                          1575          
00001D18                          1576          
00001D18  4EB9 00001D3A           1577          JSR         CONVERT_HEX
00001D1E                          1578  
00001D1E                          1579          
00001D1E                          1580  
00001D1E  4E75                    1581          RTS
00001D20                          1582  
00001D20                          1583  DATA_L:
00001D20                          1584          ; SIMHALT
00001D20  4281                    1585          CLR.L       D1
00001D22  4282                    1586          CLR.L       D2
00001D24  4287                    1587          CLR.L       D7
00001D26                          1588          
00001D26  241B                    1589          MOVE.L      (A3)+, D2
00001D28                          1590          
00001D28  4EB8 1108               1591          JSR         FLIP_START
00001D2C                          1592  
00001D2C  4282                    1593          CLR.L       D2
00001D2E                          1594          
00001D2E                          1595  
00001D2E  123C 0008               1596          MOVE.B      #8, D1
00001D32  4EB9 00001D3A           1597          JSR         CONVERT_HEX
00001D38                          1598  
00001D38                          1599          
00001D38                          1600  
00001D38  4E75                    1601          RTS
00001D3A                          1602  
00001D3A                          1603  
00001D3A                          1604  CONVERT_HEX:
00001D3A                          1605          ; SIMHALT    
00001D3A  0C01 0000               1606          CMPI.B      #$0, D1    
00001D3E  6700 0092               1607          BEQ         HEX_DONE
00001D42                          1608          
00001D42  5301                    1609          SUBI.B      #$1, D1       
00001D44                          1610  
00001D44  4282                    1611          CLR.L       D2
00001D46                          1612      
00001D46  1407                    1613          MOVE.B      D7, D2
00001D48                          1614              
00001D48  103C 001C               1615          MOVE.B      #28, D0    
00001D4C  E1AA                    1616          LSL.L       D0, D2     
00001D4E  E99A                    1617          ROL.L       #4, D2
00001D50                          1618          
00001D50  E887                    1619          ASR.L       #4, D7
00001D52                          1620          
00001D52                          1621          
00001D52  B43C 0000               1622          CMP.B       #0,D2
00001D56  6700 007C               1623          BEQ         PRINT_ASCII0
00001D5A  B43C 0001               1624          CMP.B       #1,D2
00001D5E  6700 0084               1625          BEQ         PRINT_ASCII1
00001D62  B43C 0002               1626          CMP.B       #2,D2
00001D66  6700 008C               1627          BEQ         PRINT_ASCII2
00001D6A  B43C 0003               1628          CMP.B       #3,D2
00001D6E  6700 0094               1629          BEQ         PRINT_ASCII3
00001D72  B43C 0004               1630          CMP.B       #4,D2
00001D76  6700 009C               1631          BEQ         PRINT_ASCII4
00001D7A  B43C 0005               1632          CMP.B       #5,D2
00001D7E  6700 00A4               1633          BEQ         PRINT_ASCII5
00001D82  B43C 0006               1634          CMP.B       #6,D2
00001D86  6700 00AC               1635          BEQ         PRINT_ASCII6
00001D8A  B43C 0007               1636          CMP.B       #7,D2
00001D8E  6700 00B4               1637          BEQ         PRINT_ASCII7
00001D92  B43C 0008               1638          CMP.B       #8,D2
00001D96  6700 00BC               1639          BEQ         PRINT_ASCII8
00001D9A  B43C 0009               1640          CMP.B       #9,D2
00001D9E  6700 00C4               1641          BEQ         PRINT_ASCII9
00001DA2  B43C 000A               1642          CMP.B       #$A,D2
00001DA6  6700 00CC               1643          BEQ         PRINT_ASCIIA
00001DAA  B43C 000B               1644          CMP.B       #$B,D2
00001DAE  6700 00D4               1645          BEQ         PRINT_ASCIIB
00001DB2  B43C 000C               1646          CMP.B       #$C,D2
00001DB6  6700 00DC               1647          BEQ         PRINT_ASCIIC
00001DBA  B43C 000D               1648          CMP.B       #$D,D2
00001DBE  6700 00E4               1649          BEQ         PRINT_ASCIID
00001DC2  B43C 000E               1650          CMP.B       #$E,D2
00001DC6  6700 00EC               1651          BEQ         PRINT_ASCIIE
00001DCA  B43C 000F               1652          CMP.B       #$F,D2
00001DCE  6700 00F4               1653          BEQ         PRINT_ASCIIF
00001DD2                          1654          
00001DD2                          1655          ; error handling here
00001DD2                          1656          
00001DD2                          1657          
00001DD2                          1658  
00001DD2                          1659  HEX_DONE:
00001DD2  4E75                    1660          RTS
00001DD4                          1661  
00001DD4                          1662  
00001DD4                          1663  
00001DD4                          1664  PRINT_ASCII0:
00001DD4  43F9 00001F55           1665          LEA         ZERO_MSG, A1
00001DDA  103C 000E               1666          MOVE.B      #14, D0    
00001DDE  4E4F                    1667          TRAP        #15
00001DE0  6000 FF58               1668          BRA         CONVERT_HEX
00001DE4                          1669  PRINT_ASCII1:
00001DE4  43F9 00001F57           1670          LEA         ONE_MSG, A1
00001DEA  103C 000E               1671          MOVE.B      #14, D0    
00001DEE  4E4F                    1672          TRAP        #15
00001DF0  6000 FF48               1673          BRA         CONVERT_HEX
00001DF4                          1674  PRINT_ASCII2:
00001DF4  43F9 00001F59           1675          LEA         TWO_MSG, A1
00001DFA  103C 000E               1676          MOVE.B      #14, D0    
00001DFE  4E4F                    1677          TRAP        #15
00001E00  6000 FF38               1678          BRA         CONVERT_HEX
00001E04                          1679  PRINT_ASCII3:
00001E04  43F9 00001F5B           1680          LEA         THREE_MSG, A1
00001E0A  103C 000E               1681          MOVE.B      #14, D0    
00001E0E  4E4F                    1682          TRAP        #15
00001E10  6000 FF28               1683          BRA         CONVERT_HEX
00001E14                          1684  PRINT_ASCII4:
00001E14  43F9 00001F5D           1685          LEA         FOUR_MSG, A1
00001E1A  103C 000E               1686          MOVE.B      #14, D0    
00001E1E  4E4F                    1687          TRAP        #15
00001E20  6000 FF18               1688          BRA         CONVERT_HEX
00001E24                          1689  PRINT_ASCII5:
00001E24  43F9 00001F5F           1690          LEA         FIVE_MSG, A1
00001E2A  103C 000E               1691          MOVE.B      #14, D0    
00001E2E  4E4F                    1692          TRAP        #15
00001E30  6000 FF08               1693          BRA         CONVERT_HEX        
00001E34                          1694  PRINT_ASCII6:
00001E34  43F9 00001F61           1695          LEA         SIX_MSG, A1
00001E3A  103C 000E               1696          MOVE.B      #14, D0    
00001E3E  4E4F                    1697          TRAP        #15
00001E40  6000 FEF8               1698          BRA         CONVERT_HEX
00001E44                          1699  PRINT_ASCII7:
00001E44  43F9 00001F63           1700          LEA         SEVEN_MSG, A1
00001E4A  103C 000E               1701          MOVE.B      #14, D0    
00001E4E  4E4F                    1702          TRAP        #15
00001E50  6000 FEE8               1703          BRA         CONVERT_HEX
00001E54                          1704  PRINT_ASCII8:
00001E54  43F9 00001F65           1705          LEA         EIGHT_MSG, A1
00001E5A  103C 000E               1706          MOVE.B      #14, D0    
00001E5E  4E4F                    1707          TRAP        #15
00001E60  6000 FED8               1708          BRA         CONVERT_HEX
00001E64                          1709  PRINT_ASCII9:
00001E64  43F9 00001F67           1710          LEA         NINE_MSG, A1
00001E6A  103C 000E               1711          MOVE.B      #14, D0    
00001E6E  4E4F                    1712          TRAP        #15
00001E70  6000 FEC8               1713          BRA         CONVERT_HEX
00001E74                          1714  PRINT_ASCIIA:
00001E74  43F9 00001F69           1715          LEA         A_MSG, A1
00001E7A  103C 000E               1716          MOVE.B      #14, D0    
00001E7E  4E4F                    1717          TRAP        #15
00001E80  6000 FEB8               1718          BRA         CONVERT_HEX
00001E84                          1719  PRINT_ASCIIB:
00001E84  43F9 00001F6B           1720          LEA         B_MSG, A1
00001E8A  103C 000E               1721          MOVE.B      #14, D0    
00001E8E  4E4F                    1722          TRAP        #15
00001E90  6000 FEA8               1723          BRA         CONVERT_HEX
00001E94                          1724  PRINT_ASCIIC:
00001E94  43F9 00001F6D           1725          LEA         C_MSG, A1
00001E9A  103C 000E               1726          MOVE.B      #14, D0    
00001E9E  4E4F                    1727          TRAP        #15
00001EA0  6000 FE98               1728          BRA         CONVERT_HEX
00001EA4                          1729  PRINT_ASCIID:
00001EA4  43F9 00001F6F           1730          LEA         D_MSG, A1
00001EAA  103C 000E               1731          MOVE.B      #14, D0    
00001EAE  4E4F                    1732          TRAP        #15
00001EB0  6000 FE88               1733          BRA         CONVERT_HEX
00001EB4                          1734  PRINT_ASCIIE:
00001EB4  43F9 00001F71           1735          LEA         E_MSG, A1
00001EBA  103C 000E               1736          MOVE.B      #14, D0    
00001EBE  4E4F                    1737          TRAP        #15
00001EC0  6000 FE78               1738          BRA         CONVERT_HEX
00001EC4                          1739  PRINT_ASCIIF:
00001EC4  43F9 00001F73           1740          LEA         F_MSG, A1
00001ECA  103C 000E               1741          MOVE.B      #14, D0    
00001ECE  4E4F                    1742          TRAP        #15
00001ED0  6000 FE68               1743          BRA         CONVERT_HEX
00001ED4                          1744  
00001ED4                          1745  
00001ED4                          1746  
00001ED4                          1747  
00001ED4                          1748  
00001ED4                          1749  
00001ED4                          1750  
00001ED4= 20 44 00                1751  MODE_0_MSG:     DC.B        ' D',0
00001ED7= 20 41 00                1752  MODE_1_MSG:     DC.B        ' A',0
00001EDA= 20 28 41 00             1753  MODE_A_MSG:     DC.B        ' (A',0
00001EDE= 29 00                   1754  MODE_A_1_MSG:   DC.B        ')',0
00001EE0= 29 2B 00                1755  MODE_A_2_MSG:   DC.B        ')+',0
00001EE3= 20 2D 28 41 00          1756  MODE_MINUS_MSG: DC.B        ' -(A',0
00001EE8                          1757  
00001EE8= 2C 00                   1758  SEPERATOR:      DC.B        ',',0
00001EEA                          1759  
00001EEA= 20 23 00                1760  POUND_MSG:      DC.B        ' #',0
00001EED= 20 28 24 00             1761  SUBCLASS1_1:    DC.B        ' ($',0
00001EF1= 29 2E 4C 00             1762  SUBCLASS1_2:    DC.B        ').L',0
00001EF5= 20 23 24 00             1763  DATA_MSG:       DC.B        ' #$',0
00001EF9= 24 00                   1764  DOLLAR_MSG:     DC.B        '$',0
00001EFB                          1765  
00001EFB= 54 4D 50 00             1766  TEMP_MSG:       DC.B        'TMP',0
00001EFF                          1767  
00001EFF                          1768  
00001EFF                          1769  
00001EFF                          1770  TMP_STR         DS.B        32
00001F1F                          1771  
00001F1F                          1772  
00001F1F                          1773  
00001F1F                          1774  
00001F1F                          1775  
00001F1F                          1776  
00001F1F                          1777  
00001F1F                          1778  
00001F1F                          1779  
00001F1F                          1780  
00001F1F                          1781  -------------------- end include --------------------
00001F1F= 45 6E 74 65 72 20 ...   1782  START_MSG:      DC.B        'Enter a starting address:',0
00001F39= 45 6E 74 65 72 20 ...   1783  END_MSG:        DC.B        'Enter an ending address:',0
00001F52                          1784                
00001F52  =0000000D               1785  CR              EQU         $0D
00001F52  =0000000A               1786  LF              EQU         $0A
00001F52                          1787  
00001F52= 20 20 00                1788  SPACE_MSG:      DC.B        '  ',0
00001F55                          1789  
00001F55= 30 00                   1790  ZERO_MSG:       DC.B        '0',0
00001F57= 31 00                   1791  ONE_MSG:        DC.B        '1',0
00001F59= 32 00                   1792  TWO_MSG:        DC.B        '2',0
00001F5B= 33 00                   1793  THREE_MSG:      DC.B        '3',0
00001F5D= 34 00                   1794  FOUR_MSG:       DC.B        '4',0
00001F5F= 35 00                   1795  FIVE_MSG:       DC.B        '5',0
00001F61= 36 00                   1796  SIX_MSG:        DC.B        '6',0
00001F63= 37 00                   1797  SEVEN_MSG:      DC.B        '7',0
00001F65= 38 00                   1798  EIGHT_MSG:      DC.B        '8',0
00001F67= 39 00                   1799  NINE_MSG:       DC.B        '9',0
00001F69= 41 00                   1800  A_MSG:          DC.B        'A',0
00001F6B= 42 00                   1801  B_MSG:          DC.B        'B',0
00001F6D= 43 00                   1802  C_MSG:          DC.B        'C',0
00001F6F= 44 00                   1803  D_MSG:          DC.B        'D',0
00001F71= 45 00                   1804  E_MSG:          DC.B        'E',0
00001F73= 46 00                   1805  F_MSG:          DC.B        'F',0
00001F75                          1806                  
00001F75= 45 72 72 6F 72 00       1807  ERROR_MSG:      DC.B        'Error',0
00001F7B= 53 75 63 63 65 73 ...   1808  SUCCESS_MSG:    DC.B        'Success',0
00001F83                          1809  
00001F83= 0D 0A 00                1810  NEW_LINE:       DC.B        '',CR,LF,0
00001F86                          1811  
00001F86= 50 6C 65 61 73 65 ...   1812  NEXT_PAGE_MSG:  DC.B        'Please press enter to continue: ',CR,LF,0
00001FA9                          1813  
00001FA9                          1814    
00001FA9                          1815                  
00001FA9                          1816                  
00001FA9                          1817  STA_ADDR        DS.B        40
00001FD1                          1818  END_ADDR        DS.B        40
00001FF9                          1819  
00001FF9                          1820  
00001FF9                          1821  
00001FF9                          1822  
00001FF9                          1823                  
00001FF9                          1824                  
00001FF9                          1825          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDA_MSG            19C4
ADDQ_MSG            196E
ADD_MSG             19C0
ASCII_DONE          10B4
ASD_MEM             1946
ASD_REG             1910
ASL_MSG             19C9
ASR_MSG             19CD
AS_COUNT            1B40
AS_FIX              1B62
A_MSG               1F69
BIT5                15E6
BITS11TO6           15C2
BITS11TO8           15CE
BITS11TO9           15DA
BITS2TO0            153A
BITS3TO0            1546
BITS4TO3            1562
BITS5TO3            1552
BITS7TO0            1572
BITS7TO4            157A
BITS7TO6            1586
BITS8TO3            1592
BITS8TO4            159E
BITS8TO6            15AA
BITS9TO7            15B6
BRA_MSG             1994
BSR_MSG             199A
BYTE_MSG            19DB
B_MSG               1F6B
CLEAR_ALL_REG       1060
CMP_MSG             19B2
CONVERT_ASCII       109C
CONVERT_HEX         1D3A
CR                  D
C_MSG               1F6D
DATASRC_EA          1A88
DATA_B              1CE6
DATA_L              1D20
DATA_MSG            1EF5
DATA_TABLE          1CC0
DATA_W              1D04
DISPLAY_REG         1C42
DIVS_MSG            19A9
DIVU_MSG            19A4
DOLLAR              19D7
DOLLAR_MSG          1EF9
DONE                133A
D_MSG               1F6F
EA_ADD              1ABE
EA_AS               1B26
EA_ASRC             1AE2
EA_DSRC             1B04
EA_GENERIC          1A74
EA_LEA              1B68
EA_MOVE             1A3A
EIGHT_MSG           1F65
END_ADDR            1FD1
END_MSG             1F39
ERROR_INSTR         1A14
ERROR_MSG           1F75
ERROR_OP_MSG        19E4
ERROR_SIZE_MSG      1A24
EXT_MSG             19D1
E_MSG               1F71
FILE_LOOP           12E0
FIVE_MSG            1F5F
FLIP_DONE           1136
FLIP_LOOP           1118
FLIP_START          1108
FOUR_MSG            1F5D
F_MSG               1F73
HEX_DONE            1DD2
IMPLEMENT_MSG       19F8
INVALID_INSTR       152C
JSR_MSG             1990
JUMP_0              13C2
JUMP_1              13D8
JUMP_2              13E6
JUMP_3              13FE
JUMP_4              1416
JUMP_5              144A
JUMP_6              145C
JUMP_7              147A
JUMP_8              148E
JUMP_9              14AC
JUMP_A              14B2
JUMP_B              14B8
JUMP_C              14DE
JUMP_D              14FC
JUMP_E              1518
JUMP_ERROR          151E
JUMP_OP_CODE        1340
J_ABS               1BB2
J_ABS_ERROR         1CBE
J_ABS_TABLE         1C4C
J_MOVEA_L           1614
J_MOVEA_W           165C
J_MOVE_L            1638
J_MOVE_W            1680
J_SUBCLASS_0        1C66
J_SUBCLASS_1        1C8C
J_TBL_A             1BBA
J_TBL_A_DECR        1C22
J_TBL_A_INCR        1C02
J_TBL_A_P           1BE2
J_TBL_D             1BCE
LEA_MSG             198C
LET_ASCII           10CA
LF                  A
LONG_MSG            19E1
MEM_SHIFT           1938
MODE_0_MSG          1ED4
MODE_1_MSG          1ED7
MODE_A_1_MSG        1EDE
MODE_A_2_MSG        1EE0
MODE_A_MSG          1EDA
MODE_MINUS_MSG      1EE3
MODE_TABLE          1B80
MOVEA_MSG           1978
MOVEM_CHECK         1764
MOVEM_L             173C
MOVEM_MSG           1986
MOVEM_OR_EXT        16FE
MOVEM_SIZE          1714
MOVEM_W             1722
MOVEQ_MSG           199E
MOVE_MSG            1973
MULS_MSG            19BB
MULU_MSG            19B6
NEW_LINE            1F83
NEXT_PAGE_MSG       1F86
NINE_MSG            1F67
NOP_MSG             1982
NUM_ASCII           10B6
ONE_MSG             1F57
OPMODE              17DA
OPMODE_ADDA         1814
OPMODE_ASHIFT       182E
OP_CODE_ADD         18E0
OP_CODE_ADDA        18F8
OP_CODE_ADDQ        1772
OP_CODE_ASL_REG     192A
OP_CODE_ASR_MEM     1960
OP_CODE_BASE_MOVE   15F6
OP_CODE_BRA         1894
OP_CODE_BSR         18A2
OP_CODE_CMP         1780
OP_CODE_DIVS        17B2
OP_CODE_DIVU        179A
OP_CODE_EXT         1756
OP_CODE_JSR         16C0
OP_CODE_LEA         16D4
OP_CODE_MOVEM       16EE
OP_CODE_MOVEQ       18B0
OP_CODE_MULS        18BE
OP_CODE_MULU        18CC
OP_CODE_NOP         16B2
OP_CODE_ORI         16A4
OP_CODE_SUB         17C0
ORI_MSG             197E
PERCENT             19D9
POUND               19D5
POUND_MSG           1EEA
PRINT_ADDRESS       10DE
PRINT_ADDRESS_EXIT  11D2
PRINT_ADDRESS_LOOP  1138
PRINT_ADR0          11E0
PRINT_ADR1          11F0
PRINT_ADR2          1200
PRINT_ADR3          1210
PRINT_ADR4          1220
PRINT_ADR5          1230
PRINT_ADR6          1240
PRINT_ADR7          1250
PRINT_ADR8          1260
PRINT_ADR9          1270
PRINT_ADRA          1280
PRINT_ADRB          1290
PRINT_ADRC          12A0
PRINT_ADRD          12B0
PRINT_ADRE          12C0
PRINT_ADRF          12D0
PRINT_ASCII0        1DD4
PRINT_ASCII1        1DE4
PRINT_ASCII2        1DF4
PRINT_ASCII3        1E04
PRINT_ASCII4        1E14
PRINT_ASCII5        1E24
PRINT_ASCII6        1E34
PRINT_ASCII7        1E44
PRINT_ASCII8        1E54
PRINT_ASCII9        1E64
PRINT_ASCIIA        1E74
PRINT_ASCIIB        1E84
PRINT_ASCIIC        1E94
PRINT_ASCIID        1EA4
PRINT_ASCIIE        1EB4
PRINT_ASCIIF        1EC4
PRINT_BYTE          1850
PRINT_DELAY         131A
PRINT_LONG          1874
PRINT_WORD          1862
REVERSESRC_EA       1AA0
SEPERATOR           1EE8
SEVEN_MSG           1F63
SIX_MSG             1F61
SPACE_MSG           1F52
START               1000
START_MSG           1F1F
STA_ADDR            1FA9
SUBCLASS1_1         1EED
SUBCLASS1_2         1EF1
SUB_MSG             19AE
SUCCESS_MSG         1F7B
TEMP_MSG            1EFB
THREE_MSG           1F5B
TMP_STR             1EFF
TWO_MSG             1F59
WORD_MSG            19DE
WRONG_SIZE          1886
ZERO_MSG            1F55
