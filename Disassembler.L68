00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/15/2021 10:56:37 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; A5 will be used for paging
00001000                            13  ; D0 is used to store values that will get compared
00001000                            14      
00001000                            15  START:
00001000                            16  
00001000  4EB9 000010A0             17          JSR         CLEAR_ALL_REG
00001006                            18          
00001006  43F9 0000235D             19          LEA         GREETING_MSG, A1
0000100C  103C 000E                 20          MOVE.B      #14, D0    
00001010  4E4F                      21          TRAP        #15
00001012                            22          
00001012  6000 0002                 23          BRA         START_ADDR_CHECK
00001016                            24          
00001016                            25  START_ADDR_CHECK:
00001016                            26           ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001016  43F9 00001B13             27          LEA         START_MSG, A1
0000101C  103C 000E                 28          MOVE.B      #14, D0    
00001020  4E4F                      29          TRAP        #15
00001022                            30          
00001022  43F9 0000247A             31          LEA         STA_ADDR, A1
00001028  103C 0002                 32          MOVE.B      #2, D0
0000102C  4E4F                      33          TRAP        #15             ; D1 has the length of the address
0000102E                            34          
0000102E                            35          
0000102E  4282                      36          CLR.L       D2
00001030  4284                      37          CLR.L       D4
00001032  4287                      38          CLR.L       D7
00001034  4EB9 000010DC             39          JSR         CONVERT_ASCII
0000103A                            40          
0000103A  1807                      41          MOVE.B      D7, D4
0000103C  4EB9 00001660             42          JSR         Bit0        
00001042  B43C 0000                 43          CMP.B       #0, D2
00001046                            44          
00001046  66CE                      45          BNE         START_ADDR_CHECK
00001048  6000 0002                 46          BRA         SAVE_START
0000104C                            47  
0000104C                            48  SAVE_START:
0000104C  2647                      49          MOVEA.L     D7, A3
0000104E  2A4B                      50          MOVEA.L     A3, A5
00001050                            51  
00001050  DBFC 00000020             52          ADD.L       #32, A5
00001056  6000 0002                 53          BRA         END_ADDR_CHECK
0000105A                            54  
0000105A                            55  END_ADDR_CHECK:        
0000105A                            56          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
0000105A                            57          
0000105A  43F9 00001B2D             58          LEA         END_MSG, A1
00001060  103C 000E                 59          MOVE.B      #14, D0    
00001064  4E4F                      60          TRAP        #15
00001066                            61          
00001066  43F9 000024A2             62          LEA         END_ADDR, A1
0000106C  103C 0002                 63          MOVE.B      #2, D0
00001070  4E4F                      64          TRAP        #15
00001072                            65          
00001072  4282                      66          CLR.L       D2
00001074  4284                      67          CLR.L       D4
00001076  4287                      68          CLR.L       D7
00001078  4EB9 000010DC             69          JSR         CONVERT_ASCII
0000107E                            70  
0000107E  4EB9 0000108A             71          JSR         CHECK_ODD
00001084  66D4                      72          BNE         END_ADDR_CHECK
00001086                            73          
00001086  6000 0012                 74          BRA         SAVE_END
0000108A                            75          
0000108A                            76  CHECK_ODD:
0000108A  1807                      77          MOVE.B      D7, D4
0000108C  4EB9 00001660             78          JSR         Bit0        
00001092  B43C 0000                 79          CMP.B       #0, D2
00001096  4E75                      80          RTS
00001098                            81  
00001098                            82  CHECK_DATA:
00001098                            83          
00001098  4E75                      84          RTS
0000109A                            85  
0000109A                            86  SAVE_END:
0000109A  2847                      87          MOVEA.L     D7, A4
0000109C  6000 0282                 88          BRA         FILE_LOOP
000010A0                            89      
000010A0                            90          
000010A0                            91  CLEAR_ALL_REG:
000010A0  4280                      92          CLR.L       D0
000010A2  4281                      93          CLR.L       D1
000010A4  4282                      94          CLR.L       D2
000010A6  4283                      95          CLR.L       D3
000010A8  4284                      96          CLR.L       D4
000010AA  4285                      97          CLR.L       D5
000010AC  4286                      98          CLR.L       D6
000010AE  4287                      99          CLR.L       D7
000010B0                           100  
000010B0  207C 00000000            101          MOVEA.L     #$00000000, A0
000010B6  227C 00000000            102          MOVEA.L     #$00000000, A1
000010BC  247C 00000000            103          MOVEA.L     #$00000000, A2
000010C2  267C 00000000            104          MOVEA.L     #$00000000, A3
000010C8  287C 00000000            105          MOVEA.L     #$00000000, A4
000010CE  2A7C 00000000            106          MOVEA.L     #$00000000, A5
000010D4  2C7C 00000000            107          MOVEA.L     #$00000000, A6
000010DA                           108          
000010DA                           109          
000010DA                           110  
000010DA  4E75                     111          RTS
000010DC                           112  
000010DC                           113  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
000010DC  0C01 0000                114          CMPI.B      #$0, D1     ; check if we have traversed the whole length
000010E0  6700 0012                115          BEQ         ASCII_DONE
000010E4                           116      
000010E4  1419                     117          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
000010E6                           118          
000010E6                           119  
000010E6                           120      
000010E6  103C 0039                121          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
000010EA  B400                     122          CMP.B       D0, D2
000010EC                           123          
000010EC                           124  
000010EC  6F00 0008                125          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
000010F0  6000 0018                126          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
000010F4                           127  
000010F4                           128  ASCII_DONE:
000010F4  4E75                     129          RTS
000010F6                           130  
000010F6                           131  
000010F6                           132  NUM_ASCII:
000010F6  5301                     133          SUBI.B      #$1, D1
000010F8                           134          
000010F8  103C 0030                135          MOVE.B      #$30, D0
000010FC  9400                     136          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
000010FE  DE02                     137          ADD.B       D2, D7      ; new ASCII number stored at D7
00001100                           138          
00001100                           139  
00001100  0C01 0000                140          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001104  67EE                     141          BEQ         ASCII_DONE
00001106                           142          
00001106  E987                     143          ASL.L       #4, D7
00001108                           144        
00001108  60D2                     145          BRA         CONVERT_ASCII
0000110A                           146          
0000110A                           147          
0000110A                           148  LET_ASCII:
0000110A  5301                     149          SUBI.B      #$1, D1
0000110C                           150                 
0000110C                           151  
0000110C  103C 0037                152          MOVE.B      #$37, D0
00001110  9400                     153          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001112  DE02                     154          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
00001114                           155                                  ; 46 is used to represent F in Hex. 46 - 37 = F
00001114                           156          
00001114  0C01 0000                157          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001118  67DA                     158          BEQ         ASCII_DONE
0000111A                           159          
0000111A  E987                     160          ASL.L       #4, D7
0000111C                           161          
0000111C                           162          
0000111C  60BE                     163          BRA         CONVERT_ASCII
0000111E                           164  
0000111E                           165  PRINT_ADDRESS:
0000111E                           166          ; SIMHALT 0000 0000
0000111E  4281                     167          CLR.L       D1
00001120  4282                     168          CLR.L       D2
00001122  240B                     169          MOVE.L      A3, D2
00001124                           170          
00001124                           171          
00001124                           172  
00001124                           173          
00001124  4EB9 00001148            174          JSR         FLIP_START
0000112A  2607                     175          MOVE.L      D7, D3
0000112C                           176  
0000112C  4281                     177          CLR.L       D1
0000112E  4282                     178          CLR.L       D2
00001130  4287                     179          CLR.L       D7
00001132                           180          
00001132  123C 0008                181          MOVE.B      #$8, D1
00001136  6000 0040                182          BRA         PRINT_ADDRESS_LOOP
0000113A                           183  
0000113A  43F9 00002423            184          LEA         SPACE_MSG, A1
00001140  103C 000E                185          MOVE.B      #14, D0    
00001144  4E4F                     186          TRAP        #15
00001146                           187          
00001146  4E75                     188          RTS
00001148                           189          
00001148                           190  FLIP_START:        
00001148  4281                     191          CLR.L       D1
0000114A  4287                     192          CLR.L       D7
0000114C                           193          
0000114C  123C 0008                194          MOVE.B      #$8, D1
00001150                           195          
00001150  4EB9 00001158            196          JSR         FLIP_LOOP
00001156                           197          
00001156                           198          
00001156  4E75                     199          RTS
00001158                           200          
00001158                           201  FLIP_LOOP:
00001158                           202  
00001158                           203          ; SIMHALT
00001158                           204          
00001158  0C01 0000                205          CMPI.B      #$0, D1
0000115C  6700 0018                206          BEQ         FLIP_DONE
00001160  5301                     207          SUBI.B      #$1, D1
00001162  E987                     208          ASL.L       #4, D7
00001164                           209          
00001164  4285                     210          CLR.L       D5
00001166                           211          
00001166  1A02                     212          MOVE.B      D2, D5
00001168                           213          
00001168  103C 001C                214          MOVE.B      #28,D0    
0000116C  E1AD                     215          LSL.L       D0, D5     
0000116E  E99D                     216          ROL.L       #4, D5
00001170                           217          
00001170  DE05                     218          ADD.B       D5, D7
00001172                           219          
00001172                           220          
00001172  E882                     221          ASR.L       #4, D2
00001174                           222          
00001174  60E2                     223          BRA         FLIP_LOOP
00001176                           224  
00001176                           225  FLIP_DONE:
00001176  4E75                     226          RTS
00001178                           227  
00001178                           228  
00001178                           229          
00001178                           230  
00001178                           231  PRINT_ADDRESS_LOOP:
00001178                           232          ; SIMHALT
00001178                           233          
00001178  0C01 0000                234          CMPI.B      #$0, D1
0000117C  6700 0094                235          BEQ         PRINT_ADDRESS_EXIT
00001180                           236          
00001180                           237          
00001180  5301                     238          SUBI.B      #$1, D1
00001182                           239          
00001182  1403                     240          MOVE.B      D3, D2
00001184  103C 001C                241          MOVE.B      #28,D0    
00001188  E1AA                     242          LSL.L       D0,D2     
0000118A  E99A                     243          ROL.L       #4,D2 
0000118C                           244          
0000118C                           245          
0000118C  E883                     246          ASR.L       #4, D3
0000118E                           247          
0000118E                           248          
0000118E  B43C 0000                249          CMP.B       #0,D2
00001192  6700 008C                250          BEQ         PRINT_ADR0
00001196  B43C 0001                251          CMP.B       #1,D2
0000119A  6700 0094                252          BEQ         PRINT_ADR1
0000119E  B43C 0002                253          CMP.B       #2,D2
000011A2  6700 009C                254          BEQ         PRINT_ADR2
000011A6  B43C 0003                255          CMP.B       #3,D2
000011AA  6700 00A4                256          BEQ         PRINT_ADR3
000011AE  B43C 0004                257          CMP.B       #4,D2
000011B2  6700 00AC                258          BEQ         PRINT_ADR4
000011B6  B43C 0005                259          CMP.B       #5,D2
000011BA  6700 00B4                260          BEQ         PRINT_ADR5
000011BE  B43C 0006                261          CMP.B       #6,D2
000011C2  6700 00BC                262          BEQ         PRINT_ADR6
000011C6  B43C 0007                263          CMP.B       #7,D2
000011CA  6700 00C4                264          BEQ         PRINT_ADR7
000011CE  B43C 0008                265          CMP.B       #8,D2
000011D2  6700 00CC                266          BEQ         PRINT_ADR8
000011D6  B43C 0009                267          CMP.B       #9,D2
000011DA  6700 00D4                268          BEQ         PRINT_ADR9
000011DE  B43C 000A                269          CMP.B       #$A,D2
000011E2  6700 00DC                270          BEQ         PRINT_ADRA
000011E6  B43C 000B                271          CMP.B       #$B,D2
000011EA  6700 00E4                272          BEQ         PRINT_ADRB
000011EE  B43C 000C                273          CMP.B       #$C,D2
000011F2  6700 00EC                274          BEQ         PRINT_ADRC
000011F6  B43C 000D                275          CMP.B       #$D,D2
000011FA  6700 00F4                276          BEQ         PRINT_ADRD
000011FE  B43C 000E                277          CMP.B       #$E,D2
00001202  6700 00FC                278          BEQ         PRINT_ADRE
00001206  B43C 000F                279          CMP.B       #$F,D2
0000120A  6700 0104                280          BEQ         PRINT_ADRF
0000120E                           281  
0000120E                           282  
0000120E                           283  
0000120E  6000 FF68                284          BRA         PRINT_ADDRESS_LOOP
00001212                           285          
00001212                           286  
00001212                           287          
00001212                           288  
00001212                           289  PRINT_ADDRESS_EXIT:
00001212  43F9 00002423            290          LEA         SPACE_MSG, A1
00001218  103C 000E                291          MOVE.B      #14, D0    
0000121C  4E4F                     292          TRAP        #15
0000121E                           293          
0000121E  4E75                     294          RTS
00001220                           295          
00001220                           296  PRINT_ADR0:
00001220  43F9 00002426            297          LEA         ZERO_MSG, A1
00001226  103C 000E                298          MOVE.B      #14, D0    
0000122A  4E4F                     299          TRAP        #15
0000122C  6000 FF4A                300          BRA         PRINT_ADDRESS_LOOP
00001230                           301  PRINT_ADR1:
00001230  43F9 00002428            302          LEA         ONE_MSG, A1
00001236  103C 000E                303          MOVE.B      #14, D0    
0000123A  4E4F                     304          TRAP        #15
0000123C  6000 FF3A                305          BRA         PRINT_ADDRESS_LOOP
00001240                           306  PRINT_ADR2:
00001240  43F9 0000242A            307          LEA         TWO_MSG, A1
00001246  103C 000E                308          MOVE.B      #14, D0    
0000124A  4E4F                     309          TRAP        #15
0000124C  6000 FF2A                310          BRA         PRINT_ADDRESS_LOOP
00001250                           311  PRINT_ADR3:
00001250  43F9 0000242C            312          LEA         THREE_MSG, A1
00001256  103C 000E                313          MOVE.B      #14, D0    
0000125A  4E4F                     314          TRAP        #15
0000125C  6000 FF1A                315          BRA         PRINT_ADDRESS_LOOP
00001260                           316  PRINT_ADR4:
00001260  43F9 0000242E            317          LEA         FOUR_MSG, A1
00001266  103C 000E                318          MOVE.B      #14, D0    
0000126A  4E4F                     319          TRAP        #15
0000126C  6000 FF0A                320          BRA         PRINT_ADDRESS_LOOP
00001270                           321  PRINT_ADR5:
00001270  43F9 00002430            322          LEA         FIVE_MSG, A1
00001276  103C 000E                323          MOVE.B      #14, D0    
0000127A  4E4F                     324          TRAP        #15
0000127C  6000 FEFA                325          BRA         PRINT_ADDRESS_LOOP
00001280                           326  PRINT_ADR6:
00001280  43F9 00002432            327          LEA         SIX_MSG, A1
00001286  103C 000E                328          MOVE.B      #14, D0    
0000128A  4E4F                     329          TRAP        #15
0000128C  6000 FEEA                330          BRA         PRINT_ADDRESS_LOOP
00001290                           331  PRINT_ADR7:
00001290  43F9 00002434            332          LEA         SEVEN_MSG, A1
00001296  103C 000E                333          MOVE.B      #14, D0    
0000129A  4E4F                     334          TRAP        #15
0000129C  6000 FEDA                335          BRA         PRINT_ADDRESS_LOOP
000012A0                           336  PRINT_ADR8:
000012A0  43F9 00002436            337          LEA         EIGHT_MSG, A1
000012A6  103C 000E                338          MOVE.B      #14, D0    
000012AA  4E4F                     339          TRAP        #15
000012AC  6000 FECA                340          BRA         PRINT_ADDRESS_LOOP
000012B0                           341  PRINT_ADR9:
000012B0  43F9 00002438            342          LEA         NINE_MSG, A1
000012B6  103C 000E                343          MOVE.B      #14, D0    
000012BA  4E4F                     344          TRAP        #15
000012BC  6000 FEBA                345          BRA         PRINT_ADDRESS_LOOP
000012C0                           346  PRINT_ADRA:
000012C0  43F9 0000243A            347          LEA         A_MSG, A1
000012C6  103C 000E                348          MOVE.B      #14, D0    
000012CA  4E4F                     349          TRAP        #15
000012CC  6000 FEAA                350          BRA         PRINT_ADDRESS_LOOP
000012D0                           351  PRINT_ADRB:
000012D0  43F9 0000243C            352          LEA         B_MSG, A1
000012D6  103C 000E                353          MOVE.B      #14, D0    
000012DA  4E4F                     354          TRAP        #15
000012DC  6000 FE9A                355          BRA         PRINT_ADDRESS_LOOP
000012E0                           356  PRINT_ADRC:
000012E0  43F9 0000243E            357          LEA         C_MSG, A1
000012E6  103C 000E                358          MOVE.B      #14, D0    
000012EA  4E4F                     359          TRAP        #15
000012EC  6000 FE8A                360          BRA         PRINT_ADDRESS_LOOP
000012F0                           361  PRINT_ADRD:
000012F0  43F9 00002440            362          LEA         D_MSG, A1
000012F6  103C 000E                363          MOVE.B      #14, D0    
000012FA  4E4F                     364          TRAP        #15
000012FC  6000 FE7A                365          BRA         PRINT_ADDRESS_LOOP
00001300                           366  PRINT_ADRE:
00001300  43F9 00002442            367          LEA         E_MSG, A1
00001306  103C 000E                368          MOVE.B      #14, D0    
0000130A  4E4F                     369          TRAP        #15
0000130C  6000 FE6A                370          BRA         PRINT_ADDRESS_LOOP
00001310                           371  PRINT_ADRF:
00001310  43F9 00002444            372          LEA         F_MSG, A1
00001316  103C 000E                373          MOVE.B      #14, D0    
0000131A  4E4F                     374          TRAP        #15
0000131C  6000 FE5A                375          BRA         PRINT_ADDRESS_LOOP
00001320                           376  
00001320                           377  
00001320                           378  FILE_LOOP:
00001320  4280                     379          CLR.L       D0
00001322  4281                     380          CLR.L       D1
00001324  4282                     381          CLR.L       D2
00001326  4283                     382          CLR.L       D3
00001328  4284                     383          CLR.L       D4
0000132A  4285                     384          CLR.L       D5
0000132C  4286                     385          CLR.L       D6
0000132E  4287                     386          CLR.L       D7
00001330                           387          
00001330                           388  
00001330                           389  
00001330                           390  
00001330                           391          ;       Add branch here that will take the current address in A3
00001330                           392          ;       Turn it into characters and print it to the screen with space
00001330  4EB8 111E                393          JSR         PRINT_ADDRESS
00001334                           394          
00001334                           395          
00001334  381B                     396          MOVE.W      (A3)+, D4
00001336                           397          ; SIMHALT
00001336  4EB9 000013AE            398          JSR         JUMP_OP_CODE
0000133C                           399          
0000133C  43F9 00002454            400          LEA         NEW_LINE, A1
00001342  103C 000E                401          MOVE.B      #14, D0
00001346  4E4F                     402          TRAP        #15
00001348                           403  
00001348                           404  
00001348  B9CB                     405          CMP.L      A3, A4
0000134A                           406          ;       If our pointer is at the end or beyond, BRA to DONE
0000134A  6700 0032                407          BEQ         DONE_CHECK
0000134E  6F00 002E                408          BLE         DONE_CHECK
00001352                           409          
00001352                           410  
00001352  BBCB                     411          CMP.L       A3, A5
00001354  6700 0008                412          BEQ         PRINT_DELAY
00001358  6F00 0004                413          BLE         PRINT_DELAY
0000135C                           414  
0000135C                           415  
0000135C                           416         
0000135C  60C2                     417          BRA         FILE_LOOP
0000135E                           418  
0000135E                           419  
0000135E                           420  
0000135E                           421  PRINT_DELAY:
0000135E                           422          ; SIMHALT
0000135E  43F9 00002457            423          LEA         NEXT_PAGE_MSG, A1
00001364  103C 000E                424          MOVE.B      #14, D0    
00001368  4E4F                     425          TRAP        #15
0000136A                           426          
0000136A                           427  
0000136A  103C 0005                428          MOVE.B      #5, D0
0000136E  4E4F                     429          TRAP        #15
00001370                           430  
00001370  0C01 000D                431          CMPI.B      #13, D1
00001374  66E8                     432          BNE         PRINT_DELAY
00001376                           433  
00001376  DBFC 00000020            434          ADD.L       #32, A5
0000137C  60A2                     435          BRA         FILE_LOOP
0000137E                           436  
0000137E                           437  
0000137E                           438  DONE_CHECK:
0000137E  43F9 00002388            439          LEA         REPEAT_MSG, A1
00001384  103C 000E                440          MOVE.B      #14, D0    
00001388  4E4F                     441          TRAP        #15
0000138A                           442          
0000138A                           443  
0000138A  103C 0005                444          MOVE.B      #5, D0
0000138E  4E4F                     445          TRAP        #15
00001390                           446  
00001390  0C01 000D                447          CMPI.B      #13, D1
00001394  6600 0006                448          BNE         DONE
00001398                           449          
00001398  6000 FC66                450          BRA         START
0000139C                           451  
0000139C                           452  DONE:   
0000139C  43F9 000023CA            453          LEA         GOODBYE_MSG, A1
000013A2  103C 000E                454          MOVE.B      #14, D0    
000013A6  4E4F                     455          TRAP        #15
000013A8  103C 0009                456          MOVE.B      #9, D0
000013AC  4E4F                     457          TRAP        #15
000013AE                           458          
000013AE                           459          
000013AE                           460          
000013AE                           461  * Put variables and constants here
000013AE                           462                  INCLUDE     'Disassembler_OP_Codes.x68'
000013AE                           463  
000013AE                           464  
000013AE                           465  
000013AE                           466  ; D4 Contains Original hex code
000013AE                           467  ; D3 Contains modified hex code
000013AE                           468  
000013AE                           469  ; D1 is used to bit shift
000013AE                           470  
000013AE                           471  
000013AE                           472  ; D4 = XXXX YYYY YYYY YYYY
000013AE                           473  JUMP_OP_CODE:
000013AE                           474          ; SIMHALT
000013AE  4283                     475          CLR.L       D3
000013B0  2604                     476          MOVE.L      D4, D3
000013B2  4281                     477          CLR.L       D1
000013B4  4282                     478          CLR.L       D2
000013B6  123C 000C                479          MOVE.B      #12, D1
000013BA  E26B                     480          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000013BC                           481  
000013BC                           482  
000013BC  B63C 0000                483          CMP.B       #$0, D3
000013C0  6700 006E                484          BEQ         JUMP_0 
000013C4  B63C 0001                485          CMP.B       #$1, D3
000013C8  6700 007C                486          BEQ         JUMP_1 
000013CC  B63C 0002                487          CMP.B       #$2, D3
000013D0  6700 0082                488          BEQ         JUMP_2
000013D4  B63C 0003                489          CMP.B       #$3, D3
000013D8  6700 0092                490          BEQ         JUMP_3
000013DC  B63C 0004                491          CMP.B       #$4, D3
000013E0  6700 00A2                492          BEQ         JUMP_4
000013E4  B63C 0005                493          CMP.B       #$5, D3
000013E8  6700 00D6                494          BEQ         JUMP_5
000013EC  B63C 0006                495          CMP.B       #$6, D3
000013F0  6700 00E0                496          BEQ         JUMP_6
000013F4  B63C 0007                497          CMP.B       #$7, D3
000013F8  6700 00F6                498          BEQ         JUMP_7
000013FC  B63C 0008                499          CMP.B       #$8, D3
00001400  6700 00F6                500          BEQ         JUMP_8
00001404  B63C 0009                501          CMP.B       #$9, D3
00001408  6700 0454                502          BEQ         OP_CODE_SUB
0000140C  B63C 000B                503          CMP.B       #11, D3
00001410  6700 0110                504          BEQ         JUMP_B ; 
00001414                           505          
00001414  B63C 000C                506          CMP.B       #12, D3
00001418  6700 012E                507          BEQ         JUMP_C ;
0000141C                           508          
0000141C  B63C 000D                509          CMP.B       #13, D3
00001420  6700 0144                510          BEQ         JUMP_D ;
00001424                           511          
00001424  B63C 000E                512          CMP.B       #14, D3
00001428  6700 0158                513          BEQ         JUMP_E ;
0000142C                           514  
0000142C  6000 016A                515          BRA         JUMP_ERROR
00001430                           516  
00001430                           517  
00001430                           518  
00001430                           519  
00001430                           520         
00001430                           521          
00001430                           522  JUMP_0:
00001430                           523          *ORI
00001430  4282                     524          CLR.L       D2
00001432  4EB9 00001648            525          JSR         Bits11to8
00001438  B43C 0000                526          CMP.B       #$0, D2  
0000143C  6700 0300                527          BEQ         OP_CODE_ORI
00001440                           528          
00001440  6000 0164                529          BRA         INVALID_INSTR
00001444  4E75                     530          RTS
00001446                           531          
00001446                           532  JUMP_1:
00001446                           533  
00001446  4EB9 00001690            534          JSR         OP_CODE_BASE_MOVE
0000144C  4EB9 00001B46            535          JSR         EA_MOVE 
00001452  4E75                     536          RTS
00001454                           537  
00001454                           538  
00001454                           539  JUMP_2:
00001454                           540  
00001454  4EB9 00001624            541          JSR         Bits8to6
0000145A  B43C 0001                542          CMP.B       #$1, D2 
0000145E  6700 024E                543          BEQ         J_MOVEA_L 
00001462  6600 026E                544          BNE         J_MOVE_L
00001466                           545  
00001466                           546  
00001466  6000 013E                547          BRA         INVALID_INSTR
0000146A  4E75                     548          RTS
0000146C                           549          
0000146C                           550  JUMP_3:
0000146C                           551  
0000146C  4EB9 00001624            552          JSR         Bits8to6
00001472  0C02 0001                553          CMPI.B       #$1, D2 
00001476  6700 027E                554          BEQ         J_MOVEA_W
0000147A  6600 029E                555          BNE         J_MOVE_W
0000147E                           556      
0000147E  6000 0126                557          BRA INVALID_INSTR
00001482                           558          
00001482  4E75                     559          RTS
00001484                           560  
00001484                           561  JUMP_4:
00001484                           562  
00001484  4282                     563          CLR.L       D2
00001486  3404                     564          MOVE.W      D4, D2
00001488  B47C 4E71                565          CMP.W       #$4E71, D2 ;NOP 
0000148C  6700 02CA                566          BEQ         OP_CODE_NOP
00001490                           567          
00001490  4EB9 00001624            568          JSR         Bits8to6     ;
00001496  B43C 0007                569          CMP.B       #7, D2
0000149A  6700 02DE                570          BEQ         OP_CODE_LEA ;LEA
0000149E                           571  
0000149E  4EB9 00001654            572          JSR         Bits11to9     ;
000014A4  B43C 0007                573          CMP.B       #7, D2
000014A8  6700 02BC                574          BEQ         OP_CODE_JSR ;JSR
000014AC                           575          
000014AC  4EB9 00001630            576          JSR         Bits9to7
000014B2  B43C 0001                577          CMP.B       #1, D2
000014B6  6700 02DC                578          BEQ         OP_CODE_MOVEM
000014BA                           579  
000014BA                           580  
000014BA                           581          
000014BA                           582          
000014BA  6000 00EA                583          BRA INVALID_INSTR
000014BE                           584          
000014BE  4E75                     585          RTS   
000014C0                           586  
000014C0                           587  
000014C0                           588  
000014C0                           589  
000014C0                           590  JUMP_5:
000014C0  4282                     591          CLR.L       D2
000014C2  2404                     592          MOVE.L      D4, D2
000014C4  0802 0008                593          BTST        #8,D2 
000014C8  6700 033A                594          BEQ         OP_CODE_ADDQ  
000014CC  6000 00D8                595          BRA         INVALID_INSTR
000014D0  4E75                     596          RTS  
000014D2                           597  JUMP_6:
000014D2  4282                     598          CLR.L       D2
000014D4  4EB9 00001648            599          JSR     Bits11to8     ;
000014DA  B43C 0000                600          CMP.B   #0, D2        ;
000014DE  6700 0452                601          BEQ     OP_CODE_BRA   ; 
000014E2  B43C 0001                602          CMP.B   #1, D2        ;
000014E6  6700 045E                603          BEQ     OP_CODE_BSR   ;
000014EA                           604  
000014EA  6000 00BA                605          BRA INVALID_INSTR
000014EE                           606  
000014EE  4E75                     607          RTS  
000014F0                           608  JUMP_7:
000014F0                           609          ; CLR.L       D2
000014F0                           610          ; LEA         MOVEQ_MSG, A1
000014F0                           611          ; MOVE.B      #14, D0
000014F0                           612          ; TRAP        #15
000014F0                           613          
000014F0  4EB9 0000195A            614          JSR         OP_CODE_MOVEQ
000014F6                           615          
000014F6                           616          ; BRA         INVALID_INSTR 
000014F6  4E75                     617          RTS
000014F8                           618  
000014F8                           619  JUMP_8:
000014F8  4282                     620          CLR.L       D2
000014FA  4EB9 00001624            621          JSR         Bits8to6  ;
00001500  B43C 0003                622          CMP.B       #3, D2    ;
00001504  6700 0332                623          BEQ         OP_CODE_DIVU ;
00001508  B43C 0007                624          CMP.B       #7, D2    ;
0000150C  6700 0342                625          BEQ         OP_CODE_DIVS ;
00001510  6000 0094                626          BRA         INVALID_INSTR
00001514  4E75                     627          RTS
00001516                           628  
00001516                           629  JUMP_9:
00001516  6000 008E                630          BRA         INVALID_INSTR
0000151A  4E75                     631          RTS         
0000151C                           632  
0000151C                           633  JUMP_A:
0000151C  6000 0088                634          BRA         INVALID_INSTR
00001520  4E75                     635          RTS 
00001522                           636  JUMP_B:
00001522  4282                     637          CLR.L       D2
00001524  4EB9 00001624            638          JSR         Bits8to6  ;
0000152A                           639      ;CHECKING OPMODE FIELD
0000152A  B43C 0000                640          CMP.B       #0, D2   ;
0000152E  6700 02EE                641          BEQ         OP_CODE_CMP ;
00001532  B43C 0001                642          CMP.B       #1, D2    ;
00001536  6700 02E6                643          BEQ         OP_CODE_CMP ;
0000153A  B43C 0002                644          CMP.B       #2, D2    ;
0000153E  6700 02DE                645          BEQ         OP_CODE_CMP ;
00001542  6000 0062                646          BRA         INVALID_INSTR
00001546  4E75                     647          RTS         
00001548                           648  
00001548                           649  JUMP_C:
00001548  4282                     650          CLR.L       D2
0000154A  4EB9 00001624            651          JSR         Bits8to6  ;
00001550  B47C 0003                652          CMP         #3, D2    ;
00001554  6700 0426                653          BEQ         OP_CODE_MULU ;
00001558  B47C 0007                654          CMP         #7, D2   ;
0000155C  6700 0410                655          BEQ         OP_CODE_MULS ;
00001560                           656  
00001560  6000 0044                657          BRA         INVALID_INSTR
00001564  4E75                     658          RTS 
00001566                           659  
00001566                           660  JUMP_D:
00001566  4282                     661          CLR.L       D2
00001568  4EB9 00001600            662          JSR         Bits7to6  ;
0000156E  B43C 0003                663          CMP.B       #3, D2    ;
00001572  6700 0434                664          BEQ         OP_CODE_ADDA
00001576  4EF9 00001990            665          JMP         OP_CODE_ADD
0000157C  6000 0028                666          BRA         INVALID_INSTR
00001580  4E75                     667          RTS 
00001582                           668   
00001582                           669   
00001582                           670  JUMP_E:
00001582  4282                     671          CLR.L       D2
00001584  4EB9 00001600            672          JSR         Bits7to6
0000158A                           673  
0000158A  B43C 0003                674          CMP.B       #3, D2
0000158E  6700 046C                675          BEQ         OP_CODE_ASD_MEM
00001592                           676          
00001592  6000 042C                677          BRA         OP_CODE_ASD_REG
00001596                           678          
00001596  4E75                     679          RTS  
00001598                           680           
00001598                           681  JUMP_ERROR:       
00001598  43F9 00001ABD            682          LEA         ERROR_OP_MSG, A1
0000159E  103C 000E                683          MOVE.B      #14, D0
000015A2  4E4F                     684          TRAP        #15
000015A4                           685  
000015A4  4E75                     686          RTS
000015A6                           687  
000015A6                           688  INVALID_INSTR:
000015A6  43F9 00001AD1            689          LEA         IMPLEMENT_MSG, A1
000015AC  103C 000E                690          MOVE.B      #14, D0
000015B0  4E4F                     691          TRAP        #15
000015B2  4E75                     692          RTS
000015B4                           693  
000015B4                           694  
000015B4                           695  
000015B4                           696  Bits2to0:
000015B4  3404                     697          MOVE.W      D4, D2
000015B6  103C 000D                698          MOVE.B      #13, D0     ; Shifting 13 bits
000015BA  E16A                     699          LSL.W       D0, D2      ; shorten to two bits
000015BC  E06A                     700          LSR.W       D0, D2      ; isolate two bits
000015BE  4E75                     701          RTS
000015C0                           702      
000015C0                           703  Bits3to0:
000015C0  3404                     704          MOVE.W      D4, D2
000015C2  103C 000C                705          MOVE.B      #12, D0     ; Shift 12 bits
000015C6  E16A                     706          LSL.W       D0, D2      ; Shorten to 4th bit
000015C8  E06A                     707          LSR.W       D0, D2      ; Isolate 4 bits
000015CA  4E75                     708          RTS
000015CC                           709      
000015CC                           710  Bits5to3:
000015CC  3404                     711          MOVE.W      D4, D2
000015CE  103C 000A                712          MOVE.B      #10, D0     ; Shift 10 bits
000015D2  E16A                     713          LSL.W       D0, D2      ; cut to 5th bit
000015D4  103C 000D                714          MOVE.B      #13, D0     ; Shift 13 bits
000015D8  E06A                     715          LSR.W       D0, D2      ; Isolate bits 5-3
000015DA  4E75                     716          RTS
000015DC                           717  Bits4to3:
000015DC  3404                     718          MOVE.W      D4, D2
000015DE  103C 000C                719          MOVE.B      #12, D0     ; Shift 12 bits
000015E2  E16A                     720          LSL.W       D0, D2      ; cut to 5th bit
000015E4  103C 000E                721          MOVE.B      #14, D0     ; Shift 14 bits
000015E8  E06A                     722          LSR.W       D0, D2      ; Isolate bits 4-3
000015EA  4E75                     723          RTS
000015EC                           724          
000015EC                           725  Bits7to0:
000015EC  3404                     726          MOVE.W      D4, D2
000015EE  E14A                     727          LSL.W       #8, D2      ; cut to 8th bit
000015F0  E04A                     728          LSR.W       #8, D2      ; Isolate 7-0
000015F2  4E75                     729          RTS
000015F4                           730  Bits7to4: 
000015F4  3404                     731          MOVE.W      D4, D2
000015F6  E14A                     732          LSL.W       #8, D2      ; cut to 8th bit
000015F8  103C 000C                733          MOVE.B      #12, D0     ; shift 12 bits
000015FC  E06A                     734          LSR.W       D0, D2      ; isolate 7-4
000015FE  4E75                     735          RTS
00001600                           736      
00001600                           737  Bits7to6:
00001600  3404                     738          MOVE.W      D4, D2
00001602  E14A                     739          LSL.W       #8, D2      ; cut to 8th bit
00001604  103C 000E                740          MOVE.B      #14, D0     ; shift 14 bits
00001608  E06A                     741          LSR.W       D0, D2      ; isolate 7-6
0000160A  4E75                     742          RTS
0000160C                           743      
0000160C                           744  Bits8to3:
0000160C  3404                     745          MOVE.W      D4, D2
0000160E  EF4A                     746          LSL.W       #7, D2      ; cut to 9th bit
00001610  103C 000A                747          MOVE.B      #10, D0     ; shift 10 bits
00001614  E06A                     748          LSR.W       D0, D2      ; isolate 8-3
00001616  4E75                     749          RTS
00001618                           750      
00001618                           751  Bits8to4:
00001618  3404                     752          MOVE.W      D4, D2
0000161A  EF4A                     753          LSL.W       #7, D2      ; cut to 9th bit
0000161C  103C 000B                754          MOVE.B      #11, D0     ; shift 11 bits
00001620  E06A                     755          LSR.W       D0, D2      ; isolate 8-4
00001622  4E75                     756          RTS
00001624                           757      
00001624                           758  Bits8to6:
00001624  3404                     759          MOVE.W      D4, D2
00001626  EF4A                     760          LSL.W       #7, D2      ; cut to 9th bit
00001628  103C 000D                761          MOVE.B      #13, D0     ; shift 13 bits
0000162C  E06A                     762          LSR.W       D0, D2      ; isolate 8-6
0000162E  4E75                     763          RTS
00001630                           764  Bits9to7:
00001630  3404                     765          MOVE.W      D4, D2
00001632  ED4A                     766          LSL.W       #6, D2      ; cut to 10th bit
00001634  103C 000D                767          MOVE.B      #13, D0     ; shift 13 bits
00001638  E06A                     768          LSR.W       D0, D2      ; isolate 8-6
0000163A  4E75                     769          RTS
0000163C                           770  Bits11to6:
0000163C  3404                     771          MOVE.W      D4, D2
0000163E  E94A                     772          LSL.W       #4, D2      ; cut to 12th bit
00001640  103C 000A                773          MOVE.B      #10, D0     ; shift 10 bits
00001644  E06A                     774          LSR.W       D0, D2      ; isolate 11-6
00001646  4E75                     775          RTS
00001648                           776  
00001648                           777       
00001648                           778  Bits11to8:
00001648  3404                     779          MOVE.W      D4, D2
0000164A  E94A                     780          LSL.W       #4, D2      ; cut to 12th bit
0000164C  103C 000C                781          MOVE.B      #12, D0     ; shift 12 bits
00001650  E06A                     782          LSR.W       D0, D2      ; isolate 11-8
00001652  4E75                     783          RTS
00001654                           784  
00001654                           785  Bits11to9:
00001654  3404                     786          MOVE.W      D4, D2
00001656  E94A                     787          LSL.W       #4, D2      ; cut to 12th bit
00001658  103C 000D                788          MOVE.B      #13, D0     ; shift 13 bits
0000165C  E06A                     789          LSR.W       D0, D2      ; isolate 11-9
0000165E  4E75                     790          RTS
00001660                           791  
00001660                           792  Bit0:
00001660  3404                     793          MOVE.W      D4, D2
00001662  103C 000F                794          MOVE.B      #15, D0
00001666  E16A                     795          LSL.W       D0, D2     
00001668  103C 000F                796          MOVE.B      #15, D0     
0000166C  E06A                     797          LSR.W       D0, D2     
0000166E  4E75                     798          RTS
00001670                           799  
00001670                           800  Bit5:
00001670  3404                     801          MOVE.W      D4, D2
00001672  103C 000A                802          MOVE.B      #10, D0
00001676  E16A                     803          LSL.W       D0, D2     
00001678  103C 000F                804          MOVE.B      #15, D0     
0000167C  E06A                     805          LSR.W       D0, D2     
0000167E  4E75                     806          RTS
00001680                           807          
00001680                           808  Bit6:
00001680  3404                     809          MOVE.W      D4, D2
00001682  103C 000B                810          MOVE.B      #11, D0
00001686  E16A                     811          LSL.W       D0, D2     
00001688  103C 000F                812          MOVE.B      #15, D0     
0000168C  E06A                     813          LSR.W       D0, D2     
0000168E  4E75                     814          RTS        
00001690                           815  
00001690                           816  
00001690                           817  
00001690                           818  OP_CODE_BASE_MOVE:
00001690                           819          ; This should only execute for Move.B
00001690  43F9 00001A4D            820          LEA         MOVE_MSG, A1
00001696  103C 000E                821          MOVE.B      #14, D0
0000169A  4E4F                     822          TRAP        #15
0000169C  43F9 00001AB4            823          LEA         BYTE_MSG, A1
000016A2  103C 000E                824          MOVE.B      #14, D0
000016A6  4E4F                     825          TRAP        #15
000016A8                           826          
000016A8  163C 0000                827          MOVE.B      #0, D3
000016AC                           828          
000016AC                           829          
000016AC                           830          
000016AC  4E75                     831          RTS         
000016AE                           832  
000016AE                           833  J_MOVEA_L:
000016AE  43F9 00001A52            834          LEA         MOVEA_MSG, A1
000016B4  103C 000E                835          MOVE.B      #14, D0
000016B8  4E4F                     836          TRAP        #15
000016BA  43F9 00001ABA            837          LEA         LONG_MSG, A1
000016C0  103C 000E                838          MOVE.B      #14, D0
000016C4  4E4F                     839          TRAP        #15
000016C6                           840          
000016C6  163C 0002                841          MOVE.B      #2, D3
000016CA  4EB9 00001B46            842          JSR         EA_MOVE
000016D0  4E75                     843          RTS    
000016D2                           844  J_MOVE_L:
000016D2  43F9 00001A4D            845          LEA         MOVE_MSG, A1
000016D8  103C 000E                846          MOVE.B      #14, D0
000016DC  4E4F                     847          TRAP        #15
000016DE  43F9 00001ABA            848          LEA         LONG_MSG, A1
000016E4  103C 000E                849          MOVE.B      #14, D0
000016E8  4E4F                     850          TRAP        #15
000016EA                           851          
000016EA  163C 0002                852          MOVE.B      #2, D3
000016EE  4EB9 00001B46            853          JSR         EA_MOVE
000016F4                           854          
000016F4  4E75                     855          RTS
000016F6                           856  
000016F6                           857  
000016F6                           858  
000016F6                           859  J_MOVEA_W:
000016F6  43F9 00001A52            860          LEA         MOVEA_MSG, A1
000016FC  103C 000E                861          MOVE.B      #14, D0
00001700  4E4F                     862          TRAP        #15
00001702  43F9 00001AB7            863          LEA         WORD_MSG, A1
00001708  103C 000E                864          MOVE.B      #14, D0
0000170C  4E4F                     865          TRAP        #15
0000170E                           866          
0000170E  163C 0001                867          MOVE.B      #1, D3
00001712  4EB9 00001B46            868          JSR         EA_MOVE
00001718                           869          
00001718  4E75                     870          RTS  
0000171A                           871      
0000171A                           872  J_MOVE_W:
0000171A  43F9 00001A4D            873          LEA         MOVE_MSG, A1
00001720  103C 000E                874          MOVE.B      #14, D0
00001724  4E4F                     875          TRAP        #15
00001726  43F9 00001AB7            876          LEA         WORD_MSG, A1
0000172C  103C 000E                877          MOVE.B      #14, D0
00001730  4E4F                     878          TRAP        #15
00001732                           879          
00001732  163C 0001                880          MOVE.B      #1, D3
00001736  4EB9 00001B46            881          JSR         EA_MOVE
0000173C                           882          
0000173C  4E75                     883          RTS  
0000173E                           884  
0000173E                           885  OP_CODE_ORI:
0000173E  43F9 00001A58            886          LEA         ORI_MSG, A1
00001744  103C 000E                887          MOVE.B      #14, D0
00001748  4E4F                     888          TRAP        #15
0000174A                           889          
0000174A  4EB9 000018CC            890          JSR         OPMODE_ASHIFT
00001750                           891          
00001750  4EB9 00001BAC            892          JSR         ABS_DATASRC_EA
00001756                           893  
00001756  4E75                     894          RTS
00001758                           895  
00001758                           896  
00001758                           897  OP_CODE_NOP:
00001758  43F9 00001A5C            898          LEA         NOP_MSG, A1
0000175E  103C 000E                899          MOVE.B      #14, D0
00001762  4E4F                     900          TRAP        #15
00001764                           901  
00001764  4E75                     902          RTS
00001766                           903             
00001766                           904  
00001766                           905  OP_CODE_JSR:
00001766  43F9 00001A6A            906          LEA         JSR_MSG, A1
0000176C  103C 000E                907          MOVE.B      #14, D0
00001770  4E4F                     908          TRAP        #15
00001772                           909          
00001772  4EB9 00001B80            910          JSR         EA_GENERIC
00001778                           911  
00001778  4E75                     912          RTS
0000177A                           913          
0000177A                           914  OP_CODE_LEA:
0000177A  43F9 00001A66            915          LEA         LEA_MSG, A1
00001780  103C 000E                916          MOVE.B      #14, D0
00001784  4E4F                     917          TRAP        #15
00001786                           918          
00001786  4283                     919          CLR.L       D3
00001788  163C 0002                920          MOVE.B      #2, D3
0000178C                           921  
0000178C                           922          *EA
0000178C  4EB9 00001C06            923          JSR         EA_ASRC
00001792                           924  
00001792  4E75                     925          RTS
00001794                           926  
00001794                           927  OP_CODE_MOVEM:
00001794                           928          ;JSR         Bits9to7 ;check for MOVEM and EXT
00001794                           929          ;CMP.B       #1, D2   ;
00001794                           930          ;BEQ         MOVEM_OR_EXT
00001794                           931          ;JMP         INVALID_INSTR 
00001794  0802 0006                932          BTST        #6, D2
00001798  6700 0014                933          BEQ         MOVEM_W
0000179C  6000 0034                934          BRA         MOVEM_L
000017A0                           935          
000017A0                           936          
000017A0  4E75                     937          RTS
000017A2                           938          
000017A2                           939          
000017A2                           940  MOVEM_OR_EXT:
000017A2  4EB8 15CC                941          JSR         Bits5to3  ;
000017A6  B43C 0000                942          CMP.B       #0, D2    ;
000017AA  6700 004A                943          BEQ         OP_CODE_EXT ;
000017AE                           944          
000017AE                           945          ;MOVE.W      D4, D2
000017AE                           946          ;BTST        #10, D2
000017AE                           947          ;BEQ         MOVEM_SIZE
000017AE                           948          
000017AE                           949          
000017AE                           950  MOVEM_W:
000017AE  43F9 00001A60            951          LEA         MOVEM_MSG, A1
000017B4  103C 000E                952          MOVE.B      #14, D0
000017B8  4E4F                     953          TRAP        #15
000017BA  43F9 00001AB7            954          LEA         WORD_MSG, A1
000017C0  103C 000E                955          MOVE.B      #14, D0
000017C4  4E4F                     956          TRAP        #15
000017C6                           957          
000017C6  163C 0001                958          MOVE.B      #1, D3
000017CA                           959    
000017CA  4EB9 00001CD8            960          JSR         EA_MOVEM
000017D0  4E75                     961          RTS
000017D2                           962          
000017D2                           963  MOVEM_L:
000017D2  43F9 00001A60            964          LEA         MOVEM_MSG, A1
000017D8  103C 000E                965          MOVE.B      #14, D0
000017DC  4E4F                     966          TRAP        #15
000017DE  43F9 00001ABA            967          LEA         LONG_MSG, A1
000017E4  103C 000E                968          MOVE.B      #14, D0
000017E8  4E4F                     969          TRAP        #15 
000017EA  163C 0002                970          MOVE.B      #2, D3
000017EE                           971    
000017EE  4EB9 00001B46            972          JSR         EA_MOVE
000017F4                           973          
000017F4                           974          
000017F4  4E75                     975          RTS   
000017F6                           976           
000017F6                           977  OP_CODE_EXT:
000017F6  43F9 00001AAA            978          LEA         EXT_MSG, A1
000017FC  103C 000E                979          MOVE.B      #14, D0
00001800  4E4F                     980          TRAP        #15
00001802  4E75                     981          RTS
00001804                           982  
00001804                           983  
00001804                           984  ;MOVEM_CHECK:
00001804                           985  ;        CLR.L       D2
00001804                           986  ;        MOVE.L      D4, D2
00001804                           987  ;        BTST        #11,D2 ;
00001804                           988  ;        BNE         OP_CODE_MOVEM
00001804                           989  ;        JMP         INVALID_INSTR               
00001804                           990  
00001804                           991  
00001804                           992  OP_CODE_ADDQ:
00001804  43F9 00001A48            993          LEA         ADDQ_MSG, A1
0000180A  103C 000E                994          MOVE.B      #14, D0
0000180E  4E4F                     995          TRAP        #15
00001810                           996          
00001810  4EB9 000018CC            997          JSR         OPMODE_ASHIFT
00001816                           998          
00001816  4EB9 00001F50            999          JSR         EA_ADDQ
0000181C                          1000          
0000181C  4E75                    1001          RTS
0000181E                          1002          
0000181E                          1003   
0000181E                          1004  OP_CODE_CMP:
0000181E                          1005  
0000181E  43F9 00001A8B           1006          LEA         CMP_MSG, A1
00001824  103C 000E               1007          MOVE.B      #14, D0
00001828  4E4F                    1008          TRAP        #15
0000182A                          1009          
0000182A  4EB9 00001878           1010          JSR         OPMODE
00001830  4EB9 00001BC4           1011          JSR         REVERSESRC_EA
00001836                          1012          
00001836  4E75                    1013          RTS
00001838                          1014          
00001838                          1015  OP_CODE_DIVU:
00001838  43F9 00001A7D           1016          LEA         DIVU_MSG, A1
0000183E  103C 000E               1017          MOVE.B      #14, D0
00001842  4E4F                    1018          TRAP        #15
00001844                          1019          
00001844  163C 0001               1020          MOVE.B      #1, D3        
00001848  4EB9 00001C28           1021          JSR         EA_DSRC
0000184E                          1022          
0000184E  4E75                    1023          RTS
00001850                          1024          
00001850                          1025  OP_CODE_DIVS:
00001850  43F9 00001A82           1026          LEA         DIVS_MSG, A1
00001856  103C 000E               1027          MOVE.B      #14, D0
0000185A  4E4F                    1028          TRAP        #15
0000185C  4E75                    1029          RTS
0000185E                          1030  
0000185E                          1031  OP_CODE_SUB:
0000185E  43F9 00001A87           1032          LEA         SUB_MSG, A1
00001864  103C 000E               1033          MOVE.B      #14, D0
00001868  4E4F                    1034          TRAP        #15
0000186A                          1035          
0000186A  4EB9 00001878           1036          JSR         OPMODE
00001870                          1037          
00001870  4EB9 00001BC4           1038          JSR         REVERSESRC_EA
00001876                          1039          
00001876  4E75                    1040          RTS
00001878                          1041          
00001878                          1042  OPMODE:
00001878  4EB8 1624               1043          JSR         Bits8to6
0000187C  B43C 0000               1044          CMP.B       #0, D2
00001880  6700 006C               1045          BEQ         PRINT_BYTE
00001884  B43C 0004               1046          CMP.B       #4, D2
00001888  6700 0064               1047          BEQ         PRINT_BYTE
0000188C                          1048          
0000188C  B43C 0001               1049          CMP.B       #1, D2
00001890  6700 006E               1050          BEQ         PRINT_WORD
00001894  B43C 0005               1051          CMP.B       #5, D2
00001898  6700 0066               1052          BEQ         PRINT_WORD
0000189C                          1053          
0000189C  B43C 0002               1054          CMP.B       #2, D2
000018A0  6700 0070               1055          BEQ         PRINT_LONG
000018A4  B43C 0006               1056          CMP.B       #6, D2
000018A8  6700 0068               1057          BEQ         PRINT_LONG
000018AC                          1058          
000018AC  4EB9 00001924           1059          JSR         WRONG_SIZE
000018B2                          1060          
000018B2                          1061  OPMODE_ADDA:
000018B2  4EB8 1624               1062          JSR         Bits8to6
000018B6  B43C 0003               1063          CMP.B       #3, D2
000018BA  6700 0044               1064          BEQ         PRINT_WORD 
000018BE  B43C 0007               1065          CMP.B       #7, D2
000018C2  6700 004E               1066          BEQ         PRINT_LONG
000018C6  4EB9 00001924           1067          JSR         WRONG_SIZE        
000018CC                          1068  
000018CC                          1069  OPMODE_ASHIFT:
000018CC  4EB8 1600               1070          JSR         Bits7to6
000018D0  B43C 0000               1071          CMP.B       #0, D2
000018D4  6700 0018               1072          BEQ         PRINT_BYTE
000018D8  B43C 0001               1073          CMP.B       #1, D2
000018DC  6700 0022               1074          BEQ         PRINT_WORD
000018E0  B43C 0002               1075          CMP.B       #2, D2
000018E4  6700 002C               1076          BEQ         PRINT_LONG
000018E8                          1077  
000018E8  4EB9 00001924           1078          JSR         WRONG_SIZE
000018EE                          1079          
000018EE                          1080  PRINT_BYTE:
000018EE  43F9 00001AB4           1081          LEA         BYTE_MSG, A1
000018F4  103C 000E               1082          MOVE.B      #14, D0
000018F8  4E4F                    1083          TRAP        #15
000018FA                          1084          
000018FA  163C 0000               1085          MOVE.B      #0, D3
000018FE  4E75                    1086          RTS
00001900                          1087  
00001900                          1088  PRINT_WORD:
00001900  43F9 00001AB7           1089          LEA         WORD_MSG, A1
00001906  103C 000E               1090          MOVE.B      #14, D0
0000190A  4E4F                    1091          TRAP        #15
0000190C  163C 0001               1092          MOVE.B      #1, D3
00001910  4E75                    1093          RTS
00001912                          1094  
00001912                          1095  PRINT_LONG:
00001912  43F9 00001ABA           1096          LEA         LONG_MSG, A1
00001918  103C 000E               1097          MOVE.B      #14, D0
0000191C  4E4F                    1098          TRAP        #15
0000191E  163C 0002               1099          MOVE.B      #2, D3
00001922  4E75                    1100          RTS
00001924                          1101  
00001924                          1102  WRONG_SIZE:
00001924  43F9 00001AFD           1103          LEA         ERROR_SIZE_MSG, A1
0000192A  103C 000E               1104          MOVE.B      #14, D0
0000192E  4E4F                    1105          TRAP        #15
00001930  4E75                    1106          RTS
00001932                          1107          
00001932                          1108  OP_CODE_BRA:
00001932  43F9 00001A6E           1109          LEA         BRA_MSG, A1
00001938  103C 000E               1110          MOVE.B      #14, D0
0000193C  4E4F                    1111          TRAP        #15
0000193E                          1112          
0000193E  4EB9 00001E5C           1113          JSR         EA_BRA
00001944                          1114          
00001944  4E75                    1115          RTS
00001946                          1116  
00001946                          1117  OP_CODE_BSR:
00001946  43F9 00001A72           1118          LEA         BSR_MSG, A1
0000194C  103C 000E               1119          MOVE.B      #14, D0
00001950  4E4F                    1120          TRAP        #15
00001952                          1121          
00001952  4EB9 00001E5C           1122          JSR         EA_BRA
00001958                          1123          
00001958  4E75                    1124          RTS
0000195A                          1125          
0000195A                          1126  OP_CODE_MOVEQ:
0000195A  43F9 00001A76           1127          LEA         MOVEQ_MSG, A1
00001960  103C 000E               1128          MOVE.B      #14, D0
00001964  4E4F                    1129          TRAP        #15
00001966                          1130          
00001966  4EB9 00001F0E           1131          JSR         EA_MOVEQ
0000196C                          1132          
0000196C  4E75                    1133          RTS
0000196E                          1134  
0000196E                          1135  OP_CODE_MULS:
0000196E  43F9 00001A94           1136          LEA         MULS_MSG, A1
00001974  103C 000E               1137          MOVE.B      #14, D0
00001978  4E4F                    1138          TRAP        #15
0000197A  4E75                    1139          RTS
0000197C                          1140          
0000197C                          1141  OP_CODE_MULU:
0000197C  43F9 00001A8F           1142          LEA         MULU_MSG, A1
00001982  103C 000E               1143          MOVE.B      #14, D0
00001986  4E4F                    1144          TRAP        #15
00001988                          1145          
00001988  4EB9 00001BC4           1146          JSR         REVERSESRC_EA
0000198E  4E75                    1147          RTS
00001990                          1148  
00001990                          1149  OP_CODE_ADD:
00001990  43F9 00001A99           1150          LEA         ADD_MSG, A1
00001996  103C 000E               1151          MOVE.B      #14, D0
0000199A  4E4F                    1152          TRAP        #15
0000199C                          1153          
0000199C  4EB8 1878               1154          JSR         OPMODE
000019A0  4EB9 00001BE2           1155          JSR         EA_ADD
000019A6                          1156          
000019A6  4E75                    1157          RTS
000019A8                          1158          
000019A8                          1159  OP_CODE_ADDA:
000019A8  43F9 00001A9D           1160          LEA         ADDA_MSG, A1
000019AE  103C 000E               1161          MOVE.B      #14, D0
000019B2  4E4F                    1162          TRAP        #15
000019B4                          1163          
000019B4  4EB8 18B2               1164          JSR         OPMODE_ADDA
000019B8  4EB9 00001C06           1165          JSR         EA_ASRC
000019BE                          1166          
000019BE  4E75                    1167          RTS
000019C0                          1168          
000019C0                          1169        
000019C0                          1170  OP_CODE_ASD_REG:
000019C0  4282                    1171          CLR.L       D2
000019C2  3404                    1172          MOVE.W      D4, D2
000019C4  0802 0008               1173          BTST        #8, D2
000019C8  6600 001A               1174          BNE         OP_CODE_ASR_REG
000019CC  43F9 00001AA2           1175          LEA         ASL_MSG, A1
000019D2  103C 000E               1176          MOVE.B      #14, D0
000019D6  4E4F                    1177          TRAP        #15
000019D8                          1178          
000019D8  4EB8 18CC               1179          JSR         OPMODE_ASHIFT
000019DC                          1180          
000019DC  4EB9 00001C4A           1181          JSR         EA_AS
000019E2                          1182          
000019E2  4E75                    1183          RTS
000019E4                          1184  
000019E4                          1185          
000019E4                          1186  OP_CODE_ASR_REG:
000019E4  43F9 00001AA6           1187          LEA         ASR_MSG, A1
000019EA  103C 000E               1188          MOVE.B      #14, D0
000019EE  4E4F                    1189          TRAP        #15
000019F0  4EB8 18CC               1190          JSR         OPMODE_ASHIFT
000019F4                          1191          
000019F4  4EB9 00001C4A           1192          JSR         EA_AS
000019FA                          1193          
000019FA  4E75                    1194          RTS
000019FC                          1195  
000019FC                          1196          
000019FC                          1197          
000019FC                          1198  
000019FC                          1199  OP_CODE_ASD_MEM:
000019FC  4282                    1200          CLR.L       D2
000019FE  3404                    1201          MOVE.W      D4, D2
00001A00  0802 0008               1202          BTST        #8, D2
00001A04  6700 0022               1203          BEQ         OP_CODE_ASR_MEM
00001A08                          1204         
00001A08  43F9 00001AA2           1205          LEA         ASL_MSG, A1
00001A0E  103C 000E               1206          MOVE.B      #14, D0
00001A12  4E4F                    1207          TRAP        #15
00001A14                          1208          
00001A14  43F9 00002423           1209          LEA         SPACE_MSG, A1
00001A1A  103C 000E               1210          MOVE.B      #14, D0
00001A1E  4E4F                    1211          TRAP        #15
00001A20                          1212          
00001A20  4EB9 00001B80           1213          JSR         EA_GENERIC
00001A26                          1214          
00001A26  4E75                    1215          RTS
00001A28                          1216        
00001A28                          1217  OP_CODE_ASR_MEM:
00001A28  43F9 00001AA6           1218          LEA         ASR_MSG, A1
00001A2E  103C 000E               1219          MOVE.B      #14, D0
00001A32  4E4F                    1220          TRAP        #15
00001A34                          1221          
00001A34  43F9 00002423           1222          LEA         SPACE_MSG, A1
00001A3A  103C 000E               1223          MOVE.B      #14, D0
00001A3E  4E4F                    1224          TRAP        #15
00001A40                          1225          
00001A40  4EB9 00001B80           1226          JSR         EA_GENERIC
00001A46  4E75                    1227          RTS
00001A48                          1228  
00001A48                          1229          
00001A48                          1230          
00001A48                          1231  
00001A48                          1232  
00001A48                          1233  
00001A48                          1234  
00001A48= 41 44 44 51 00          1235  ADDQ_MSG:       DC.B        'ADDQ',0
00001A4D= 4D 4F 56 45 00          1236  MOVE_MSG:       DC.B        'MOVE',0
00001A52= 4D 4F 56 45 41 00       1237  MOVEA_MSG:      DC.B        'MOVEA',0
00001A58= 4F 52 49 00             1238  ORI_MSG:        DC.B        'ORI',0
00001A5C= 4E 4F 50 00             1239  NOP_MSG:        DC.B        'NOP',0
00001A60= 4D 4F 56 45 4D 00       1240  MOVEM_MSG:      DC.B        'MOVEM',0
00001A66= 4C 45 41 00             1241  LEA_MSG:        DC.B        'LEA',0
00001A6A= 4A 53 52 00             1242  JSR_MSG:        DC.B        'JSR',0
00001A6E= 42 52 41 00             1243  BRA_MSG:        DC.B        'BRA',0
00001A72= 42 53 52 00             1244  BSR_MSG:        DC.B        'BSR',0
00001A76= 4D 4F 56 45 51 20 00    1245  MOVEQ_MSG:      DC.B        'MOVEQ ',0
00001A7D= 44 49 56 55 00          1246  DIVU_MSG:       DC.B        'DIVU',0
00001A82= 44 49 56 53 00          1247  DIVS_MSG:       DC.B        'DIVS',0
00001A87= 53 55 42 00             1248  SUB_MSG:        DC.B        'SUB',0
00001A8B= 43 4D 50 00             1249  CMP_MSG:        DC.B        'CMP',0
00001A8F= 4D 55 4C 55 00          1250  MULU_MSG:       DC.B        'MULU',0
00001A94= 4D 55 4C 53 00          1251  MULS_MSG:       DC.B        'MULS',0
00001A99= 41 44 44 00             1252  ADD_MSG:        DC.B        'ADD',0
00001A9D= 41 44 44 41 00          1253  ADDA_MSG:       DC.B        'ADDA',0
00001AA2= 41 53 4C 00             1254  ASL_MSG:        DC.B        'ASL',0
00001AA6= 41 53 52 00             1255  ASR_MSG:        DC.B        'ASR',0
00001AAA= 45 58 54 00             1256  EXT_MSG:        DC.B        'EXT',0
00001AAE= 23 00                   1257  POUND:          DC.B        '#',0
00001AB0= 24 00                   1258  DOLLAR:         DC.B        '$',0
00001AB2= 25 00                   1259  PERCENT:        DC.B        '%',0
00001AB4                          1260  
00001AB4                          1261  ; Size messages
00001AB4                          1262  
00001AB4= 2E 42 00                1263  BYTE_MSG:       DC.B        '.B',0
00001AB7= 2E 57 00                1264  WORD_MSG:       DC.B        '.W',0
00001ABA= 2E 4C 00                1265  LONG_MSG:       DC.B        '.L',0
00001ABD= 4E 6F 74 20 41 20 ...   1266  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
00001AD1= 4F 50 20 63 6F 64 ...   1267  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001AED= 49 4E 56 41 4C 49 ...   1268  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001AFD= 49 4E 56 41 4C 49 ...   1269  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
00001B13                          1270  
00001B13                          1271  
00001B13                          1272  
00001B13                          1273  
00001B13                          1274  
00001B13                          1275  
00001B13                          1276  
00001B13                          1277  
00001B13                          1278  
00001B13                          1279  
00001B13                          1280  
00001B13                          1281  
00001B13                          1282  
00001B13                          1283  
00001B13                          1284  
00001B13                          1285  
00001B13                          1286  
00001B13                          1287  
00001B13                          1288  
00001B13                          1289  
00001B13                          1290  
00001B13                          1291  
00001B13                          1292  
00001B13                          1293  
00001B13                          1294  
00001B13                          1295  -------------------- end include --------------------
00001B13= 45 6E 74 65 72 20 ...   1296                  START_MSG:      DC.B        'Enter a starting address:',0
00001B2D= 45 6E 74 65 72 20 ...   1297                  END_MSG:        DC.B        'Enter an ending address:',0
00001B46                          1298                  INCLUDE     'Disassembler_EA_Codes.x68'
00001B46                          1299  
00001B46                          1300  
00001B46                          1301  ; D3 = OP size. ie. Byte, Word, Long
00001B46                          1302  ; D4 = Original hex code
00001B46                          1303  ; D5 = Current Mode being isolated
00001B46                          1304  ; D6 = Current Register being isolated
00001B46                          1305  
00001B46                          1306  ; A3 will store starting address
00001B46                          1307  ; A4 will store ending address
00001B46                          1308  
00001B46                          1309  
00001B46                          1310  
00001B46                          1311  ; based on the size of the move operation Print out an amount of data as is.
00001B46                          1312  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001B46                          1313  EA_MOVE:
00001B46  4285                    1314          CLR.L       D5
00001B48  4286                    1315          CLR.L       D6
00001B4A  4EB8 15CC               1316          JSR         Bits5to3
00001B4E  1A02                    1317          MOVE.B      D2, D5
00001B50  4EB8 15B4               1318          JSR         Bits2to0
00001B54  1C02                    1319          MOVE.B      D2, D6
00001B56  4EB9 00001F9C           1320          JSR         MODE_TABLE
00001B5C                          1321          
00001B5C  43F9 00002326           1322          LEA         SEPERATOR, A1
00001B62  103C 000E               1323          MOVE.B      #14, D0
00001B66  4E4F                    1324          TRAP        #15
00001B68                          1325          
00001B68  4285                    1326          CLR.L       D5
00001B6A  4286                    1327          CLR.L       D6
00001B6C                          1328  
00001B6C  4EB8 1624               1329          JSR         Bits8to6
00001B70  1A02                    1330          MOVE.B      D2, D5
00001B72  4EB8 1654               1331          JSR         Bits11to9
00001B76  1C02                    1332          MOVE.B      D2, D6
00001B78  4EB9 00001F9C           1333          JSR         MODE_TABLE
00001B7E                          1334          
00001B7E  4E75                    1335          RTS
00001B80                          1336          
00001B80                          1337  EA_GENERIC:
00001B80                          1338      
00001B80  4EB8 15CC               1339          JSR         Bits5to3
00001B84  1A02                    1340          MOVE.B      D2, D5
00001B86  4EB8 15B4               1341          JSR         Bits2to0
00001B8A  1C02                    1342          MOVE.B      D2, D6
00001B8C  4EB9 00001F9C           1343          JSR         MODE_TABLE
00001B92                          1344  
00001B92  4E75                    1345          RTS
00001B94                          1346          
00001B94                          1347          ; #data, ea
00001B94                          1348  DATASRC_EA:
00001B94                          1349          
00001B94  4EB9 00002068           1350          JSR         J_ABS_TABLE
00001B9A                          1351          
00001B9A                          1352          ; Print Out ", "
00001B9A  43F9 00002326           1353          LEA         SEPERATOR, A1
00001BA0  103C 000E               1354          MOVE.B      #14, D0
00001BA4  4E4F                    1355          TRAP        #15
00001BA6                          1356          
00001BA6  4EB8 1B80               1357          JSR         EA_GENERIC
00001BAA                          1358          
00001BAA  4E75                    1359          RTS
00001BAC                          1360          
00001BAC                          1361  ABS_DATASRC_EA:
00001BAC                          1362  
00001BAC  4EB9 000020F8           1363          JSR         DATA_TABLE
00001BB2                          1364          
00001BB2                          1365          ; Print Out ", "
00001BB2  43F9 00002326           1366          LEA         SEPERATOR, A1
00001BB8  103C 000E               1367          MOVE.B      #14, D0
00001BBC  4E4F                    1368          TRAP        #15
00001BBE                          1369          
00001BBE  4EB8 1B80               1370          JSR         EA_GENERIC
00001BC2                          1371  
00001BC2                          1372  
00001BC2                          1373  
00001BC2  4E75                    1374          RTS        
00001BC4                          1375  
00001BC4                          1376  
00001BC4                          1377          
00001BC4                          1378  REVERSESRC_EA:
00001BC4                          1379      
00001BC4  4EB8 1B80               1380          JSR         EA_GENERIC
00001BC8  43F9 00002326           1381          LEA         SEPERATOR, A1
00001BCE  103C 000E               1382          MOVE.B      #14, D0
00001BD2  4E4F                    1383          TRAP        #15
00001BD4                          1384          
00001BD4  4EB8 1654               1385          JSR         Bits11to9
00001BD8  1C02                    1386          MOVE.B      D2, D6
00001BDA  4EB9 00001F9C           1387          JSR         MODE_TABLE
00001BE0  4E75                    1388          RTS        
00001BE2                          1389  EA_ADD:
00001BE2  4EB8 1B80               1390          JSR         EA_GENERIC
00001BE6  43F9 00002326           1391          LEA         SEPERATOR, A1
00001BEC  103C 000E               1392          MOVE.B      #14, D0
00001BF0  4E4F                    1393          TRAP        #15
00001BF2                          1394  
00001BF2  4EB8 1654               1395          JSR         Bits11to9
00001BF6  1C02                    1396          MOVE.B      D2, D6
00001BF8  4EB8 1624               1397          JSR         Bits8to6
00001BFC  1A02                    1398          MOVE.B      D2, D5
00001BFE                          1399          
00001BFE  4EB9 00001F9C           1400          JSR         MODE_TABLE
00001C04  4E75                    1401          RTS  
00001C06                          1402          
00001C06                          1403          
00001C06                          1404          
00001C06                          1405          ; ea, A source
00001C06                          1406  EA_ASRC:
00001C06  4EB8 1B80               1407          JSR         EA_GENERIC
00001C0A                          1408          
00001C0A                          1409          ; Print Out ", "
00001C0A  43F9 00002326           1410          LEA         SEPERATOR, A1
00001C10  103C 000E               1411          MOVE.B      #14, D0
00001C14  4E4F                    1412          TRAP        #15
00001C16                          1413  
00001C16  1A3C 0001               1414          MOVE.B      #1, D5
00001C1A  4EB8 1654               1415          JSR         Bits11to9
00001C1E  1C02                    1416          MOVE.B      D2, D6
00001C20                          1417          
00001C20  4EB9 00001F9C           1418          JSR         MODE_TABLE
00001C26                          1419  
00001C26  4E75                    1420          RTS
00001C28                          1421          ; ea, D source
00001C28                          1422  EA_DSRC:
00001C28  4EB8 1B80               1423          JSR         EA_GENERIC
00001C2C                          1424          
00001C2C                          1425          ; Print Out ", "
00001C2C  43F9 00002326           1426          LEA         SEPERATOR, A1
00001C32  103C 000E               1427          MOVE.B      #14, D0
00001C36  4E4F                    1428          TRAP        #15
00001C38                          1429  
00001C38  1A3C 0000               1430          MOVE.B      #0, D5
00001C3C  4EB8 1654               1431          JSR         Bits11to9
00001C40  1C02                    1432          MOVE.B      D2, D6
00001C42                          1433          
00001C42  4EB9 00001F9C           1434          JSR         MODE_TABLE
00001C48                          1435  
00001C48  4E75                    1436          RTS
00001C4A                          1437  ;EA_AS_MEM:
00001C4A                          1438  
00001C4A                          1439  ;        JSR         Bits5to3
00001C4A                          1440  ;        MOVE.B      D2, D5
00001C4A                          1441  ;        JSR         ASD_MEM_MODE_CHECK
00001C4A                          1442  ;        MOVE.B      D2, D6
00001C4A                          1443  ;        JSR         MODE_TABLE
00001C4A                          1444  
00001C4A                          1445  ;        RTS
00001C4A                          1446  
00001C4A                          1447  
00001C4A                          1448          
00001C4A                          1449  EA_AS:
00001C4A                          1450  
00001C4A  4EB8 1670               1451          JSR         Bit5
00001C4E  B43C 0000               1452          CMP.B       #0, D2
00001C52  6700 0008               1453          BEQ         AS_COUNT
00001C56                          1454          
00001C56  6000 0042               1455          BRA         AS_REGISTER
00001C5A                          1456          
00001C5A  4E75                    1457          RTS    
00001C5C                          1458          
00001C5C                          1459  AS_COUNT:
00001C5C  43F9 00002328           1460          LEA         POUND_MSG, A1
00001C62  103C 000E               1461          MOVE.B      #14, D0    
00001C66  4E4F                    1462          TRAP        #15
00001C68  4EB8 1654               1463          JSR         Bits11to9
00001C6C  B43C 0000               1464          CMP.B       #0, D2
00001C70  6700 030C               1465          BEQ         AS_FIX
00001C74  1C02                    1466          MOVE.B      D2, D6
00001C76  4EB9 0000205E           1467          JSR         DISPLAY_REG
00001C7C                          1468          
00001C7C  43F9 00002326           1469          LEA         SEPERATOR, A1
00001C82  103C 000E               1470          MOVE.B      #14, D0
00001C86  4E4F                    1471          TRAP        #15
00001C88                          1472          
00001C88  1A3C 0000               1473          MOVE.B      #0, D5
00001C8C  4EB8 15B4               1474          JSR         Bits2to0
00001C90  1C02                    1475          MOVE.B      D2, D6
00001C92                          1476          
00001C92  4EB9 00001F9C           1477          JSR         MODE_TABLE
00001C98                          1478  
00001C98                          1479  
00001C98  4E75                    1480          RTS
00001C9A                          1481          
00001C9A                          1482  AS_REGISTER:
00001C9A                          1483  
00001C9A  43F9 00002310           1484          LEA         MODE_0_MSG, A1
00001CA0  103C 000E               1485          MOVE.B      #14, D0    
00001CA4  4E4F                    1486          TRAP        #15
00001CA6  4EB8 1654               1487          JSR         Bits11to9
00001CAA  B43C 0000               1488          CMP.B       #0, D2
00001CAE  6700 02CE               1489          BEQ         AS_FIX
00001CB2  1C02                    1490          MOVE.B      D2, D6
00001CB4  4EB9 0000205E           1491          JSR         DISPLAY_REG
00001CBA                          1492  
00001CBA  43F9 00002326           1493          LEA         SEPERATOR, A1
00001CC0  103C 000E               1494          MOVE.B      #14, D0
00001CC4  4E4F                    1495          TRAP        #15
00001CC6                          1496          
00001CC6  1A3C 0000               1497          MOVE.B      #0, D5
00001CCA  4EB8 15B4               1498          JSR         Bits2to0
00001CCE  1C02                    1499          MOVE.B      D2, D6
00001CD0                          1500          
00001CD0  4EB9 00001F9C           1501          JSR         MODE_TABLE
00001CD6                          1502  
00001CD6  4E75                    1503          RTS 
00001CD8                          1504      
00001CD8                          1505  EA_MOVEM:
00001CD8  2404                    1506          MOVE.L      D4, D2
00001CDA  0802 000A               1507          BTST        #10,D2 
00001CDE  6700 0008               1508          BEQ         MOVEM_REG
00001CE2  6000 0038               1509          BRA         MOVEM_SRC
00001CE6                          1510  
00001CE6  4E75                    1511          RTS
00001CE8                          1512          ; D, A
00001CE8                          1513  MOVEM_REG:
00001CE8  43F9 00002423           1514          LEA         SPACE_MSG, A1
00001CEE  103C 000E               1515          MOVE.B      #14, D0
00001CF2  4E4F                    1516          TRAP        #15
00001CF4  4283                    1517          CLR.L       D3
00001CF6  4285                    1518          CLR.L       D5
00001CF8  4286                    1519          CLR.L       D6
00001CFA  4287                    1520          CLR.L       D7
00001CFC                          1521          
00001CFC  341B                    1522          MOVE.W      (A3)+, D2
00001CFE  4EB9 00001D50           1523          JSR         MOVEM_START
00001D04                          1524          ; Print Out ", "
00001D04  43F9 00002326           1525          LEA         SEPERATOR, A1
00001D0A  103C 000E               1526          MOVE.B      #14, D0
00001D0E  4E4F                    1527          TRAP        #15
00001D10                          1528          
00001D10  4EB8 1680               1529          JSR         Bit6
00001D14  1602                    1530          MOVE.B      D2, D3
00001D16                          1531          
00001D16                          1532          
00001D16  4EB8 1B80               1533          JSR         EA_GENERIC
00001D1A  4E75                    1534          RTS
00001D1C                          1535          ; A, D
00001D1C                          1536  MOVEM_SRC:
00001D1C                          1537  
00001D1C  4EB8 1680               1538          JSR         Bit6
00001D20  1602                    1539          MOVE.B      D2, D3
00001D22                          1540  
00001D22  4EB8 1B80               1541          JSR         EA_GENERIC
00001D26                          1542          ; Print Out ", "
00001D26  43F9 00002326           1543          LEA         SEPERATOR, A1
00001D2C  103C 000E               1544          MOVE.B      #14, D0
00001D30  4E4F                    1545          TRAP        #15
00001D32  43F9 00002423           1546          LEA         SPACE_MSG, A1
00001D38  103C 000E               1547          MOVE.B      #14, D0
00001D3C  4E4F                    1548          TRAP        #15
00001D3E  4283                    1549          CLR.L       D3
00001D40  4285                    1550          CLR.L       D5
00001D42  4286                    1551          CLR.L       D6
00001D44  4287                    1552          CLR.L       D7
00001D46                          1553          
00001D46  341B                    1554          MOVE.W      (A3)+, D2
00001D48  4EB9 00001D50           1555          JSR         MOVEM_START
00001D4E                          1556  
00001D4E  4E75                    1557          RTS        
00001D50                          1558  
00001D50                          1559  
00001D50                          1560  MOVEM_START:
00001D50  163C 0004               1561          MOVE.B      #4, D3
00001D54  4285                    1562          CLR.L       D5
00001D56  4286                    1563          CLR.L       D6
00001D58  4287                    1564          CLR.L       D7
00001D5A  4EB9 00001D62           1565          JSR         MOVEM_LOOP
00001D60  4E75                    1566          RTS
00001D62                          1567          
00001D62                          1568  ; D5 helps identify reg out of group
00001D62                          1569  ; D6 helps identify Group out of word
00001D62                          1570  ; D7 keeps track of the number of reg's    
00001D62                          1571  MOVEM_LOOP:
00001D62                          1572  
00001D62  B63C 0000               1573          CMP.B       #0, D3
00001D66  6700 002C               1574          BEQ         MOVEM_DONE
00001D6A  5343                    1575          SUB         #1, D3
00001D6C                          1576  
00001D6C                          1577  
00001D6C  1A02                    1578          MOVE.B      D2, D5
00001D6E  E882                    1579          ASR.L       #4, D2
00001D70                          1580          
00001D70  BA3C 0001               1581          CMP.B       #1, D5
00001D74  6700 0020               1582          BEQ         MOVEM_0
00001D78  BA3C 0002               1583          CMP.B       #2, D5
00001D7C  6700 0020               1584          BEQ         MOVEM_1
00001D80  BA3C 0004               1585          CMP.B       #4, D5
00001D84  6700 0020               1586          BEQ         MOVEM_2
00001D88  BA3C 0008               1587          CMP.B       #8, D5
00001D8C  6700 0020               1588          BEQ         MOVEM_3
00001D90                          1589          
00001D90  5246                    1590          ADD         #1, D6
00001D92  60CE                    1591          BRA         MOVEM_LOOP
00001D94                          1592  
00001D94                          1593  
00001D94                          1594  MOVEM_DONE
00001D94  4E75                    1595          RTS 
00001D96                          1596         
00001D96                          1597  MOVEM_0:
00001D96  1A3C 0000               1598          MOVE.B      #0, D5   
00001D9A  6000 001A               1599          BRA         MOVEM_CHECK_PRINT
00001D9E                          1600  MOVEM_1:
00001D9E  1A3C 0001               1601          MOVE.B      #1, D5   
00001DA2  6000 0012               1602          BRA         MOVEM_CHECK_PRINT
00001DA6                          1603  MOVEM_2:
00001DA6  1A3C 0002               1604          MOVE.B      #2, D5   
00001DAA  6000 000A               1605          BRA         MOVEM_CHECK_PRINT        
00001DAE                          1606  MOVEM_3:
00001DAE  1A3C 0003               1607          MOVE.B      #3, D5   
00001DB2  6000 0002               1608          BRA         MOVEM_CHECK_PRINT
00001DB6                          1609  
00001DB6                          1610  MOVEM_CHECK_PRINT:
00001DB6  BE3C 0000               1611          CMP.B       #0, D7
00001DBA  6600 0006               1612          BNE         MOVEM_DIVISOR
00001DBE  6000 0012               1613          BRA         MOVEM_PRINT_MODE        
00001DC2                          1614  
00001DC2                          1615  MOVEM_DIVISOR:
00001DC2  43F9 00002324           1616          LEA         DIVISOR_MSG, A1
00001DC8  103C 000E               1617          MOVE.B      #14, D0    
00001DCC  4E4F                    1618          TRAP        #15
00001DCE  6000 0002               1619          BRA         MOVEM_PRINT_MODE
00001DD2                          1620  
00001DD2                          1621  
00001DD2                          1622  MOVEM_PRINT_MODE:        
00001DD2  5247                    1623          ADD         #1, D7
00001DD4                          1624  
00001DD4  BC3C 0000               1625          CMP.B       #0, D6
00001DD8  6700 0016               1626          BEQ         MOVEM_MODE0
00001DDC  BC3C 0001               1627          CMP.B       #1, D6
00001DE0  6700 0028               1628          BEQ         MOVEM_MODE1
00001DE4  BC3C 0002               1629          CMP.B       #2, D6
00001DE8  6700 003C               1630          BEQ         MOVEM_MODE2
00001DEC  6000 0052               1631          BRA         MOVEM_MODE3
00001DF0                          1632          
00001DF0                          1633          
00001DF0                          1634  MOVEM_MODE0:
00001DF0  43F9 0000230C           1635          LEA         MOVEM0_MSG, A1
00001DF6  103C 000E               1636          MOVE.B      #14, D0    
00001DFA  4E4F                    1637          TRAP        #15
00001DFC  1205                    1638          MOVE.B      D5, D1
00001DFE  103C 0003               1639          MOVE.B      #$3, D0
00001E02  4E4F                    1640          TRAP        #15
00001E04  5246                    1641          ADD         #1, D6
00001E06                          1642          
00001E06  6000 FF5A               1643          BRA         MOVEM_LOOP
00001E0A                          1644  MOVEM_MODE1:
00001E0A  5845                    1645          ADD         #4, D5
00001E0C  43F9 0000230C           1646          LEA         MOVEM0_MSG, A1
00001E12  103C 000E               1647          MOVE.B      #14, D0    
00001E16  4E4F                    1648          TRAP        #15
00001E18  1205                    1649          MOVE.B      D5, D1
00001E1A  103C 0003               1650          MOVE.B      #$3, D0
00001E1E  4E4F                    1651          TRAP        #15
00001E20  5246                    1652          ADD         #1, D6
00001E22                          1653          
00001E22  6000 FF3E               1654          BRA         MOVEM_LOOP        
00001E26                          1655  MOVEM_MODE2:
00001E26  43F9 0000230E           1656          LEA         MOVEM1_MSG, A1
00001E2C  103C 000E               1657          MOVE.B      #14, D0    
00001E30  4E4F                    1658          TRAP        #15
00001E32  1205                    1659          MOVE.B      D5, D1
00001E34  103C 0003               1660          MOVE.B      #$3, D0
00001E38  4E4F                    1661          TRAP        #15
00001E3A  5246                    1662          ADD         #1, D6
00001E3C                          1663          
00001E3C  6000 FF24               1664          BRA         MOVEM_LOOP       
00001E40                          1665   
00001E40                          1666  MOVEM_MODE3:
00001E40  5845                    1667          ADD         #4, D5
00001E42  43F9 0000230E           1668          LEA         MOVEM1_MSG, A1
00001E48  103C 000E               1669          MOVE.B      #14, D0    
00001E4C  4E4F                    1670          TRAP        #15
00001E4E  1205                    1671          MOVE.B      D5, D1
00001E50  103C 0003               1672          MOVE.B      #$3, D0
00001E54  4E4F                    1673          TRAP        #15
00001E56  5246                    1674          ADD         #1, D6
00001E58                          1675          
00001E58  6000 FF08               1676          BRA         MOVEM_LOOP 
00001E5C                          1677         
00001E5C                          1678         
00001E5C                          1679  EA_BRA:
00001E5C                          1680  
00001E5C  4EB8 15EC               1681          JSR         Bits7to0
00001E60  B43C 0000               1682          CMP.B       #0, D2
00001E64  6700 0042               1683          BEQ         BRA_WORD
00001E68  B43C 00FF               1684          CMP.B       #$FF, D2
00001E6C  6700 006E               1685          BEQ         BRA_LONG
00001E70                          1686          
00001E70  6000 0004               1687          BRA         BRA_BYTE
00001E74                          1688  
00001E74  4E75                    1689          RTS
00001E76                          1690  
00001E76                          1691  BRA_BYTE:
00001E76                          1692          
00001E76                          1693          
00001E76  43F9 00002423           1694          LEA         SPACE_MSG, A1
00001E7C  103C 000E               1695          MOVE.B      #14, D0
00001E80  4E4F                    1696          TRAP        #15
00001E82  43F9 00002337           1697          LEA         DOLLAR_MSG, A1
00001E88  103C 000E               1698          MOVE.B      #14, D0
00001E8C  4E4F                    1699          TRAP        #15
00001E8E                          1700  
00001E8E  2A0B                    1701          MOVE.L      A3, D5
00001E90  3C02                    1702          MOVE.W      D2, D6
00001E92                          1703          ; ADD.L       D5, D6
00001E92                          1704  
00001E92  2406                    1705          MOVE.L      D6, D2
00001E94  4EB8 1148               1706          JSR         FLIP_START
00001E98                          1707          
00001E98  4847                    1708          SWAP        D7
00001E9A                          1709          
00001E9A  4282                    1710          CLR.L       D2
00001E9C  123C 0004               1711          MOVE.B      #4, D1
00001EA0  4EB9 00002172           1712          JSR         CONVERT_HEX
00001EA6  4E75                    1713          RTS
00001EA8                          1714  
00001EA8                          1715  BRA_WORD:
00001EA8  43F9 00002423           1716          LEA         SPACE_MSG, A1
00001EAE  103C 000E               1717          MOVE.B      #14, D0
00001EB2  4E4F                    1718          TRAP        #15
00001EB4  43F9 00002337           1719          LEA         DOLLAR_MSG, A1
00001EBA  103C 000E               1720          MOVE.B      #14, D0
00001EBE  4E4F                    1721          TRAP        #15
00001EC0                          1722  
00001EC0  2A0B                    1723          MOVE.L      A3, D5
00001EC2  3C1B                    1724          MOVE.W      (A3)+, D6
00001EC4  DC85                    1725          ADD.L       D5, D6
00001EC6                          1726  
00001EC6  2406                    1727          MOVE.L      D6, D2
00001EC8  4EB8 1148               1728          JSR         FLIP_START
00001ECC                          1729          
00001ECC  4847                    1730          SWAP        D7
00001ECE                          1731          
00001ECE  4282                    1732          CLR.L       D2
00001ED0  123C 0004               1733          MOVE.B      #4, D1
00001ED4  4EB9 00002172           1734          JSR         CONVERT_HEX
00001EDA                          1735  
00001EDA  4E75                    1736          RTS
00001EDC                          1737  BRA_LONG:
00001EDC                          1738  
00001EDC  43F9 00002423           1739          LEA         SPACE_MSG, A1
00001EE2  103C 000E               1740          MOVE.B      #14, D0
00001EE6  4E4F                    1741          TRAP        #15
00001EE8  43F9 00002337           1742          LEA         DOLLAR_MSG, A1
00001EEE  103C 000E               1743          MOVE.B      #14, D0
00001EF2  4E4F                    1744          TRAP        #15
00001EF4                          1745  
00001EF4  2A0B                    1746          MOVE.L      A3, D5
00001EF6  3C1B                    1747          MOVE.W      (A3)+, D6
00001EF8  DC85                    1748          ADD.L       D5, D6
00001EFA                          1749  
00001EFA  2406                    1750          MOVE.L      D6, D2
00001EFC  4EB8 1148               1751          JSR         FLIP_START
00001F00                          1752          
00001F00  4847                    1753          SWAP        D7
00001F02                          1754          
00001F02  4282                    1755          CLR.L       D2
00001F04  123C 0008               1756          MOVE.B      #8, D1
00001F08  4EB9 00002172           1757          JSR         CONVERT_HEX
00001F0E                          1758         
00001F0E                          1759         
00001F0E                          1760          
00001F0E                          1761  EA_MOVEQ:
00001F0E                          1762  
00001F0E                          1763          
00001F0E  1404                    1764          MOVE.B      D4, D2
00001F10                          1765          
00001F10  43F9 00002333           1766          LEA         DATA_MSG, A1
00001F16  103C 000E               1767          MOVE.B      #14, D0    
00001F1A  4E4F                    1768          TRAP        #15
00001F1C                          1769  
00001F1C  4EB8 1148               1770          JSR         FLIP_START
00001F20                          1771          
00001F20                          1772  
00001F20  4847                    1773          SWAP        D7
00001F22  123C 0008               1774          MOVE.B      #8, D1
00001F26  E26F                    1775          LSR.W       D1, D7
00001F28  123C 0002               1776          MOVE.B      #2, D1
00001F2C                          1777          
00001F2C  4EB9 00002172           1778          JSR         CONVERT_HEX
00001F32                          1779          
00001F32                          1780          ; Print Out ", "
00001F32  43F9 00002326           1781          LEA         SEPERATOR, A1
00001F38  103C 000E               1782          MOVE.B      #14, D0
00001F3C  4E4F                    1783          TRAP        #15
00001F3E                          1784  
00001F3E  1A3C 0000               1785          MOVE.B      #0, D5
00001F42  4EB8 1654               1786          JSR         Bits11to9
00001F46  1C02                    1787          MOVE.B      D2, D6
00001F48                          1788  
00001F48  4EB9 00001F9C           1789          JSR         MODE_TABLE
00001F4E                          1790  
00001F4E  4E75                    1791          RTS
00001F50                          1792  
00001F50                          1793  EA_ADDQ:
00001F50                          1794  
00001F50  123C 0001               1795          MOVE.B      #1, D1
00001F54  4EB8 1654               1796          JSR         Bits11to9
00001F58  1E02                    1797          MOVE.B      D2, D7
00001F5A                          1798          
00001F5A  43F9 00002333           1799          LEA         DATA_MSG, A1
00001F60  103C 000E               1800          MOVE.B      #14, D0    
00001F64  4E4F                    1801          TRAP        #15
00001F66                          1802  
00001F66  4EB9 00002172           1803          JSR         CONVERT_HEX
00001F6C                          1804  
00001F6C                          1805          ; Print Out ", "
00001F6C  43F9 00002326           1806          LEA         SEPERATOR, A1
00001F72  103C 000E               1807          MOVE.B      #14, D0
00001F76  4E4F                    1808          TRAP        #15
00001F78                          1809          
00001F78  4EB8 1B80               1810          JSR         EA_GENERIC
00001F7C                          1811  
00001F7C  4E75                    1812          RTS        
00001F7E                          1813  
00001F7E                          1814  AS_FIX:
00001F7E  143C 0008               1815          MOVE.B      #8, D2
00001F82  4E75                    1816          RTS
00001F84                          1817          
00001F84                          1818  ; X+Y = Effective addressing
00001F84                          1819  ; XXX = Mode
00001F84                          1820  ; YYY = Register
00001F84                          1821      
00001F84                          1822  ; 0000 0000 00XX XYYY
00001F84                          1823  EA_LEA:
00001F84  4281                    1824          CLR.L       D1
00001F86  4285                    1825          CLR.L       D5
00001F88  4286                    1826          CLR.L       D6
00001F8A                          1827  
00001F8A  3A04                    1828          MOVE.W      D4, D5
00001F8C  3C04                    1829          MOVE.W      D4, D6
00001F8E                          1830  
00001F8E                          1831  
00001F8E                          1832          ; Print Out ", "
00001F8E  43F9 00002326           1833          LEA         SEPERATOR, A1
00001F94  103C 000E               1834          MOVE.B      #14, D0
00001F98  4E4F                    1835          TRAP        #15
00001F9A                          1836  
00001F9A                          1837  
00001F9A  4E75                    1838          RTS
00001F9C                          1839  
00001F9C                          1840  
00001F9C                          1841  
00001F9C                          1842  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00001F9C                          1843  MODE_TABLE:
00001F9C                          1844  
00001F9C  BA3C 0000               1845          CMP.B       #0,D5
00001FA0  6700 0048               1846          BEQ         J_TBL_D
00001FA4  BA3C 0001               1847          CMP.B       #1,D5
00001FA8  6700 002C               1848          BEQ         J_TBL_A
00001FAC  BA3C 0002               1849          CMP.B       #2,D5
00001FB0  6700 004C               1850          BEQ         J_TBL_A_P
00001FB4  BA3C 0003               1851          CMP.B       #3,D5
00001FB8  6700 0064               1852          BEQ         J_TBL_A_INCR
00001FBC  BA3C 0004               1853          CMP.B       #4,D5
00001FC0  6700 007C               1854          BEQ         J_TBL_A_DECR
00001FC4  BA3C 0007               1855          CMP.B       #7,D5
00001FC8  6700 0004               1856          BEQ         J_ABS
00001FCC                          1857          
00001FCC  4E75                    1858          RTS
00001FCE                          1859          ;   deal with errors here
00001FCE                          1860  
00001FCE                          1861  J_ABS:
00001FCE  4EB9 00002068           1862          JSR         J_ABS_TABLE
00001FD4  4E75                    1863          RTS
00001FD6                          1864  
00001FD6                          1865  J_TBL_A:
00001FD6  43F9 00002313           1866          LEA         MODE_1_MSG, A1 ; A#
00001FDC  103C 000E               1867          MOVE.B      #14, D0
00001FE0  4E4F                    1868          TRAP        #15
00001FE2  4EB9 0000205E           1869          JSR         DISPLAY_REG
00001FE8                          1870  
00001FE8  4E75                    1871          RTS
00001FEA                          1872  
00001FEA                          1873  
00001FEA                          1874  J_TBL_D:
00001FEA  43F9 00002310           1875          LEA         MODE_0_MSG, A1 ; D#
00001FF0  103C 000E               1876          MOVE.B      #14, D0
00001FF4  4E4F                    1877          TRAP        #15
00001FF6  4EB9 0000205E           1878          JSR         DISPLAY_REG
00001FFC  4E75                    1879          RTS
00001FFE                          1880  
00001FFE                          1881  J_TBL_A_P:
00001FFE                          1882  
00001FFE  43F9 00002316           1883          LEA         MODE_A_MSG, A1 ; (A#)
00002004  103C 000E               1884          MOVE.B      #14, D0
00002008  4E4F                    1885          TRAP        #15
0000200A  4EB9 0000205E           1886          JSR         DISPLAY_REG
00002010                          1887          
00002010  43F9 0000231A           1888          LEA         MODE_A_1_MSG, A1
00002016  103C 000E               1889          MOVE.B      #14, D0
0000201A  4E4F                    1890          TRAP        #15
0000201C                          1891  
0000201C                          1892          
0000201C  4E75                    1893          RTS
0000201E                          1894      
0000201E                          1895  J_TBL_A_INCR:
0000201E  43F9 00002316           1896          LEA         MODE_A_MSG, A1 ; (A#)+
00002024  103C 000E               1897          MOVE.B      #14, D0
00002028  4E4F                    1898          TRAP        #15
0000202A  4EB9 0000205E           1899          JSR         DISPLAY_REG
00002030                          1900          
00002030  43F9 0000231C           1901          LEA         MODE_A_2_MSG, A1
00002036  103C 000E               1902          MOVE.B      #14, D0
0000203A  4E4F                    1903          TRAP        #15
0000203C                          1904  
0000203C  4E75                    1905          RTS
0000203E                          1906          
0000203E                          1907  J_TBL_A_DECR:
0000203E  43F9 0000231F           1908          LEA         MODE_MINUS_MSG, A1 ; -(A#)
00002044  103C 000E               1909          MOVE.B      #14, D0
00002048  4E4F                    1910          TRAP        #15
0000204A  4EB9 0000205E           1911          JSR         DISPLAY_REG
00002050                          1912          
00002050  43F9 0000231A           1913          LEA         MODE_A_1_MSG, A1
00002056  103C 000E               1914          MOVE.B      #14, D0
0000205A  4E4F                    1915          TRAP        #15
0000205C                          1916  
0000205C  4E75                    1917          RTS
0000205E                          1918          
0000205E                          1919          
0000205E                          1920  DISPLAY_REG:
0000205E  1206                    1921          MOVE.B      D6, D1
00002060  103C 0003               1922          MOVE.B      #$3, D0
00002064  4E4F                    1923          TRAP        #15
00002066  4E75                    1924          RTS
00002068                          1925  
00002068                          1926  
00002068                          1927  J_ABS_TABLE:
00002068                          1928          ; SIMHALT
00002068  BC3C 0000               1929          CMP.B       #0,D6
0000206C  6700 0014               1930          BEQ         SUBCLASS_CHECK
00002070                          1931              
00002070  BC3C 0001               1932          CMP.B       #1,D6
00002074  6700 000C               1933          BEQ         SUBCLASS_CHECK
00002078                          1934              
00002078  BC3C 0004               1935          CMP.B       #4,D6
0000207C  6700 007A               1936          BEQ         DATA_TABLE
00002080                          1937              
00002080  4E75                    1938          RTS
00002082                          1939          
00002082                          1940  SUBCLASS_CHECK:
00002082  2C4B                    1941          MOVE.L      A3, A6
00002084  221B                    1942          MOVE.L      (A3)+, D1
00002086  264E                    1943          MOVE.L      A6, A3
00002088  2C7C 00000000           1944          MOVE.L      #0, A6
0000208E                          1945          
0000208E  4841                    1946          SWAP        D1
00002090                          1947          
00002090  B27C 0000               1948          CMP.W       #0, D1
00002094  6700 0006               1949          BEQ         J_SUBCLASS_0
00002098  6000 002A               1950          BRA         J_SUBCLASS_1
0000209C                          1951  
0000209C                          1952          
0000209C                          1953  J_SUBCLASS_0:
0000209C  43F9 00002337           1954          LEA         DOLLAR_MSG, A1
000020A2  103C 000E               1955          MOVE.B      #14, D0
000020A6  4E4F                    1956          TRAP        #15
000020A8                          1957         
000020A8  4281                    1958          CLR.L       D1
000020AA  4282                    1959          CLR.L       D2
000020AC  4287                    1960          CLR.L       D7
000020AE  241B                    1961          MOVE.L      (A3)+, D2
000020B0                          1962          
000020B0                          1963  
000020B0  4EB8 1148               1964          JSR         FLIP_START
000020B4                          1965  
000020B4  4282                    1966          CLR.L       D2
000020B6  4847                    1967          SWAP        D7
000020B8                          1968  
000020B8  123C 0004               1969          MOVE.B      #4, D1
000020BC  4EB9 00002172           1970          JSR         CONVERT_HEX
000020C2                          1971          
000020C2                          1972  
000020C2                          1973  
000020C2  4E75                    1974          RTS
000020C4                          1975  
000020C4                          1976  
000020C4                          1977  J_SUBCLASS_1:
000020C4                          1978          ; SIMHALT
000020C4  43F9 0000232B           1979          LEA         SUBCLASS1_1, A1
000020CA  103C 000E               1980          MOVE.B      #14, D0
000020CE  4E4F                    1981          TRAP        #15
000020D0                          1982  
000020D0  4281                    1983          CLR.L       D1
000020D2  4282                    1984          CLR.L       D2
000020D4  4287                    1985          CLR.L       D7
000020D6                          1986  
000020D6                          1987  
000020D6                          1988          
000020D6  241B                    1989          MOVE.L      (A3)+, D2
000020D8                          1990          
000020D8  4EB8 1148               1991          JSR         FLIP_START
000020DC                          1992  
000020DC  4282                    1993          CLR.L       D2
000020DE                          1994          
000020DE                          1995  
000020DE  123C 0008               1996          MOVE.B      #8, D1
000020E2  4EB9 00002172           1997          JSR         CONVERT_HEX
000020E8                          1998  
000020E8                          1999  
000020E8  43F9 0000232F           2000          LEA         SUBCLASS1_2, A1
000020EE  103C 000E               2001          MOVE.B      #14, D0
000020F2  4E4F                    2002          TRAP        #15
000020F4                          2003          
000020F4  4E75                    2004          RTS
000020F6                          2005  
000020F6                          2006  ;   Error
000020F6                          2007  J_ABS_ERROR:
000020F6  4E75                    2008          RTS
000020F8                          2009  
000020F8                          2010  ;   Hard Coded Data
000020F8                          2011  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
000020F8                          2012  
000020F8                          2013  ;   Size num 0 = Byte 1 = Word 2 Long
000020F8                          2014  
000020F8                          2015  DATA_TABLE:
000020F8                          2016          ; SIMHALT
000020F8  43F9 00002333           2017          LEA         DATA_MSG, A1
000020FE  103C 000E               2018          MOVE.B      #14, D0
00002102  4E4F                    2019          TRAP        #15
00002104                          2020  
00002104                          2021  
00002104  B63C 0000               2022          CMP.B       #0,D3 
00002108  6700 0014               2023          BEQ         DATA_B
0000210C                          2024  
0000210C  B63C 0001               2025          CMP.B       #1,D3 
00002110  6700 002A               2026          BEQ         DATA_W
00002114                          2027          
00002114  B63C 0002               2028          CMP.B       #2,D3 
00002118  6700 003E               2029          BEQ         DATA_L
0000211C                          2030          
0000211C  4E75                    2031          RTS
0000211E                          2032  
0000211E                          2033  DATA_B:
0000211E  4281                    2034          CLR.L       D1
00002120  4282                    2035          CLR.L       D2
00002122  4287                    2036          CLR.L       D7
00002124                          2037          
00002124  341B                    2038          MOVE.W      (A3)+, D2
00002126                          2039          * Only read first byte from the word 
00002126                          2040          
00002126  4EB8 1148               2041          JSR         FLIP_START
0000212A  4847                    2042          SWAP        D7
0000212C  E09F                    2043          ROR.L       #8,D7
0000212E  4282                    2044          CLR.L       D2
00002130                          2045          
00002130                          2046  
00002130  123C 0002               2047          MOVE.B      #2, D1
00002134  4EB9 00002172           2048          JSR         CONVERT_HEX
0000213A                          2049  
0000213A                          2050  
0000213A                          2051  
0000213A  4E75                    2052          RTS
0000213C                          2053  
0000213C                          2054  DATA_W:
0000213C  4281                    2055          CLR.L       D1
0000213E  4282                    2056          CLR.L       D2
00002140  4287                    2057          CLR.L       D7
00002142                          2058          
00002142  341B                    2059          MOVE.W      (A3)+, D2
00002144                          2060          
00002144  4EB8 1148               2061          JSR         FLIP_START
00002148                          2062  
00002148  4847                    2063          SWAP        D7
0000214A                          2064  
0000214A  4282                    2065          CLR.L       D2
0000214C                          2066          
0000214C  123C 0004               2067          MOVE.B      #4, D1
00002150                          2068          
00002150                          2069          
00002150  4EB9 00002172           2070          JSR         CONVERT_HEX
00002156                          2071  
00002156                          2072          
00002156                          2073  
00002156  4E75                    2074          RTS
00002158                          2075  
00002158                          2076  DATA_L:
00002158                          2077          ; SIMHALT
00002158  4281                    2078          CLR.L       D1
0000215A  4282                    2079          CLR.L       D2
0000215C  4287                    2080          CLR.L       D7
0000215E                          2081          
0000215E  241B                    2082          MOVE.L      (A3)+, D2
00002160                          2083          
00002160  4EB8 1148               2084          JSR         FLIP_START
00002164                          2085  
00002164  4282                    2086          CLR.L       D2
00002166                          2087          
00002166                          2088  
00002166  123C 0008               2089          MOVE.B      #8, D1
0000216A  4EB9 00002172           2090          JSR         CONVERT_HEX
00002170                          2091  
00002170                          2092          
00002170                          2093  
00002170  4E75                    2094          RTS
00002172                          2095  
00002172                          2096  
00002172                          2097  CONVERT_HEX:
00002172                          2098          ; SIMHALT    
00002172  0C01 0000               2099          CMPI.B      #$0, D1    
00002176  6700 0092               2100          BEQ         HEX_DONE
0000217A                          2101          
0000217A  5301                    2102          SUBI.B      #$1, D1       
0000217C                          2103  
0000217C  4282                    2104          CLR.L       D2
0000217E                          2105      
0000217E  1407                    2106          MOVE.B      D7, D2
00002180                          2107              
00002180  103C 001C               2108          MOVE.B      #28, D0    
00002184  E1AA                    2109          LSL.L       D0, D2     
00002186  E99A                    2110          ROL.L       #4, D2
00002188                          2111          
00002188  E887                    2112          ASR.L       #4, D7
0000218A                          2113          
0000218A                          2114          
0000218A  B43C 0000               2115          CMP.B       #0,D2
0000218E  6700 007C               2116          BEQ         PRINT_ASCII0
00002192  B43C 0001               2117          CMP.B       #1,D2
00002196  6700 0084               2118          BEQ         PRINT_ASCII1
0000219A  B43C 0002               2119          CMP.B       #2,D2
0000219E  6700 008C               2120          BEQ         PRINT_ASCII2
000021A2  B43C 0003               2121          CMP.B       #3,D2
000021A6  6700 0094               2122          BEQ         PRINT_ASCII3
000021AA  B43C 0004               2123          CMP.B       #4,D2
000021AE  6700 009C               2124          BEQ         PRINT_ASCII4
000021B2  B43C 0005               2125          CMP.B       #5,D2
000021B6  6700 00A4               2126          BEQ         PRINT_ASCII5
000021BA  B43C 0006               2127          CMP.B       #6,D2
000021BE  6700 00AC               2128          BEQ         PRINT_ASCII6
000021C2  B43C 0007               2129          CMP.B       #7,D2
000021C6  6700 00B4               2130          BEQ         PRINT_ASCII7
000021CA  B43C 0008               2131          CMP.B       #8,D2
000021CE  6700 00BC               2132          BEQ         PRINT_ASCII8
000021D2  B43C 0009               2133          CMP.B       #9,D2
000021D6  6700 00C4               2134          BEQ         PRINT_ASCII9
000021DA  B43C 000A               2135          CMP.B       #$A,D2
000021DE  6700 00CC               2136          BEQ         PRINT_ASCIIA
000021E2  B43C 000B               2137          CMP.B       #$B,D2
000021E6  6700 00D4               2138          BEQ         PRINT_ASCIIB
000021EA  B43C 000C               2139          CMP.B       #$C,D2
000021EE  6700 00DC               2140          BEQ         PRINT_ASCIIC
000021F2  B43C 000D               2141          CMP.B       #$D,D2
000021F6  6700 00E4               2142          BEQ         PRINT_ASCIID
000021FA  B43C 000E               2143          CMP.B       #$E,D2
000021FE  6700 00EC               2144          BEQ         PRINT_ASCIIE
00002202  B43C 000F               2145          CMP.B       #$F,D2
00002206  6700 00F4               2146          BEQ         PRINT_ASCIIF
0000220A                          2147          
0000220A                          2148          ; error handling here
0000220A                          2149          
0000220A                          2150          
0000220A                          2151  
0000220A                          2152  HEX_DONE:
0000220A  4E75                    2153          RTS
0000220C                          2154  
0000220C                          2155  
0000220C                          2156  
0000220C                          2157  PRINT_ASCII0:
0000220C  43F9 00002426           2158          LEA         ZERO_MSG, A1
00002212  103C 000E               2159          MOVE.B      #14, D0    
00002216  4E4F                    2160          TRAP        #15
00002218  6000 FF58               2161          BRA         CONVERT_HEX
0000221C                          2162  PRINT_ASCII1:
0000221C  43F9 00002428           2163          LEA         ONE_MSG, A1
00002222  103C 000E               2164          MOVE.B      #14, D0    
00002226  4E4F                    2165          TRAP        #15
00002228  6000 FF48               2166          BRA         CONVERT_HEX
0000222C                          2167  PRINT_ASCII2:
0000222C  43F9 0000242A           2168          LEA         TWO_MSG, A1
00002232  103C 000E               2169          MOVE.B      #14, D0    
00002236  4E4F                    2170          TRAP        #15
00002238  6000 FF38               2171          BRA         CONVERT_HEX
0000223C                          2172  PRINT_ASCII3:
0000223C  43F9 0000242C           2173          LEA         THREE_MSG, A1
00002242  103C 000E               2174          MOVE.B      #14, D0    
00002246  4E4F                    2175          TRAP        #15
00002248  6000 FF28               2176          BRA         CONVERT_HEX
0000224C                          2177  PRINT_ASCII4:
0000224C  43F9 0000242E           2178          LEA         FOUR_MSG, A1
00002252  103C 000E               2179          MOVE.B      #14, D0    
00002256  4E4F                    2180          TRAP        #15
00002258  6000 FF18               2181          BRA         CONVERT_HEX
0000225C                          2182  PRINT_ASCII5:
0000225C  43F9 00002430           2183          LEA         FIVE_MSG, A1
00002262  103C 000E               2184          MOVE.B      #14, D0    
00002266  4E4F                    2185          TRAP        #15
00002268  6000 FF08               2186          BRA         CONVERT_HEX        
0000226C                          2187  PRINT_ASCII6:
0000226C  43F9 00002432           2188          LEA         SIX_MSG, A1
00002272  103C 000E               2189          MOVE.B      #14, D0    
00002276  4E4F                    2190          TRAP        #15
00002278  6000 FEF8               2191          BRA         CONVERT_HEX
0000227C                          2192  PRINT_ASCII7:
0000227C  43F9 00002434           2193          LEA         SEVEN_MSG, A1
00002282  103C 000E               2194          MOVE.B      #14, D0    
00002286  4E4F                    2195          TRAP        #15
00002288  6000 FEE8               2196          BRA         CONVERT_HEX
0000228C                          2197  PRINT_ASCII8:
0000228C  43F9 00002436           2198          LEA         EIGHT_MSG, A1
00002292  103C 000E               2199          MOVE.B      #14, D0    
00002296  4E4F                    2200          TRAP        #15
00002298  6000 FED8               2201          BRA         CONVERT_HEX
0000229C                          2202  PRINT_ASCII9:
0000229C  43F9 00002438           2203          LEA         NINE_MSG, A1
000022A2  103C 000E               2204          MOVE.B      #14, D0    
000022A6  4E4F                    2205          TRAP        #15
000022A8  6000 FEC8               2206          BRA         CONVERT_HEX
000022AC                          2207  PRINT_ASCIIA:
000022AC  43F9 0000243A           2208          LEA         A_MSG, A1
000022B2  103C 000E               2209          MOVE.B      #14, D0    
000022B6  4E4F                    2210          TRAP        #15
000022B8  6000 FEB8               2211          BRA         CONVERT_HEX
000022BC                          2212  PRINT_ASCIIB:
000022BC  43F9 0000243C           2213          LEA         B_MSG, A1
000022C2  103C 000E               2214          MOVE.B      #14, D0    
000022C6  4E4F                    2215          TRAP        #15
000022C8  6000 FEA8               2216          BRA         CONVERT_HEX
000022CC                          2217  PRINT_ASCIIC:
000022CC  43F9 0000243E           2218          LEA         C_MSG, A1
000022D2  103C 000E               2219          MOVE.B      #14, D0    
000022D6  4E4F                    2220          TRAP        #15
000022D8  6000 FE98               2221          BRA         CONVERT_HEX
000022DC                          2222  PRINT_ASCIID:
000022DC  43F9 00002440           2223          LEA         D_MSG, A1
000022E2  103C 000E               2224          MOVE.B      #14, D0    
000022E6  4E4F                    2225          TRAP        #15
000022E8  6000 FE88               2226          BRA         CONVERT_HEX
000022EC                          2227  PRINT_ASCIIE:
000022EC  43F9 00002442           2228          LEA         E_MSG, A1
000022F2  103C 000E               2229          MOVE.B      #14, D0    
000022F6  4E4F                    2230          TRAP        #15
000022F8  6000 FE78               2231          BRA         CONVERT_HEX
000022FC                          2232  PRINT_ASCIIF:
000022FC  43F9 00002444           2233          LEA         F_MSG, A1
00002302  103C 000E               2234          MOVE.B      #14, D0    
00002306  4E4F                    2235          TRAP        #15
00002308  6000 FE68               2236          BRA         CONVERT_HEX
0000230C                          2237  
0000230C                          2238  
0000230C                          2239  
0000230C                          2240  
0000230C                          2241  
0000230C= 44 00                   2242  MOVEM0_MSG:     DC.B        'D',0
0000230E= 41 00                   2243  MOVEM1_MSG:     DC.B        'A',0
00002310                          2244  
00002310= 20 44 00                2245  MODE_0_MSG:     DC.B        ' D',0
00002313= 20 41 00                2246  MODE_1_MSG:     DC.B        ' A',0
00002316= 20 28 41 00             2247  MODE_A_MSG:     DC.B        ' (A',0
0000231A= 29 00                   2248  MODE_A_1_MSG:   DC.B        ')',0
0000231C= 29 2B 00                2249  MODE_A_2_MSG:   DC.B        ')+',0
0000231F= 20 2D 28 41 00          2250  MODE_MINUS_MSG: DC.B        ' -(A',0
00002324                          2251  
00002324= 2F 00                   2252  DIVISOR_MSG:    DC.B        '/',0
00002326                          2253  
00002326= 2C 00                   2254  SEPERATOR:      DC.B        ',',0
00002328                          2255  
00002328= 20 23 00                2256  POUND_MSG:      DC.B        ' #',0
0000232B= 20 28 24 00             2257  SUBCLASS1_1:    DC.B        ' ($',0
0000232F= 29 2E 4C 00             2258  SUBCLASS1_2:    DC.B        ').L',0
00002333= 20 23 24 00             2259  DATA_MSG:       DC.B        ' #$',0
00002337= 24 00                   2260  DOLLAR_MSG:     DC.B        '$',0
00002339                          2261  
00002339= 54 4D 50 00             2262  TEMP_MSG:       DC.B        'TMP',0
0000233D                          2263  
0000233D                          2264  
0000233D                          2265  
0000233D                          2266  TMP_STR         DS.B        32
0000235D                          2267  
0000235D                          2268  
0000235D                          2269  
0000235D                          2270  
0000235D                          2271  
0000235D                          2272  
0000235D                          2273  
0000235D                          2274  
0000235D                          2275  
0000235D                          2276  
0000235D                          2277  
0000235D                          2278  -------------------- end include --------------------
0000235D                          2279  
0000235D                          2280  
0000235D= 57 65 6C 63 6F 6D ...   2281  GREETING_MSG:   DC.B        'Welcome to Sarah and Leons Disassembler!',CR,LF,0
00002388= 57 6F 75 6C 64 20 ...   2282  REPEAT_MSG:     DC.B        'Would you like to restart the program? (Press enter to restart)',CR,LF,0
000023CA= 54 68 61 6E 6B 20 ...   2283  GOODBYE_MSG:    DC.B        'Thank you for using Sarah and Leons Disassembler!',CR,LF,0
000023FE= 4F 6E 65 20 6F 72 ...   2284  BAD_ADDR_MSG:   DC.B        'One or both addresses are invalid.',CR,LF,0
00002423                          2285  
00002423                          2286                
00002423  =0000000D               2287  CR              EQU         $0D
00002423  =0000000A               2288  LF              EQU         $0A
00002423                          2289  
00002423= 20 20 00                2290  SPACE_MSG:      DC.B        '  ',0
00002426                          2291  
00002426= 30 00                   2292  ZERO_MSG:       DC.B        '0',0
00002428= 31 00                   2293  ONE_MSG:        DC.B        '1',0
0000242A= 32 00                   2294  TWO_MSG:        DC.B        '2',0
0000242C= 33 00                   2295  THREE_MSG:      DC.B        '3',0
0000242E= 34 00                   2296  FOUR_MSG:       DC.B        '4',0
00002430= 35 00                   2297  FIVE_MSG:       DC.B        '5',0
00002432= 36 00                   2298  SIX_MSG:        DC.B        '6',0
00002434= 37 00                   2299  SEVEN_MSG:      DC.B        '7',0
00002436= 38 00                   2300  EIGHT_MSG:      DC.B        '8',0
00002438= 39 00                   2301  NINE_MSG:       DC.B        '9',0
0000243A= 41 00                   2302  A_MSG:          DC.B        'A',0
0000243C= 42 00                   2303  B_MSG:          DC.B        'B',0
0000243E= 43 00                   2304  C_MSG:          DC.B        'C',0
00002440= 44 00                   2305  D_MSG:          DC.B        'D',0
00002442= 45 00                   2306  E_MSG:          DC.B        'E',0
00002444= 46 00                   2307  F_MSG:          DC.B        'F',0
00002446                          2308                  
00002446= 45 72 72 6F 72 00       2309  ERROR_MSG:      DC.B        'Error',0
0000244C= 53 75 63 63 65 73 ...   2310  SUCCESS_MSG:    DC.B        'Success',0
00002454                          2311  
00002454= 0D 0A 00                2312  NEW_LINE:       DC.B        '',CR,LF,0
00002457                          2313  
00002457= 50 6C 65 61 73 65 ...   2314  NEXT_PAGE_MSG:  DC.B        'Please press enter to continue: ',CR,LF,0
0000247A                          2315  
0000247A                          2316    
0000247A                          2317                  
0000247A                          2318                  
0000247A                          2319  STA_ADDR        DS.B        40
000024A2                          2320  END_ADDR        DS.B        40
000024CA                          2321  
000024CA                          2322  
000024CA                          2323  
000024CA                          2324  
000024CA                          2325                  
000024CA                          2326                  
000024CA                          2327          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_DATASRC_EA      1BAC
ADDA_MSG            1A9D
ADDQ_MSG            1A48
ADD_MSG             1A99
ASCII_DONE          10F4
ASL_MSG             1AA2
ASR_MSG             1AA6
AS_COUNT            1C5C
AS_FIX              1F7E
AS_REGISTER         1C9A
A_MSG               243A
BAD_ADDR_MSG        23FE
BIT0                1660
BIT5                1670
BIT6                1680
BITS11TO6           163C
BITS11TO8           1648
BITS11TO9           1654
BITS2TO0            15B4
BITS3TO0            15C0
BITS4TO3            15DC
BITS5TO3            15CC
BITS7TO0            15EC
BITS7TO4            15F4
BITS7TO6            1600
BITS8TO3            160C
BITS8TO4            1618
BITS8TO6            1624
BITS9TO7            1630
BRA_BYTE            1E76
BRA_LONG            1EDC
BRA_MSG             1A6E
BRA_WORD            1EA8
BSR_MSG             1A72
BYTE_MSG            1AB4
B_MSG               243C
CHECK_DATA          1098
CHECK_ODD           108A
CLEAR_ALL_REG       10A0
CMP_MSG             1A8B
CONVERT_ASCII       10DC
CONVERT_HEX         2172
CR                  D
C_MSG               243E
DATASRC_EA          1B94
DATA_B              211E
DATA_L              2158
DATA_MSG            2333
DATA_TABLE          20F8
DATA_W              213C
DISPLAY_REG         205E
DIVISOR_MSG         2324
DIVS_MSG            1A82
DIVU_MSG            1A7D
DOLLAR              1AB0
DOLLAR_MSG          2337
DONE                139C
DONE_CHECK          137E
D_MSG               2440
EA_ADD              1BE2
EA_ADDQ             1F50
EA_AS               1C4A
EA_ASRC             1C06
EA_BRA              1E5C
EA_DSRC             1C28
EA_GENERIC          1B80
EA_LEA              1F84
EA_MOVE             1B46
EA_MOVEM            1CD8
EA_MOVEQ            1F0E
EIGHT_MSG           2436
END_ADDR            24A2
END_ADDR_CHECK      105A
END_MSG             1B2D
ERROR_INSTR         1AED
ERROR_MSG           2446
ERROR_OP_MSG        1ABD
ERROR_SIZE_MSG      1AFD
EXT_MSG             1AAA
E_MSG               2442
FILE_LOOP           1320
FIVE_MSG            2430
FLIP_DONE           1176
FLIP_LOOP           1158
FLIP_START          1148
FOUR_MSG            242E
F_MSG               2444
GOODBYE_MSG         23CA
GREETING_MSG        235D
HEX_DONE            220A
IMPLEMENT_MSG       1AD1
INVALID_INSTR       15A6
JSR_MSG             1A6A
JUMP_0              1430
JUMP_1              1446
JUMP_2              1454
JUMP_3              146C
JUMP_4              1484
JUMP_5              14C0
JUMP_6              14D2
JUMP_7              14F0
JUMP_8              14F8
JUMP_9              1516
JUMP_A              151C
JUMP_B              1522
JUMP_C              1548
JUMP_D              1566
JUMP_E              1582
JUMP_ERROR          1598
JUMP_OP_CODE        13AE
J_ABS               1FCE
J_ABS_ERROR         20F6
J_ABS_TABLE         2068
J_MOVEA_L           16AE
J_MOVEA_W           16F6
J_MOVE_L            16D2
J_MOVE_W            171A
J_SUBCLASS_0        209C
J_SUBCLASS_1        20C4
J_TBL_A             1FD6
J_TBL_A_DECR        203E
J_TBL_A_INCR        201E
J_TBL_A_P           1FFE
J_TBL_D             1FEA
LEA_MSG             1A66
LET_ASCII           110A
LF                  A
LONG_MSG            1ABA
MODE_0_MSG          2310
MODE_1_MSG          2313
MODE_A_1_MSG        231A
MODE_A_2_MSG        231C
MODE_A_MSG          2316
MODE_MINUS_MSG      231F
MODE_TABLE          1F9C
MOVEA_MSG           1A52
MOVEM0_MSG          230C
MOVEM1_MSG          230E
MOVEM_0             1D96
MOVEM_1             1D9E
MOVEM_2             1DA6
MOVEM_3             1DAE
MOVEM_CHECK_PRINT   1DB6
MOVEM_DIVISOR       1DC2
MOVEM_DONE          1D94
MOVEM_L             17D2
MOVEM_LOOP          1D62
MOVEM_MODE0         1DF0
MOVEM_MODE1         1E0A
MOVEM_MODE2         1E26
MOVEM_MODE3         1E40
MOVEM_MSG           1A60
MOVEM_OR_EXT        17A2
MOVEM_PRINT_MODE    1DD2
MOVEM_REG           1CE8
MOVEM_SRC           1D1C
MOVEM_START         1D50
MOVEM_W             17AE
MOVEQ_MSG           1A76
MOVE_MSG            1A4D
MULS_MSG            1A94
MULU_MSG            1A8F
NEW_LINE            2454
NEXT_PAGE_MSG       2457
NINE_MSG            2438
NOP_MSG             1A5C
NUM_ASCII           10F6
ONE_MSG             2428
OPMODE              1878
OPMODE_ADDA         18B2
OPMODE_ASHIFT       18CC
OP_CODE_ADD         1990
OP_CODE_ADDA        19A8
OP_CODE_ADDQ        1804
OP_CODE_ASD_MEM     19FC
OP_CODE_ASD_REG     19C0
OP_CODE_ASR_MEM     1A28
OP_CODE_ASR_REG     19E4
OP_CODE_BASE_MOVE   1690
OP_CODE_BRA         1932
OP_CODE_BSR         1946
OP_CODE_CMP         181E
OP_CODE_DIVS        1850
OP_CODE_DIVU        1838
OP_CODE_EXT         17F6
OP_CODE_JSR         1766
OP_CODE_LEA         177A
OP_CODE_MOVEM       1794
OP_CODE_MOVEQ       195A
OP_CODE_MULS        196E
OP_CODE_MULU        197C
OP_CODE_NOP         1758
OP_CODE_ORI         173E
OP_CODE_SUB         185E
ORI_MSG             1A58
PERCENT             1AB2
POUND               1AAE
POUND_MSG           2328
PRINT_ADDRESS       111E
PRINT_ADDRESS_EXIT  1212
PRINT_ADDRESS_LOOP  1178
PRINT_ADR0          1220
PRINT_ADR1          1230
PRINT_ADR2          1240
PRINT_ADR3          1250
PRINT_ADR4          1260
PRINT_ADR5          1270
PRINT_ADR6          1280
PRINT_ADR7          1290
PRINT_ADR8          12A0
PRINT_ADR9          12B0
PRINT_ADRA          12C0
PRINT_ADRB          12D0
PRINT_ADRC          12E0
PRINT_ADRD          12F0
PRINT_ADRE          1300
PRINT_ADRF          1310
PRINT_ASCII0        220C
PRINT_ASCII1        221C
PRINT_ASCII2        222C
PRINT_ASCII3        223C
PRINT_ASCII4        224C
PRINT_ASCII5        225C
PRINT_ASCII6        226C
PRINT_ASCII7        227C
PRINT_ASCII8        228C
PRINT_ASCII9        229C
PRINT_ASCIIA        22AC
PRINT_ASCIIB        22BC
PRINT_ASCIIC        22CC
PRINT_ASCIID        22DC
PRINT_ASCIIE        22EC
PRINT_ASCIIF        22FC
PRINT_BYTE          18EE
PRINT_DELAY         135E
PRINT_LONG          1912
PRINT_WORD          1900
REPEAT_MSG          2388
REVERSESRC_EA       1BC4
SAVE_END            109A
SAVE_START          104C
SEPERATOR           2326
SEVEN_MSG           2434
SIX_MSG             2432
SPACE_MSG           2423
START               1000
START_ADDR_CHECK    1016
START_MSG           1B13
STA_ADDR            247A
SUBCLASS1_1         232B
SUBCLASS1_2         232F
SUBCLASS_CHECK      2082
SUB_MSG             1A87
SUCCESS_MSG         244C
TEMP_MSG            2339
THREE_MSG           242C
TMP_STR             233D
TWO_MSG             242A
WORD_MSG            1AB7
WRONG_SIZE          1924
ZERO_MSG            2426
