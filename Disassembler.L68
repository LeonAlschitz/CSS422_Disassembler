00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/12/2021 12:31:22 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; D0 is used to store values that will get compared
00001000                            13      
00001000                            14  START:
00001000                            15  
00001000                            16          ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001000  43F9 00001417             17          LEA         START_MSG, A1
00001006  103C 000E                 18          MOVE.B      #14, D0    
0000100A  4E4F                      19          TRAP        #15
0000100C                            20          
0000100C  43F9 0000182D             21          LEA         STA_ADDR, A1
00001012  103C 0002                 22          MOVE.B      #2, D0
00001016  4E4F                      23          TRAP        #15             ; D1 has the length of the address
00001018                            24          
00001018                            25          
00001018  4282                      26          CLR.L       D2
0000101A  4283                      27          CLR.L       D3
0000101C  4284                      28          CLR.L       D4
0000101E  4EB9 00001052             29          JSR         CONVERT_ASCII
00001024  2644                      30          MOVEA.L     D4,A3
00001026                            31          
00001026                            32          
00001026                            33          
00001026                            34          
00001026                            35          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
00001026                            36          
00001026  43F9 00001431             37          LEA         END_MSG, A1
0000102C  103C 000E                 38          MOVE.B      #14, D0    
00001030  4E4F                      39          TRAP        #15
00001032                            40          
00001032  43F9 00001855             41          LEA         END_ADDR, A1
00001038  103C 0002                 42          MOVE.B      #2, D0
0000103C  4E4F                      43          TRAP        #15
0000103E                            44          
0000103E  4282                      45          CLR.L       D2
00001040  4283                      46          CLR.L       D3
00001042  4284                      47          CLR.L       D4
00001044  4EB9 00001052             48          JSR         CONVERT_ASCII
0000104A  2844                      49          MOVEA.L     D4,A4
0000104C                            50          
0000104C                            51          
0000104C                            52          ; add loop later that checks if data entered is valid for both messages
0000104C                            53          
0000104C                            54          
0000104C  4EB9 00001296             55          JSR         FILE_LOOP
00001052                            56          
00001052                            57  
00001052                            58  
00001052                            59  
00001052                            60  
00001052                            61  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
00001052                            62          
00001052  0C01 0000                 63          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001056  6700 0012                 64          BEQ         ASCII_DONE
0000105A                            65      
0000105A  1419                      66          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
0000105C                            67          
0000105C                            68  
0000105C                            69      
0000105C  103C 0039                 70          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
00001060  B400                      71          CMP.B       D0, D2
00001062                            72          
00001062                            73          ; SIMHALT
00001062  6F00 0008                 74          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
00001066  6000 0018                 75          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
0000106A                            76  
0000106A                            77  ASCII_DONE:
0000106A  4E75                      78          RTS
0000106C                            79  
0000106C                            80  
0000106C                            81  NUM_ASCII:
0000106C  5301                      82          SUBI.B      #$1, D1
0000106E                            83          
0000106E  103C 0030                 84          MOVE.B      #$30, D0
00001072  9400                      85          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
00001074  D802                      86          ADD.B       D2, D4      ; new ASCII number stored at D4
00001076                            87          
00001076                            88  
00001076  0C01 0000                 89          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000107A  67EE                      90          BEQ         ASCII_DONE
0000107C                            91          
0000107C  E984                      92          ASL.L       #4, D4
0000107E                            93        
0000107E  60D2                      94          BRA         CONVERT_ASCII
00001080                            95          
00001080                            96          
00001080                            97  LET_ASCII:
00001080  5301                      98          SUBI.B      #$1, D1
00001082                            99                 
00001082                           100  
00001082  103C 0037                101          MOVE.B      #$37, D0
00001086  9400                     102          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001088  D802                     103          ADD.B       D2, D4      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
0000108A                           104                                  ; 46 is used to represent F in Hex. 46 - 37 = F
0000108A                           105          
0000108A  0C01 0000                106          CMPI.B      #$0, D1     ; check if we have traversed the whole length
0000108E  67DA                     107          BEQ         ASCII_DONE
00001090                           108          
00001090  E984                     109          ASL.L       #4, D4
00001092                           110          
00001092                           111          
00001092  60BE                     112          BRA         CONVERT_ASCII
00001094                           113  
00001094                           114  PRINT_ADDRESS:
00001094                           115          ; SIMHALT 0000 0000
00001094  4281                     116          CLR.L       D1
00001096  4282                     117          CLR.L       D2
00001098  240B                     118          MOVE.L      A3, D2
0000109A                           119          
0000109A                           120          
0000109A                           121  
0000109A                           122          
0000109A  4EB9 000010BE            123          JSR         FLIP_START
000010A0  2607                     124          MOVE.L      D7, D3
000010A2                           125  
000010A2  4281                     126          CLR.L       D1
000010A4  4282                     127          CLR.L       D2
000010A6  4287                     128          CLR.L       D7
000010A8                           129          
000010A8  123C 0008                130          MOVE.B      #$8, D1
000010AC  6000 0040                131          BRA         PRINT_ADDRESS_LOOP
000010B0                           132  
000010B0  43F9 000017F9            133          LEA         SPACE_MSG, A1
000010B6  103C 000E                134          MOVE.B      #14, D0    
000010BA  4E4F                     135          TRAP        #15
000010BC                           136          
000010BC  4E75                     137          RTS
000010BE                           138          
000010BE                           139  FLIP_START:        
000010BE  4281                     140          CLR.L       D1
000010C0  4287                     141          CLR.L       D7
000010C2                           142          
000010C2  123C 0008                143          MOVE.B      #$8, D1
000010C6                           144          
000010C6  4EB9 000010CE            145          JSR         FLIP_LOOP
000010CC                           146          
000010CC                           147          
000010CC  4E75                     148          RTS
000010CE                           149          
000010CE                           150  FLIP_LOOP:
000010CE                           151  
000010CE                           152          ; SIMHALT
000010CE                           153          
000010CE  0C01 0000                154          CMPI.B      #$0, D1
000010D2  6700 0018                155          BEQ         FLIP_DONE
000010D6  5301                     156          SUBI.B      #$1, D1
000010D8  E987                     157          ASL.L       #4, D7
000010DA                           158          
000010DA  4284                     159          CLR.L       D4
000010DC                           160          
000010DC  1802                     161          MOVE.B      D2, D4
000010DE                           162          
000010DE  103C 001C                163          MOVE.B      #28,D0    
000010E2  E1AC                     164          LSL.L       D0,D4     
000010E4  E99C                     165          ROL.L       #4,D4
000010E6                           166          
000010E6  DE04                     167          ADD.B       D4, D7
000010E8                           168          
000010E8                           169          
000010E8  E882                     170          ASR.L       #4, D2
000010EA                           171          
000010EA  60E2                     172          BRA         FLIP_LOOP
000010EC                           173  
000010EC                           174  FLIP_DONE:
000010EC  4E75                     175          RTS
000010EE                           176  
000010EE                           177  
000010EE                           178          
000010EE                           179  
000010EE                           180  PRINT_ADDRESS_LOOP:
000010EE                           181          ; SIMHALT
000010EE                           182          
000010EE  0C01 0000                183          CMPI.B      #$0, D1
000010F2  6700 0094                184          BEQ         PRINT_ADDRESS_EXIT
000010F6                           185          
000010F6                           186          
000010F6  5301                     187          SUBI.B      #$1, D1
000010F8                           188          
000010F8  1403                     189          MOVE.B      D3, D2
000010FA  103C 001C                190          MOVE.B      #28,D0    
000010FE  E1AA                     191          LSL.L       D0,D2     
00001100  E99A                     192          ROL.L       #4,D2 
00001102                           193          
00001102                           194          
00001102  E883                     195          ASR.L       #4, D3
00001104                           196          
00001104                           197          
00001104  B43C 0000                198          CMP.B       #0,D2
00001108  6700 008C                199          BEQ         PRINT_ADR0
0000110C  B43C 0001                200          CMP.B       #1,D2
00001110  6700 0094                201          BEQ         PRINT_ADR1
00001114  B43C 0002                202          CMP.B       #2,D2
00001118  6700 009C                203          BEQ         PRINT_ADR2
0000111C  B43C 0003                204          CMP.B       #3,D2
00001120  6700 00A4                205          BEQ         PRINT_ADR3
00001124  B43C 0004                206          CMP.B       #4,D2
00001128  6700 00AC                207          BEQ         PRINT_ADR4
0000112C  B43C 0005                208          CMP.B       #5,D2
00001130  6700 00B4                209          BEQ         PRINT_ADR5
00001134  B43C 0006                210          CMP.B       #6,D2
00001138  6700 00BC                211          BEQ         PRINT_ADR6
0000113C  B43C 0007                212          CMP.B       #7,D2
00001140  6700 00C4                213          BEQ         PRINT_ADR7
00001144  B43C 0008                214          CMP.B       #8,D2
00001148  6700 00CC                215          BEQ         PRINT_ADR8
0000114C  B43C 0009                216          CMP.B       #9,D2
00001150  6700 00D4                217          BEQ         PRINT_ADR9
00001154  B43C 000A                218          CMP.B       #$A,D2
00001158  6700 00DC                219          BEQ         PRINT_ADRA
0000115C  B43C 000B                220          CMP.B       #$B,D2
00001160  6700 00E4                221          BEQ         PRINT_ADRB
00001164  B43C 000C                222          CMP.B       #$C,D2
00001168  6700 00EC                223          BEQ         PRINT_ADRC
0000116C  B43C 000D                224          CMP.B       #$D,D2
00001170  6700 00F4                225          BEQ         PRINT_ADRD
00001174  B43C 000E                226          CMP.B       #$E,D2
00001178  6700 00FC                227          BEQ         PRINT_ADRE
0000117C  B43C 000F                228          CMP.B       #$F,D2
00001180  6700 0104                229          BEQ         PRINT_ADRF
00001184                           230  
00001184                           231  
00001184                           232  
00001184  6000 FF68                233          BRA         PRINT_ADDRESS_LOOP
00001188                           234          
00001188                           235  
00001188                           236          
00001188                           237  
00001188                           238  PRINT_ADDRESS_EXIT:
00001188  43F9 000017F9            239          LEA         SPACE_MSG, A1
0000118E  103C 000E                240          MOVE.B      #14, D0    
00001192  4E4F                     241          TRAP        #15
00001194                           242          
00001194  4E75                     243          RTS
00001196                           244          
00001196                           245  PRINT_ADR0:
00001196  43F9 000017FC            246          LEA         ZERO_MSG, A1
0000119C  103C 000E                247          MOVE.B      #14, D0    
000011A0  4E4F                     248          TRAP        #15
000011A2  6000 FF4A                249          BRA         PRINT_ADDRESS_LOOP
000011A6                           250  PRINT_ADR1:
000011A6  43F9 000017FE            251          LEA         ONE_MSG, A1
000011AC  103C 000E                252          MOVE.B      #14, D0    
000011B0  4E4F                     253          TRAP        #15
000011B2  6000 FF3A                254          BRA         PRINT_ADDRESS_LOOP
000011B6                           255  PRINT_ADR2:
000011B6  43F9 00001800            256          LEA         TWO_MSG, A1
000011BC  103C 000E                257          MOVE.B      #14, D0    
000011C0  4E4F                     258          TRAP        #15
000011C2  6000 FF2A                259          BRA         PRINT_ADDRESS_LOOP
000011C6                           260  PRINT_ADR3:
000011C6  43F9 00001802            261          LEA         THREE_MSG, A1
000011CC  103C 000E                262          MOVE.B      #14, D0    
000011D0  4E4F                     263          TRAP        #15
000011D2  6000 FF1A                264          BRA         PRINT_ADDRESS_LOOP
000011D6                           265  PRINT_ADR4:
000011D6  43F9 00001804            266          LEA         FOUR_MSG, A1
000011DC  103C 000E                267          MOVE.B      #14, D0    
000011E0  4E4F                     268          TRAP        #15
000011E2  6000 FF0A                269          BRA         PRINT_ADDRESS_LOOP
000011E6                           270  PRINT_ADR5:
000011E6  43F9 00001806            271          LEA         FIVE_MSG, A1
000011EC  103C 000E                272          MOVE.B      #14, D0    
000011F0  4E4F                     273          TRAP        #15
000011F2  6000 FEFA                274          BRA         PRINT_ADDRESS_LOOP
000011F6                           275  PRINT_ADR6:
000011F6  43F9 00001808            276          LEA         SIX_MSG, A1
000011FC  103C 000E                277          MOVE.B      #14, D0    
00001200  4E4F                     278          TRAP        #15
00001202  6000 FEEA                279          BRA         PRINT_ADDRESS_LOOP
00001206                           280  PRINT_ADR7:
00001206  43F9 0000180A            281          LEA         SEVEN_MSG, A1
0000120C  103C 000E                282          MOVE.B      #14, D0    
00001210  4E4F                     283          TRAP        #15
00001212  6000 FEDA                284          BRA         PRINT_ADDRESS_LOOP
00001216                           285  PRINT_ADR8:
00001216  43F9 0000180C            286          LEA         EIGHT_MSG, A1
0000121C  103C 000E                287          MOVE.B      #14, D0    
00001220  4E4F                     288          TRAP        #15
00001222  6000 FECA                289          BRA         PRINT_ADDRESS_LOOP
00001226                           290  PRINT_ADR9:
00001226  43F9 0000180E            291          LEA         NINE_MSG, A1
0000122C  103C 000E                292          MOVE.B      #14, D0    
00001230  4E4F                     293          TRAP        #15
00001232  6000 FEBA                294          BRA         PRINT_ADDRESS_LOOP
00001236                           295  PRINT_ADRA:
00001236  43F9 00001810            296          LEA         A_MSG, A1
0000123C  103C 000E                297          MOVE.B      #14, D0    
00001240  4E4F                     298          TRAP        #15
00001242  6000 FEAA                299          BRA         PRINT_ADDRESS_LOOP
00001246                           300  PRINT_ADRB:
00001246  43F9 00001812            301          LEA         B_MSG, A1
0000124C  103C 000E                302          MOVE.B      #14, D0    
00001250  4E4F                     303          TRAP        #15
00001252  6000 FE9A                304          BRA         PRINT_ADDRESS_LOOP
00001256                           305  PRINT_ADRC:
00001256  43F9 00001814            306          LEA         C_MSG, A1
0000125C  103C 000E                307          MOVE.B      #14, D0    
00001260  4E4F                     308          TRAP        #15
00001262  6000 FE8A                309          BRA         PRINT_ADDRESS_LOOP
00001266                           310  PRINT_ADRD:
00001266  43F9 00001816            311          LEA         D_MSG, A1
0000126C  103C 000E                312          MOVE.B      #14, D0    
00001270  4E4F                     313          TRAP        #15
00001272  6000 FE7A                314          BRA         PRINT_ADDRESS_LOOP
00001276                           315  PRINT_ADRE:
00001276  43F9 00001818            316          LEA         E_MSG, A1
0000127C  103C 000E                317          MOVE.B      #14, D0    
00001280  4E4F                     318          TRAP        #15
00001282  6000 FE6A                319          BRA         PRINT_ADDRESS_LOOP
00001286                           320  PRINT_ADRF:
00001286  43F9 0000181A            321          LEA         F_MSG, A1
0000128C  103C 000E                322          MOVE.B      #14, D0    
00001290  4E4F                     323          TRAP        #15
00001292  6000 FE5A                324          BRA         PRINT_ADDRESS_LOOP
00001296                           325  
00001296                           326  
00001296                           327  FILE_LOOP:
00001296  4280                     328          CLR.L       D0
00001298  4281                     329          CLR.L       D1
0000129A  4282                     330          CLR.L       D2
0000129C  4283                     331          CLR.L       D3
0000129E  4284                     332          CLR.L       D4
000012A0  4285                     333          CLR.L       D5
000012A2  4286                     334          CLR.L       D6
000012A4  4287                     335          CLR.L       D7
000012A6  FFFF FFFF                336          SIMHALT
000012AA                           337  
000012AA                           338  
000012AA                           339  
000012AA                           340          ;       Add branch here that will take the current address in A3
000012AA                           341          ;       Turn it into characters and print it to the screen with space
000012AA  4EB8 1094                342          JSR         PRINT_ADDRESS
000012AE                           343          
000012AE                           344          
000012AE  381B                     345          MOVE.W      (A3)+, D4
000012B0                           346  
000012B0  4EB9 000012D4            347          JSR         JUMP_OP_CODE
000012B6                           348          
000012B6  43F9 0000182A            349          LEA         NEW_LINE, A1
000012BC  103C 000E                350          MOVE.B      #14, D0
000012C0  4E4F                     351          TRAP        #15
000012C2                           352  
000012C2                           353  
000012C2  B9CB                     354          CMP.L      A3, A4
000012C4                           355          ;       If our pointer is at the end, BRA to DONE
000012C4                           356          
000012C4                           357          
000012C4                           358          
000012C4                           359          
000012C4  6700 0008                360          BEQ         DONE
000012C8  6F00 0004                361          BLE         DONE       
000012CC  60C8                     362          BRA         FILE_LOOP
000012CE                           363  
000012CE                           364  
000012CE                           365  
000012CE                           366  
000012CE                           367  
000012CE                           368  DONE:   
000012CE  103C 0009                369          MOVE.B      #9, D0
000012D2  4E4F                     370          TRAP        #15
000012D4                           371          
000012D4                           372          
000012D4                           373          
000012D4                           374  * Put variables and constants here
000012D4                           375                  INCLUDE     'Disassembler_OP_Codes.x68'
000012D4                           376  
000012D4                           377  
000012D4                           378  
000012D4                           379  ; D4 Contains Original hex code
000012D4                           380  ; D3 Contains modified hex code
000012D4                           381  
000012D4                           382  ; D1 is used to bit shift
000012D4                           383  
000012D4                           384  
000012D4                           385  ; D4 = XXXX YYYY YYYY YYYY
000012D4                           386  JUMP_OP_CODE:
000012D4  4283                     387          CLR.L       D3
000012D6  2604                     388          MOVE.L      D4, D3
000012D8  4281                     389          CLR.L       D1
000012DA  4282                     390          CLR.L       D2
000012DC  123C 000C                391          MOVE.B      #12, D1
000012E0  E26B                     392          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000012E2                           393  
000012E2  6000 0004                394          BRA         JUMP_1
000012E6                           395          
000012E6                           396          
000012E6                           397  JUMP_0:
000012E6                           398  
000012E6  4E75                     399          RTS 
000012E8                           400          
000012E8                           401          
000012E8                           402  JUMP_1:
000012E8  B63C 0001                403          CMP.B       #$1, D3 ;First 4 bits:  0001
000012EC  6600 0010                404          BNE         JUMP_2
000012F0  4EB9 00001368            405          JSR         OP_CODE_BASE_MOVE
000012F6  4EB9 0000144A            406          JSR         EA_MOVE 
000012FC  4E75                     407          RTS
000012FE                           408  
000012FE                           409  
000012FE                           410  JUMP_2:             ; MOVE.L or MOVEA.L
000012FE  B63C 0002                411          CMP.B       #$2, D3 ;First 4 bits:  0010
00001302  6600 0020                412          BNE         JUMP_3
00001306  4EB9 0000135A            413          JSR         ISOLATE_DESTM
0000130C  B63C 0001                414          CMP.B       #$1, D3 
00001310  6700 0074                415          BEQ         J_MOVEA_L
00001314  B63C 0002                416          CMP.B       #$2, D3 
00001318  6700 0086                417          BEQ         J_MOVE_L
0000131C  4EB9 0000144A            418          JSR         EA_MOVE 
00001322  4E75                     419          RTS
00001324                           420          
00001324                           421  
00001324                           422  JUMP_3:             ; MOVE.W or MOVEA.W
00001324  B63C 0003                423          CMP.B       #$3, D3  ;First 4 bits:  0011
00001328                           424          ; BNE         JUMP_4
00001328  4EB9 0000135A            425          JSR         ISOLATE_DESTM
0000132E  B63C 0001                426          CMP.B       #$1, D3 
00001332  6700 0086                427          BEQ         J_MOVEA_W
00001336  B63C 0002                428          CMP.B       #$2, D3
0000133A  6700 0098                429          BEQ         J_MOVE_W
0000133E                           430          
0000133E  4EB9 0000144A            431          JSR         EA_MOVE
00001344                           432          
00001344  4E75                     433          RTS
00001346                           434  
00001346                           435  
00001346                           436  JUMP_4:
00001346                           437  
00001346  4E75                     438          RTS 
00001348                           439  
00001348                           440  
00001348                           441  
00001348                           442  JUMP_5:
00001348  B63C 0005                443          CMP.B       #$5, D3
0000134C  6000 00A0                444          BRA         OP_CODE_ADDQ
00001350  4E75                     445          RTS 
00001352                           446          
00001352                           447  JUMP_6:
00001352                           448  
00001352  4E75                     449          RTS 
00001354                           450  
00001354                           451          
00001354                           452  ;.
00001354                           453  ;.
00001354                           454  ;.
00001354                           455  ;.
00001354                           456  ;.
00001354                           457  ;.
00001354                           458  ;.
00001354                           459   
00001354                           460  JUMP_E:
00001354                           461  
00001354  4E75                     462          RTS 
00001356                           463           
00001356                           464          
00001356                           465          
00001356                           466  
00001356                           467          
00001356                           468          ;LEA         ERROR_MSG, A1
00001356                           469          ;MOVE.B      #14, D0    
00001356                           470          ;TRAP        #15
00001356  6000 FF76                471          BRA         DONE
0000135A                           472  
0000135A                           473  
0000135A                           474  
0000135A                           475  
0000135A                           476          ;  Move valid sizes: 00, 11 10
0000135A                           477          ;  MoveA valid sizes: 11, 10
0000135A                           478          ; Code = 103C
0000135A                           479  
0000135A                           480  
0000135A                           481  
0000135A                           482  
0000135A                           483  ; Functions to help isolate bits
0000135A                           484  ; 0000 000X XX00 0000
0000135A                           485  ; MOVE = 0011/0010 XXXY YYXX XXXX
0000135A                           486  ; MOVEA = 0011/0010 XXX0 01XX XXXX
0000135A                           487  ISOLATE_DESTM:
0000135A  4283                     488          CLR.L       D3          
0000135C  3604                     489          MOVE.W      D4,D3 ; D3 = YYYY YYYX XXYY YYYY
0000135E  EF4B                     490          LSL.W       #7,D3 ; Shift left 7 bits to 0 out those values  D3 = XXXY YYYY Y000 0000 
00001360  123C 000D                491          MOVE.B      #13,D1
00001364  E26B                     492          LSR.W       D1,D3 ; Shift right 13. 7 to compensate for previous shift and another 6 on top; XXXY YYYY Y000 0000  => 0000 0000 0000 0XXX
00001366  4E75                     493          RTS 
00001368                           494  
00001368                           495  
00001368                           496  
00001368                           497  
00001368                           498          
00001368                           499          
00001368                           500          
00001368                           501  ; MOVE/MOVEA BLOCK ----------------------------------
00001368                           502  OP_CODE_BASE_MOVE:
00001368                           503          ; This should only execute for Move.B
00001368  43F9 00001403            504          LEA         MOVE_MSG, A1
0000136E  103C 000E                505          MOVE.B      #14, D0
00001372  4E4F                     506          TRAP        #15
00001374  43F9 0000140E            507          LEA         BYTE_MSG, A1
0000137A  103C 000E                508          MOVE.B      #14, D0
0000137E  4E4F                     509          TRAP        #15
00001380                           510          
00001380  163C 0000                511          MOVE.B      #0, D3
00001384                           512          
00001384  4E75                     513          RTS         
00001386                           514  
00001386                           515  
00001386                           516  ; first 4 bits = 0010 BLOCK --------------------    
00001386                           517  J_MOVEA_L:
00001386  43F9 00001408            518      LEA         MOVEA_MSG, A1
0000138C  103C 000E                519      MOVE.B      #14, D0
00001390  4E4F                     520      TRAP        #15
00001392  43F9 00001414            521      LEA         LONG_MSG, A1
00001398  103C 000E                522      MOVE.B      #14, D0
0000139C  4E4F                     523      TRAP        #15
0000139E  4E75                     524      RTS    
000013A0                           525  J_MOVE_L:
000013A0  43F9 00001403            526      LEA         MOVE_MSG, A1
000013A6  103C 000E                527      MOVE.B      #14, D0
000013AA  4E4F                     528      TRAP        #15
000013AC  43F9 00001414            529      LEA         LONG_MSG, A1
000013B2  103C 000E                530      MOVE.B      #14, D0
000013B6  4E4F                     531      TRAP        #15
000013B8  4E75                     532      RTS
000013BA                           533  ; /BLOCK --------------------
000013BA                           534  
000013BA                           535  ; first 4 bits = 0011 BLOCK --------------------   
000013BA                           536  
000013BA                           537  J_MOVEA_W:
000013BA  43F9 00001408            538      LEA         MOVEA_MSG, A1
000013C0  103C 000E                539      MOVE.B      #14, D0
000013C4  4E4F                     540      TRAP        #15
000013C6  43F9 00001411            541      LEA         WORD_MSG, A1
000013CC  103C 000E                542      MOVE.B      #14, D0
000013D0  4E4F                     543      TRAP        #15
000013D2  4E75                     544      RTS  
000013D4                           545      
000013D4                           546  J_MOVE_W:
000013D4  43F9 00001403            547      LEA         MOVE_MSG, A1
000013DA  103C 000E                548      MOVE.B      #14, D0
000013DE  4E4F                     549      TRAP        #15
000013E0  43F9 00001411            550      LEA         WORD_MSG, A1
000013E6  103C 000E                551      MOVE.B      #14, D0
000013EA  4E4F                     552      TRAP        #15
000013EC  4E75                     553      RTS  
000013EE                           554      
000013EE                           555  ; /BLOCK --------------------
000013EE                           556  
000013EE                           557  
000013EE                           558  ; END MOVE BLOCK ------------------------------
000013EE                           559  
000013EE                           560          
000013EE                           561  OP_CODE_ADDQ:
000013EE                           562  
000013EE  43F9 000013FE            563          LEA         ADDQ_MSG, A1
000013F4  103C 000E                564          MOVE.B      #14, D0
000013F8  4E4F                     565          TRAP        #15
000013FA  6000 FED2                566          BRA         DONE
000013FE                           567  
000013FE                           568  
000013FE= 41 44 44 51 00           569  ADDQ_MSG:       DC.B        'ADDQ',0
00001403= 4D 4F 56 45 00           570  MOVE_MSG:       DC.B        'MOVE',0
00001408= 4D 4F 56 45 41 00        571  MOVEA_MSG:       DC.B        'MOVEA',0
0000140E                           572  
0000140E                           573  ; Size messages
0000140E                           574  
0000140E= 2E 42 00                 575  BYTE_MSG:       DC.B        '.B',0
00001411= 2E 57 00                 576  WORD_MSG:       DC.B        '.W',0
00001414= 2E 4C 00                 577  LONG_MSG:       DC.B        '.L',0
00001417                           578  
00001417                           579  
00001417                           580  
00001417                           581  
00001417                           582  
00001417                           583  
00001417                           584  
00001417                           585  
00001417                           586  
00001417                           587  
00001417                           588  
00001417                           589  
00001417                           590  
00001417                           591  
00001417                           592  
00001417                           593  -------------------- end include --------------------
00001417= 45 6E 74 65 72 20 ...    594  START_MSG:      DC.B        'Enter a starting address:',0
00001431= 45 6E 74 65 72 20 ...    595  END_MSG:        DC.B        'Enter an ending address:',0               
0000144A                           596                  INCLUDE     'Disassembler_EA_Codes.x68'
0000144A                           597  
0000144A                           598  
0000144A                           599  ; D3 = OP size. ie. Byte, Word, Long
0000144A                           600  ; D4 = Original hex code
0000144A                           601  ; D5 = Current Mode being isolated
0000144A                           602  ; D6 = Current Register being isolated
0000144A                           603  
0000144A                           604  ; A3 will store starting address
0000144A                           605  ; A4 will store ending address
0000144A                           606  
0000144A                           607  
0000144A                           608  ; -------------------------------------
0000144A                           609  ; General outline
0000144A                           610  
0000144A                           611  
0000144A                           612  ; Get Source Mode and Registration
0000144A                           613  ; Get Destination Mode and Registration
0000144A                           614  ; based off of these values, you can determine the Addressing mode, and size
0000144A                           615  
0000144A                           616  ; Depending on the opcode, the mode can be found in a few different locations
0000144A                           617  
0000144A                           618  
0000144A                           619  ; Print out the rest of the data as you process it
0000144A                           620  
0000144A                           621  
0000144A                           622  ; --------------------------------------
0000144A                           623  
0000144A                           624  
0000144A                           625  
0000144A                           626  ; based on the size of the move operation Print out an amount of data as is.
0000144A                           627  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
0000144A                           628  EA_MOVE:
0000144A                           629          
0000144A                           630  ; A = Size
0000144A                           631  ; B = Destination Register
0000144A                           632  ; C = Destination Mode
0000144A                           633  ; D = Source Mode
0000144A                           634  ; E = Source Register
0000144A                           635  
0000144A                           636  ; 00AA BBBC CCDD DEEE 
0000144A                           637          ; SIMHALT
0000144A                           638      
0000144A  4285                     639          CLR.L       D5
0000144C  4286                     640          CLR.L       D6
0000144E  3A04                     641          MOVE.W      D4, D5
00001450  3C04                     642          MOVE.W      D4, D6
00001452                           643          
00001452                           644          
00001452  123C 000A                645          MOVE.B      #10,D1
00001456  E36D                     646          LSL.W       D1,D5       
00001458  123C 000D                647          MOVE.B      #13,D1
0000145C  E26D                     648          LSR.W       D1,D5
0000145E                           649          ; 0000 0000 00DD D000
0000145E                           650          ; Isolating Source Mode
0000145E                           651          
0000145E                           652          
0000145E  E36E                     653          LSL.W       D1,D6
00001460  E26E                     654          LSR.W       D1,D6
00001462                           655          ; 0000 0000 0000 0EEE
00001462                           656          ; Isolating Source Register 
00001462                           657         
00001462  4EB9 00001494            658          JSR         MODE_TABLE
00001468                           659          
00001468                           660          ; Print Out ", "
00001468  43F9 000017CA            661          LEA         SEPERATOR, A1
0000146E  103C 000E                662          MOVE.B      #14, D0
00001472  4E4F                     663          TRAP        #15
00001474                           664          
00001474                           665          
00001474                           666          
00001474  4285                     667          CLR.L       D5
00001476  4286                     668          CLR.L       D6
00001478  3A04                     669          MOVE.W      D4, D5
0000147A  3C04                     670          MOVE.W      D4, D6
0000147C                           671          
0000147C  123C 0007                672          MOVE.B      #7,D1     
00001480  E36D                     673          LSL.W       D1,D5       
00001482  123C 000D                674          MOVE.B      #13,D1
00001486  E26D                     675          LSR.W       D1,D5  
00001488                           676              
00001488  E94E                     677          LSL.W       #4,D6  
0000148A  E26E                     678          LSR.W       D1,D6
0000148C                           679          
0000148C  4EB9 00001494            680          JSR         MODE_TABLE
00001492                           681          
00001492                           682          ; Isolate Destination Mode and Register
00001492                           683          
00001492                           684          ; JSR EA_JUMP_TABLE
00001492                           685          
00001492                           686          ; Final output Format = 00001000 MOVE.X D##, D##
00001492                           687      
00001492  4E75                     688          RTS
00001494                           689      
00001494                           690  
00001494                           691  
00001494                           692  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4
00001494                           693  MODE_TABLE:
00001494                           694  
00001494  BA3C 0000                695          CMP.B       #0,D5
00001498  6700 002C                696          BEQ         J_TBL_D
0000149C  BA3C 0002                697          CMP.B       #2,D5
000014A0  6700 0038                698          BEQ         J_TBL_A
000014A4  BA3C 0003                699          CMP.B       #3,D5
000014A8  6700 0050                700          BEQ         J_TBL_A_INCR
000014AC  BA3C 0004                701          CMP.B       #4,D5
000014B0  6700 0068                702          BEQ         J_TBL_A_DECR
000014B4  BA3C 0007                703          CMP.B       #7,D5
000014B8  6700 0004                704          BEQ         J_ABS
000014BC                           705          
000014BC  4E75                     706          RTS
000014BE                           707          ;   deal with errors here
000014BE                           708  
000014BE                           709  J_ABS:
000014BE  4EB9 00001544            710          JSR         J_ABS_TABLE
000014C4  4E75                     711          RTS
000014C6                           712  
000014C6                           713  
000014C6                           714  
000014C6                           715  J_TBL_D:
000014C6  43F9 000017BA            716          LEA         MODE_0_MSG, A1 ; D#
000014CC  103C 000E                717          MOVE.B      #14, D0
000014D0  4E4F                     718          TRAP        #15
000014D2  4EB9 0000153A            719          JSR         DISPLAY_REG
000014D8  4E75                     720          RTS
000014DA                           721  
000014DA                           722  J_TBL_A:
000014DA                           723  
000014DA  43F9 000017BE            724          LEA         MODE_A_MSG, A1 ; (A#)
000014E0  103C 000E                725          MOVE.B      #14, D0
000014E4  4E4F                     726          TRAP        #15
000014E6  4EB9 0000153A            727          JSR         DISPLAY_REG
000014EC                           728          
000014EC  43F9 000017C1            729          LEA         MODE_A_1_MSG, A1
000014F2  103C 000E                730          MOVE.B      #14, D0
000014F6  4E4F                     731          TRAP        #15
000014F8                           732  
000014F8                           733          
000014F8  4E75                     734          RTS
000014FA                           735      
000014FA                           736  J_TBL_A_INCR:
000014FA  43F9 000017BE            737          LEA         MODE_A_MSG, A1 ; (A#)+
00001500  103C 000E                738          MOVE.B      #14, D0
00001504  4E4F                     739          TRAP        #15
00001506  4EB9 0000153A            740          JSR         DISPLAY_REG
0000150C                           741          
0000150C  43F9 000017C3            742          LEA         MODE_A_2_MSG, A1
00001512  103C 000E                743          MOVE.B      #14, D0
00001516  4E4F                     744          TRAP        #15
00001518                           745  
00001518  4E75                     746          RTS
0000151A                           747          
0000151A                           748  J_TBL_A_DECR:
0000151A  43F9 000017C6            749          LEA         MODE_MINUS_MSG, A1 ; -(A#)
00001520  103C 000E                750          MOVE.B      #14, D0
00001524  4E4F                     751          TRAP        #15
00001526  4EB9 0000153A            752          JSR         DISPLAY_REG
0000152C                           753          
0000152C  43F9 000017C1            754          LEA         MODE_A_1_MSG, A1
00001532  103C 000E                755          MOVE.B      #14, D0
00001536  4E4F                     756          TRAP        #15
00001538                           757  
00001538  4E75                     758          RTS
0000153A                           759          
0000153A                           760          
0000153A                           761  DISPLAY_REG:
0000153A  1206                     762          MOVE.B      D6, D1
0000153C  103C 0003                763          MOVE.B      #$3, D0
00001540  4E4F                     764          TRAP        #15
00001542  4E75                     765          RTS
00001544                           766  
00001544                           767  J_ABS_TABLE:
00001544                           768          ; SIMHALT
00001544  BC3C 0000                769          CMP.B       #0,D6
00001548  6700 0014                770          BEQ         J_ABS_W
0000154C                           771              
0000154C  BC3C 0001                772          CMP.B       #1,D6
00001550  6700 0032                773          BEQ         J_ABS_L
00001554                           774              
00001554  BC3C 0004                775          CMP.B       #4,D6
00001558  6700 002E                776          BEQ         DATA_TABLE
0000155C                           777              
0000155C  4E75                     778          RTS
0000155E                           779          
0000155E                           780  ;   Word
0000155E                           781  J_ABS_W:
0000155E                           782          ; SIMHALT
0000155E  43F9 000017CF            783          LEA         DOLLAR_MSG, A1
00001564  103C 000E                784          MOVE.B      #14, D0
00001568  4E4F                     785          TRAP        #15
0000156A                           786         
0000156A                           787  
0000156A  325B                     788          MOVE.W      (A3)+, A1
0000156C                           789          
0000156C                           790  
0000156C                           791          
0000156C  4281                     792          CLR.L       D1
0000156E  4282                     793          CLR.L       D2
00001570  4284                     794          CLR.L       D4
00001572  123C 0010                795          MOVE.B      #16, D1
00001576  4EB8 1052                796          JSR         CONVERT_ASCII
0000157A                           797          
0000157A  2244                     798          MOVE.L      D4, A1
0000157C  103C 000E                799          MOVE.B      #14, D0
00001580  4E4F                     800          TRAP        #15
00001582                           801  
00001582  4E75                     802          RTS
00001584                           803  ;   Long
00001584                           804  J_ABS_L:
00001584                           805  
00001584                           806  
00001584  4E75                     807          RTS
00001586                           808  
00001586                           809  ;   Error
00001586                           810  J_ABS_ERROR:
00001586  4E75                     811          RTS
00001588                           812  
00001588                           813  ;   Hard Coded Data
00001588                           814  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00001588                           815  
00001588                           816  ;   Size num 0,4 = Byte 1,5 = Word 2,6 Long
00001588                           817  
00001588                           818  DATA_TABLE:
00001588  43F9 000017D1            819          LEA         DATA_MSG, A1
0000158E  103C 000E                820          MOVE.B      #14, D0
00001592  4E4F                     821          TRAP        #15
00001594                           822  
00001594                           823  
00001594  B63C 0000                824          CMP.B       #0,D3 
00001598  6700 002C                825          BEQ         DATA_B      
0000159C  B63C 0004                826          CMP.B       #4,D3
000015A0  6700 0024                827          BEQ         DATA_B
000015A4                           828  
000015A4  B63C 0001                829          CMP.B       #1,D3 
000015A8  6700 003C                830          BEQ         DATA_W      
000015AC  B63C 0005                831          CMP.B       #5,D3
000015B0  6700 0034                832          BEQ         DATA_W
000015B4                           833          
000015B4  B63C 0002                834          CMP.B       #2,D3 
000015B8  6700 004A                835          BEQ         DATA_L      
000015BC  B63C 0006                836          CMP.B       #6,D3
000015C0  6700 0042                837          BEQ         DATA_L
000015C4                           838          
000015C4  4E75                     839          RTS
000015C6                           840  
000015C6                           841  DATA_B:
000015C6  4281                     842          CLR.L       D1
000015C8  4282                     843          CLR.L       D2
000015CA  4284                     844          CLR.L       D4
000015CC  4287                     845          CLR.L       D7
000015CE                           846          
000015CE  341B                     847          MOVE.W      (A3)+, D2
000015D0                           848          * Only read first byte from the word 
000015D0                           849          
000015D0  4EB8 10BE                850          JSR         FLIP_START
000015D4  4847                     851          SWAP        D7
000015D6  E09F                     852          ROR.L       #8,D7
000015D8  4282                     853          CLR.L       D2
000015DA                           854          
000015DA                           855  
000015DA  123C 0002                856          MOVE.B      #2, D1
000015DE  4EB9 00001620            857          JSR         CONVERT_HEX
000015E4                           858  
000015E4                           859  
000015E4                           860  
000015E4  4E75                     861          RTS
000015E6                           862  
000015E6                           863  DATA_W:
000015E6  4281                     864          CLR.L       D1
000015E8  4282                     865          CLR.L       D2
000015EA  4284                     866          CLR.L       D4
000015EC  4287                     867          CLR.L       D7
000015EE                           868          
000015EE  341B                     869          MOVE.W      (A3)+, D2
000015F0                           870          
000015F0  4EB8 10BE                871          JSR         FLIP_START
000015F4                           872  
000015F4  4847                     873          SWAP        D7
000015F6                           874  
000015F6  4282                     875          CLR.L       D2
000015F8                           876          
000015F8  123C 0004                877          MOVE.B      #4, D1
000015FC                           878          
000015FC                           879          
000015FC  4EB9 00001620            880          JSR         CONVERT_HEX
00001602                           881  
00001602                           882          
00001602                           883  
00001602  4E75                     884          RTS
00001604                           885  
00001604                           886  DATA_L:
00001604  4281                     887          CLR.L       D1
00001606  4282                     888          CLR.L       D2
00001608  4284                     889          CLR.L       D4
0000160A  4287                     890          CLR.L       D7
0000160C                           891          
0000160C  241B                     892          MOVE.L      (A3)+, D2
0000160E                           893          
0000160E  4EB8 10BE                894          JSR         FLIP_START
00001612                           895  
00001612  4282                     896          CLR.L       D2
00001614                           897          
00001614                           898  
00001614  123C 0008                899          MOVE.B      #8, D1
00001618  4EB9 00001620            900          JSR         CONVERT_HEX
0000161E                           901  
0000161E                           902          
0000161E                           903  
0000161E  4E75                     904          RTS
00001620                           905  
00001620                           906  
00001620                           907  CONVERT_HEX:
00001620                           908          ; SIMHALT    
00001620  0C01 0000                909          CMPI.B      #$0, D1    
00001624  6700 0092                910          BEQ         HEX_DONE
00001628                           911          
00001628  5301                     912          SUBI.B      #$1, D1       
0000162A                           913  
0000162A  4282                     914          CLR.L       D2
0000162C                           915      
0000162C  1407                     916          MOVE.B      D7,D2
0000162E                           917              
0000162E  103C 001C                918          MOVE.B      #28,D0    
00001632  E1AA                     919          LSL.L       D0,D2     
00001634  E99A                     920          ROL.L       #4,D2
00001636                           921          
00001636  E887                     922          ASR.L       #4, D7
00001638                           923          
00001638                           924          
00001638  B43C 0000                925          CMP.B       #0,D2
0000163C  6700 007C                926          BEQ         PRINT_ASCII0
00001640  B43C 0001                927          CMP.B       #1,D2
00001644  6700 0084                928          BEQ         PRINT_ASCII1
00001648  B43C 0002                929          CMP.B       #2,D2
0000164C  6700 008C                930          BEQ         PRINT_ASCII2
00001650  B43C 0003                931          CMP.B       #3,D2
00001654  6700 0094                932          BEQ         PRINT_ASCII3
00001658  B43C 0004                933          CMP.B       #4,D2
0000165C  6700 009C                934          BEQ         PRINT_ASCII4
00001660  B43C 0005                935          CMP.B       #5,D2
00001664  6700 00A4                936          BEQ         PRINT_ASCII5
00001668  B43C 0006                937          CMP.B       #6,D2
0000166C  6700 00AC                938          BEQ         PRINT_ASCII6
00001670  B43C 0007                939          CMP.B       #7,D2
00001674  6700 00B4                940          BEQ         PRINT_ASCII7
00001678  B43C 0008                941          CMP.B       #8,D2
0000167C  6700 00BC                942          BEQ         PRINT_ASCII8
00001680  B43C 0009                943          CMP.B       #9,D2
00001684  6700 00C4                944          BEQ         PRINT_ASCII9
00001688  B43C 000A                945          CMP.B       #$A,D2
0000168C  6700 00CC                946          BEQ         PRINT_ASCIIA
00001690  B43C 000B                947          CMP.B       #$B,D2
00001694  6700 00D4                948          BEQ         PRINT_ASCIIB
00001698  B43C 000C                949          CMP.B       #$C,D2
0000169C  6700 00DC                950          BEQ         PRINT_ASCIIC
000016A0  B43C 000D                951          CMP.B       #$D,D2
000016A4  6700 00E4                952          BEQ         PRINT_ASCIID
000016A8  B43C 000E                953          CMP.B       #$E,D2
000016AC  6700 00EC                954          BEQ         PRINT_ASCIIE
000016B0  B43C 000F                955          CMP.B       #$F,D2
000016B4  6700 00F4                956          BEQ         PRINT_ASCIIF
000016B8                           957          
000016B8                           958          ; error handling here
000016B8                           959          
000016B8                           960          
000016B8                           961  
000016B8                           962  HEX_DONE:
000016B8  4E75                     963          RTS
000016BA                           964  
000016BA                           965  
000016BA                           966  
000016BA                           967  PRINT_ASCII0:
000016BA  43F9 000017FC            968          LEA         ZERO_MSG, A1
000016C0  103C 000E                969          MOVE.B      #14, D0    
000016C4  4E4F                     970          TRAP        #15
000016C6  6000 FF58                971          BRA         CONVERT_HEX
000016CA                           972  PRINT_ASCII1:
000016CA  43F9 000017FE            973          LEA         ONE_MSG, A1
000016D0  103C 000E                974          MOVE.B      #14, D0    
000016D4  4E4F                     975          TRAP        #15
000016D6  6000 FF48                976          BRA         CONVERT_HEX
000016DA                           977  PRINT_ASCII2:
000016DA  43F9 00001800            978          LEA         TWO_MSG, A1
000016E0  103C 000E                979          MOVE.B      #14, D0    
000016E4  4E4F                     980          TRAP        #15
000016E6  6000 FF38                981          BRA         CONVERT_HEX
000016EA                           982  PRINT_ASCII3:
000016EA  43F9 00001802            983          LEA         THREE_MSG, A1
000016F0  103C 000E                984          MOVE.B      #14, D0    
000016F4  4E4F                     985          TRAP        #15
000016F6  6000 FF28                986          BRA         CONVERT_HEX
000016FA                           987  PRINT_ASCII4:
000016FA  43F9 00001804            988          LEA         FOUR_MSG, A1
00001700  103C 000E                989          MOVE.B      #14, D0    
00001704  4E4F                     990          TRAP        #15
00001706  6000 FF18                991          BRA         CONVERT_HEX
0000170A                           992  PRINT_ASCII5:
0000170A  43F9 00001806            993          LEA         FIVE_MSG, A1
00001710  103C 000E                994          MOVE.B      #14, D0    
00001714  4E4F                     995          TRAP        #15
00001716  6000 FF08                996          BRA         CONVERT_HEX        
0000171A                           997  PRINT_ASCII6:
0000171A  43F9 00001808            998          LEA         SIX_MSG, A1
00001720  103C 000E                999          MOVE.B      #14, D0    
00001724  4E4F                    1000          TRAP        #15
00001726  6000 FEF8               1001          BRA         CONVERT_HEX
0000172A                          1002  PRINT_ASCII7:
0000172A  43F9 0000180A           1003          LEA         SEVEN_MSG, A1
00001730  103C 000E               1004          MOVE.B      #14, D0    
00001734  4E4F                    1005          TRAP        #15
00001736  6000 FEE8               1006          BRA         CONVERT_HEX
0000173A                          1007  PRINT_ASCII8:
0000173A  43F9 0000180C           1008          LEA         EIGHT_MSG, A1
00001740  103C 000E               1009          MOVE.B      #14, D0    
00001744  4E4F                    1010          TRAP        #15
00001746  6000 FED8               1011          BRA         CONVERT_HEX
0000174A                          1012  PRINT_ASCII9:
0000174A  43F9 0000180E           1013          LEA         NINE_MSG, A1
00001750  103C 000E               1014          MOVE.B      #14, D0    
00001754  4E4F                    1015          TRAP        #15
00001756  6000 FEC8               1016          BRA         CONVERT_HEX
0000175A                          1017  PRINT_ASCIIA:
0000175A  43F9 00001810           1018          LEA         A_MSG, A1
00001760  103C 000E               1019          MOVE.B      #14, D0    
00001764  4E4F                    1020          TRAP        #15
00001766  6000 FEB8               1021          BRA         CONVERT_HEX
0000176A                          1022  PRINT_ASCIIB:
0000176A  43F9 00001812           1023          LEA         B_MSG, A1
00001770  103C 000E               1024          MOVE.B      #14, D0    
00001774  4E4F                    1025          TRAP        #15
00001776  6000 FEA8               1026          BRA         CONVERT_HEX
0000177A                          1027  PRINT_ASCIIC:
0000177A  43F9 00001814           1028          LEA         C_MSG, A1
00001780  103C 000E               1029          MOVE.B      #14, D0    
00001784  4E4F                    1030          TRAP        #15
00001786  6000 FE98               1031          BRA         CONVERT_HEX
0000178A                          1032  PRINT_ASCIID:
0000178A  43F9 00001816           1033          LEA         D_MSG, A1
00001790  103C 000E               1034          MOVE.B      #14, D0    
00001794  4E4F                    1035          TRAP        #15
00001796  6000 FE88               1036          BRA         CONVERT_HEX
0000179A                          1037  PRINT_ASCIIE:
0000179A  43F9 00001818           1038          LEA         E_MSG, A1
000017A0  103C 000E               1039          MOVE.B      #14, D0    
000017A4  4E4F                    1040          TRAP        #15
000017A6  6000 FE78               1041          BRA         CONVERT_HEX
000017AA                          1042  PRINT_ASCIIF:
000017AA  43F9 0000181A           1043          LEA         F_MSG, A1
000017B0  103C 000E               1044          MOVE.B      #14, D0    
000017B4  4E4F                    1045          TRAP        #15
000017B6  6000 FE68               1046          BRA         CONVERT_HEX
000017BA                          1047  
000017BA                          1048  
000017BA                          1049  
000017BA                          1050  
000017BA                          1051  
000017BA                          1052  
000017BA                          1053  
000017BA= 44 00                   1054  MODE_0_MSG:     DC.B        'D',0
000017BC= 41 00                   1055  MODE_1_MSG:     DC.B        'A',0
000017BE= 28 41 00                1056  MODE_A_MSG:     DC.B        '(A',0
000017C1= 29 00                   1057  MODE_A_1_MSG:   DC.B        ')',0
000017C3= 29 2B 00                1058  MODE_A_2_MSG:   DC.B        ')+',0
000017C6= 2D 28 41 00             1059  MODE_MINUS_MSG: DC.B        '-(A',0
000017CA                          1060  
000017CA= 2C 20 00                1061  SEPERATOR:      DC.B        ', ',0
000017CD                          1062  
000017CD= 23 00                   1063  POUND_MSG:      DC.B        '#',0
000017CF= 24 00                   1064  DOLLAR_MSG:     DC.B        '$',0
000017D1= 20 23 24 00             1065  DATA_MSG:       DC.B        ' #$',0
000017D5                          1066  
000017D5= 54 4D 50 00             1067  TEMP_MSG:       DC.B        'TMP',0
000017D9                          1068  
000017D9                          1069  
000017D9                          1070  
000017D9                          1071  TMP_STR         DS.B        32
000017F9                          1072  
000017F9                          1073  
000017F9                          1074  
000017F9                          1075  
000017F9                          1076  -------------------- end include --------------------
000017F9                          1077                  
000017F9  =0000000D               1078  CR              EQU         $0D
000017F9  =0000000A               1079  LF              EQU         $0A
000017F9                          1080  
000017F9= 20 20 00                1081  SPACE_MSG:      DC.B        '  ',0
000017FC                          1082  
000017FC= 30 00                   1083  ZERO_MSG:       DC.B        '0',0
000017FE= 31 00                   1084  ONE_MSG:        DC.B        '1',0
00001800= 32 00                   1085  TWO_MSG:        DC.B        '2',0
00001802= 33 00                   1086  THREE_MSG:      DC.B        '3',0
00001804= 34 00                   1087  FOUR_MSG:       DC.B        '4',0
00001806= 35 00                   1088  FIVE_MSG:       DC.B        '5',0
00001808= 36 00                   1089  SIX_MSG:        DC.B        '6',0
0000180A= 37 00                   1090  SEVEN_MSG:      DC.B        '7',0
0000180C= 38 00                   1091  EIGHT_MSG:      DC.B        '8',0
0000180E= 39 00                   1092  NINE_MSG:       DC.B        '9',0
00001810= 41 00                   1093  A_MSG:          DC.B        'A',0
00001812= 42 00                   1094  B_MSG:          DC.B        'B',0
00001814= 43 00                   1095  C_MSG:          DC.B        'C',0
00001816= 44 00                   1096  D_MSG:          DC.B        'D',0
00001818= 45 00                   1097  E_MSG:          DC.B        'E',0
0000181A= 46 00                   1098  F_MSG:          DC.B        'F',0
0000181C                          1099                  
0000181C= 45 72 72 6F 72 00       1100  ERROR_MSG:      DC.B        'Error',0
00001822= 53 75 63 63 65 73 ...   1101  SUCCESS_MSG:    DC.B        'Success',0
0000182A                          1102  
0000182A= 0D 0A 00                1103  NEW_LINE:       DC.B        '',CR,LF,0
0000182D                          1104  
0000182D                          1105    
0000182D                          1106                  
0000182D                          1107                  
0000182D                          1108  STA_ADDR        DS.B        40
00001855                          1109  END_ADDR        DS.B        40
0000187D                          1110  
0000187D                          1111  
0000187D                          1112  
0000187D                          1113  
0000187D                          1114                  
0000187D                          1115                  
0000187D                          1116          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDQ_MSG            13FE
ASCII_DONE          106A
A_MSG               1810
BYTE_MSG            140E
B_MSG               1812
CONVERT_ASCII       1052
CONVERT_HEX         1620
CR                  D
C_MSG               1814
DATA_B              15C6
DATA_L              1604
DATA_MSG            17D1
DATA_TABLE          1588
DATA_W              15E6
DISPLAY_REG         153A
DOLLAR_MSG          17CF
DONE                12CE
D_MSG               1816
EA_MOVE             144A
EIGHT_MSG           180C
END_ADDR            1855
END_MSG             1431
ERROR_MSG           181C
E_MSG               1818
FILE_LOOP           1296
FIVE_MSG            1806
FLIP_DONE           10EC
FLIP_LOOP           10CE
FLIP_START          10BE
FOUR_MSG            1804
F_MSG               181A
HEX_DONE            16B8
ISOLATE_DESTM       135A
JUMP_0              12E6
JUMP_1              12E8
JUMP_2              12FE
JUMP_3              1324
JUMP_4              1346
JUMP_5              1348
JUMP_6              1352
JUMP_E              1354
JUMP_OP_CODE        12D4
J_ABS               14BE
J_ABS_ERROR         1586
J_ABS_L             1584
J_ABS_TABLE         1544
J_ABS_W             155E
J_MOVEA_L           1386
J_MOVEA_W           13BA
J_MOVE_L            13A0
J_MOVE_W            13D4
J_TBL_A             14DA
J_TBL_A_DECR        151A
J_TBL_A_INCR        14FA
J_TBL_D             14C6
LET_ASCII           1080
LF                  A
LONG_MSG            1414
MODE_0_MSG          17BA
MODE_1_MSG          17BC
MODE_A_1_MSG        17C1
MODE_A_2_MSG        17C3
MODE_A_MSG          17BE
MODE_MINUS_MSG      17C6
MODE_TABLE          1494
MOVEA_MSG           1408
MOVE_MSG            1403
NEW_LINE            182A
NINE_MSG            180E
NUM_ASCII           106C
ONE_MSG             17FE
OP_CODE_ADDQ        13EE
OP_CODE_BASE_MOVE   1368
POUND_MSG           17CD
PRINT_ADDRESS       1094
PRINT_ADDRESS_EXIT  1188
PRINT_ADDRESS_LOOP  10EE
PRINT_ADR0          1196
PRINT_ADR1          11A6
PRINT_ADR2          11B6
PRINT_ADR3          11C6
PRINT_ADR4          11D6
PRINT_ADR5          11E6
PRINT_ADR6          11F6
PRINT_ADR7          1206
PRINT_ADR8          1216
PRINT_ADR9          1226
PRINT_ADRA          1236
PRINT_ADRB          1246
PRINT_ADRC          1256
PRINT_ADRD          1266
PRINT_ADRE          1276
PRINT_ADRF          1286
PRINT_ASCII0        16BA
PRINT_ASCII1        16CA
PRINT_ASCII2        16DA
PRINT_ASCII3        16EA
PRINT_ASCII4        16FA
PRINT_ASCII5        170A
PRINT_ASCII6        171A
PRINT_ASCII7        172A
PRINT_ASCII8        173A
PRINT_ASCII9        174A
PRINT_ASCIIA        175A
PRINT_ASCIIB        176A
PRINT_ASCIIC        177A
PRINT_ASCIID        178A
PRINT_ASCIIE        179A
PRINT_ASCIIF        17AA
SEPERATOR           17CA
SEVEN_MSG           180A
SIX_MSG             1808
SPACE_MSG           17F9
START               1000
START_MSG           1417
STA_ADDR            182D
SUCCESS_MSG         1822
TEMP_MSG            17D5
THREE_MSG           1802
TMP_STR             17D9
TWO_MSG             1800
WORD_MSG            1411
ZERO_MSG            17FC
