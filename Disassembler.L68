00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/16/2021 1:34:11 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  
00001000                             9      
00001000                            10  ; A3 will store starting address
00001000                            11  ; A4 will store ending address
00001000                            12  ; A5 will be used for paging
00001000                            13  ; D0 is used to store values that will get compared
00001000                            14      
00001000                            15  START:
00001000                            16  
00001000  4EB9 000010C0             17          JSR         CLEAR_ALL_REG
00001006                            18          
00001006  43F9 000026F8             19          LEA         GREETING_MSG, A1
0000100C  103C 000E                 20          MOVE.B      #14, D0    
00001010  4E4F                      21          TRAP        #15
00001012                            22          
00001012  6000 0002                 23          BRA         START_ADDR_CHECK
00001016                            24          
00001016                            25  START_ADDR_CHECK:
00001016                            26           ;   Ask user to enter valid starting address, convert from ascii to hex and then store it in A3                 
00001016  43F9 000026C5             27          LEA         START_MSG, A1
0000101C  103C 000E                 28          MOVE.B      #14, D0    
00001020  4E4F                      29          TRAP        #15
00001022                            30          
00001022  43F9 0000280A             31          LEA         STA_ADDR, A1
00001028  103C 0002                 32          MOVE.B      #2, D0
0000102C  4E4F                      33          TRAP        #15             ; D1 has the length of the address
0000102E                            34          
0000102E                            35          
0000102E  4282                      36          CLR.L       D2
00001030  4284                      37          CLR.L       D4
00001032  4287                      38          CLR.L       D7
00001034  4EB9 000010FC             39          JSR         CONVERT_ASCII
0000103A                            40          
0000103A  1807                      41          MOVE.B      D7, D4
0000103C  4EB9 000016EA             42          JSR         Bit0        
00001042  B43C 0000                 43          CMP.B       #0, D2
00001046                            44          
00001046  6600 0014                 45          BNE         START_ERROR
0000104A  6000 0002                 46          BRA         SAVE_START
0000104E                            47  
0000104E                            48  SAVE_START:
0000104E  2647                      49          MOVEA.L     D7, A3
00001050  2A4B                      50          MOVEA.L     A3, A5
00001052                            51  
00001052  DBFC 00000020             52          ADD.L       #32, A5
00001058  6000 0020                 53          BRA         END_ADDR_CHECK
0000105C                            54  
0000105C                            55  START_ERROR:
0000105C  43F9 00002799             56          LEA         BAD_ADDR_MSG, A1
00001062  103C 000E                 57          MOVE.B      #14, D0    
00001066  4E4F                      58          TRAP        #15
00001068  60AC                      59          BRA         START_ADDR_CHECK 
0000106A                            60  
0000106A                            61  END_ERROR:
0000106A  43F9 00002799             62          LEA         BAD_ADDR_MSG, A1
00001070  103C 000E                 63          MOVE.B      #14, D0    
00001074  4E4F                      64          TRAP        #15
00001076  6000 0002                 65          BRA         END_ADDR_CHECK   
0000107A                            66  
0000107A                            67  END_ADDR_CHECK:        
0000107A                            68          ;   Ask user to enter valid ending address, convert from ascii to hex and then store it in A4 
0000107A                            69          
0000107A  43F9 000026DF             70          LEA         END_MSG, A1
00001080  103C 000E                 71          MOVE.B      #14, D0    
00001084  4E4F                      72          TRAP        #15
00001086                            73          
00001086  43F9 00002832             74          LEA         END_ADDR, A1
0000108C  103C 0002                 75          MOVE.B      #2, D0
00001090  4E4F                      76          TRAP        #15
00001092                            77          
00001092  4282                      78          CLR.L       D2
00001094  4284                      79          CLR.L       D4
00001096  4287                      80          CLR.L       D7
00001098  4EB9 000010FC             81          JSR         CONVERT_ASCII
0000109E                            82  
0000109E  4EB9 000010AA             83          JSR         CHECK_ODD
000010A4  66C4                      84          BNE         END_ERROR
000010A6                            85          
000010A6  6000 0012                 86          BRA         SAVE_END
000010AA                            87          
000010AA                            88  CHECK_ODD:
000010AA  1807                      89          MOVE.B      D7, D4
000010AC  4EB9 000016EA             90          JSR         Bit0        
000010B2  B43C 0000                 91          CMP.B       #0, D2
000010B6  4E75                      92          RTS
000010B8                            93  
000010B8                            94  CHECK_DATA:
000010B8                            95          
000010B8  4E75                      96          RTS
000010BA                            97  
000010BA                            98  SAVE_END:
000010BA  2847                      99          MOVEA.L     D7, A4
000010BC  6000 0282                100          BRA         FILE_LOOP
000010C0                           101      
000010C0                           102          
000010C0                           103  CLEAR_ALL_REG:
000010C0  4280                     104          CLR.L       D0
000010C2  4281                     105          CLR.L       D1
000010C4  4282                     106          CLR.L       D2
000010C6  4283                     107          CLR.L       D3
000010C8  4284                     108          CLR.L       D4
000010CA  4285                     109          CLR.L       D5
000010CC  4286                     110          CLR.L       D6
000010CE  4287                     111          CLR.L       D7
000010D0                           112  
000010D0  207C 00000000            113          MOVEA.L     #$00000000, A0
000010D6  227C 00000000            114          MOVEA.L     #$00000000, A1
000010DC  247C 00000000            115          MOVEA.L     #$00000000, A2
000010E2  267C 00000000            116          MOVEA.L     #$00000000, A3
000010E8  287C 00000000            117          MOVEA.L     #$00000000, A4
000010EE  2A7C 00000000            118          MOVEA.L     #$00000000, A5
000010F4  2C7C 00000000            119          MOVEA.L     #$00000000, A6
000010FA                           120          
000010FA                           121          
000010FA                           122  
000010FA  4E75                     123          RTS
000010FC                           124  
000010FC                           125  CONVERT_ASCII:                  ; Convert Ascii values to Hex. 00011111 00011110 00100001 00101011 = 31 30 33 43. 31 30 33 43 => 0001 0000 0011 1100 = 1 0 3 C
000010FC  0C01 0000                126          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001100  6700 0012                127          BEQ         ASCII_DONE
00001104                           128      
00001104  1419                     129          MOVE.B      (A1)+, D2   ; Gives D2 the next Byte from A1
00001106                           130          
00001106                           131  
00001106                           132      
00001106  103C 0039                133          MOVE.B      #$39, D0    ; Moves 39 into D3, Ascii Characters after 39 are not letters
0000110A  B400                     134          CMP.B       D0, D2
0000110C                           135          
0000110C                           136  
0000110C  6F00 0008                137          BLE         NUM_ASCII   ; data in D2 is less than 39, Most likely a number
00001110  6000 0018                138          BRA         LET_ASCII   ; If not a number, then it is an ASCII Letter
00001114                           139  
00001114                           140  ASCII_DONE:
00001114  4E75                     141          RTS
00001116                           142  
00001116                           143  
00001116                           144  NUM_ASCII:
00001116  5301                     145          SUBI.B      #$1, D1
00001118                           146          
00001118  103C 0030                147          MOVE.B      #$30, D0
0000111C  9400                     148          SUB.B       D0, D2      ; ASCII numbers start at 30. 30 = 0, 31 = 1, etc
0000111E  DE02                     149          ADD.B       D2, D7      ; new ASCII number stored at D7
00001120                           150          
00001120                           151  
00001120  0C01 0000                152          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001124  67EE                     153          BEQ         ASCII_DONE
00001126                           154          
00001126  E987                     155          ASL.L       #4, D7
00001128                           156        
00001128  60D2                     157          BRA         CONVERT_ASCII
0000112A                           158          
0000112A                           159          
0000112A                           160  LET_ASCII:
0000112A  5301                     161          SUBI.B      #$1, D1
0000112C                           162                 
0000112C                           163  
0000112C  103C 0037                164          MOVE.B      #$37, D0
00001130  9400                     165          SUB.B       D0, D2      ; Hex letters we care about are from A-F, we can use math do achieve this
00001132  DE02                     166          ADD.B       D2, D7      ; 41 is used to represent A in Hex. Hexadecimal subtraction: 41 - 37 = A
00001134                           167                                  ; 46 is used to represent F in Hex. 46 - 37 = F
00001134                           168          
00001134  0C01 0000                169          CMPI.B      #$0, D1     ; check if we have traversed the whole length
00001138  67DA                     170          BEQ         ASCII_DONE
0000113A                           171          
0000113A  E987                     172          ASL.L       #4, D7
0000113C                           173          
0000113C                           174          
0000113C  60BE                     175          BRA         CONVERT_ASCII
0000113E                           176  
0000113E                           177  PRINT_ADDRESS:
0000113E                           178          ; SIMHALT 0000 0000
0000113E  4281                     179          CLR.L       D1
00001140  4282                     180          CLR.L       D2
00001142  240B                     181          MOVE.L      A3, D2
00001144                           182          
00001144                           183          
00001144                           184  
00001144                           185          
00001144  4EB9 00001168            186          JSR         FLIP_START
0000114A  2607                     187          MOVE.L      D7, D3
0000114C                           188  
0000114C  4281                     189          CLR.L       D1
0000114E  4282                     190          CLR.L       D2
00001150  4287                     191          CLR.L       D7
00001152                           192          
00001152  123C 0008                193          MOVE.B      #$8, D1
00001156  6000 0040                194          BRA         PRINT_ADDRESS_LOOP
0000115A                           195  
0000115A  43F9 000027B3            196          LEA         SPACE_MSG, A1
00001160  103C 000E                197          MOVE.B      #14, D0    
00001164  4E4F                     198          TRAP        #15
00001166                           199          
00001166  4E75                     200          RTS
00001168                           201          
00001168                           202  FLIP_START:        
00001168  4281                     203          CLR.L       D1
0000116A  4287                     204          CLR.L       D7
0000116C                           205          
0000116C  123C 0008                206          MOVE.B      #$8, D1
00001170                           207          
00001170  4EB9 00001178            208          JSR         FLIP_LOOP
00001176                           209          
00001176                           210          
00001176  4E75                     211          RTS
00001178                           212          
00001178                           213  FLIP_LOOP:
00001178                           214  
00001178                           215          ; SIMHALT
00001178                           216          
00001178  0C01 0000                217          CMPI.B      #$0, D1
0000117C  6700 0018                218          BEQ         FLIP_DONE
00001180  5301                     219          SUBI.B      #$1, D1
00001182  E987                     220          ASL.L       #4, D7
00001184                           221          
00001184  4285                     222          CLR.L       D5
00001186                           223          
00001186  1A02                     224          MOVE.B      D2, D5
00001188                           225          
00001188  103C 001C                226          MOVE.B      #28,D0    
0000118C  E1AD                     227          LSL.L       D0, D5     
0000118E  E99D                     228          ROL.L       #4, D5
00001190                           229          
00001190  DE05                     230          ADD.B       D5, D7
00001192                           231          
00001192                           232          
00001192  E882                     233          ASR.L       #4, D2
00001194                           234          
00001194  60E2                     235          BRA         FLIP_LOOP
00001196                           236  
00001196                           237  FLIP_DONE:
00001196  4E75                     238          RTS
00001198                           239  
00001198                           240  
00001198                           241          
00001198                           242  
00001198                           243  PRINT_ADDRESS_LOOP:
00001198                           244          ; SIMHALT
00001198                           245          
00001198  0C01 0000                246          CMPI.B      #$0, D1
0000119C  6700 0094                247          BEQ         PRINT_ADDRESS_EXIT
000011A0                           248          
000011A0                           249          
000011A0  5301                     250          SUBI.B      #$1, D1
000011A2                           251          
000011A2  1403                     252          MOVE.B      D3, D2
000011A4  103C 001C                253          MOVE.B      #28,D0    
000011A8  E1AA                     254          LSL.L       D0,D2     
000011AA  E99A                     255          ROL.L       #4,D2 
000011AC                           256          
000011AC                           257          
000011AC  E883                     258          ASR.L       #4, D3
000011AE                           259          
000011AE                           260          
000011AE  B43C 0000                261          CMP.B       #0,D2
000011B2  6700 008C                262          BEQ         PRINT_ADR0
000011B6  B43C 0001                263          CMP.B       #1,D2
000011BA  6700 0094                264          BEQ         PRINT_ADR1
000011BE  B43C 0002                265          CMP.B       #2,D2
000011C2  6700 009C                266          BEQ         PRINT_ADR2
000011C6  B43C 0003                267          CMP.B       #3,D2
000011CA  6700 00A4                268          BEQ         PRINT_ADR3
000011CE  B43C 0004                269          CMP.B       #4,D2
000011D2  6700 00AC                270          BEQ         PRINT_ADR4
000011D6  B43C 0005                271          CMP.B       #5,D2
000011DA  6700 00B4                272          BEQ         PRINT_ADR5
000011DE  B43C 0006                273          CMP.B       #6,D2
000011E2  6700 00BC                274          BEQ         PRINT_ADR6
000011E6  B43C 0007                275          CMP.B       #7,D2
000011EA  6700 00C4                276          BEQ         PRINT_ADR7
000011EE  B43C 0008                277          CMP.B       #8,D2
000011F2  6700 00CC                278          BEQ         PRINT_ADR8
000011F6  B43C 0009                279          CMP.B       #9,D2
000011FA  6700 00D4                280          BEQ         PRINT_ADR9
000011FE  B43C 000A                281          CMP.B       #$A,D2
00001202  6700 00DC                282          BEQ         PRINT_ADRA
00001206  B43C 000B                283          CMP.B       #$B,D2
0000120A  6700 00E4                284          BEQ         PRINT_ADRB
0000120E  B43C 000C                285          CMP.B       #$C,D2
00001212  6700 00EC                286          BEQ         PRINT_ADRC
00001216  B43C 000D                287          CMP.B       #$D,D2
0000121A  6700 00F4                288          BEQ         PRINT_ADRD
0000121E  B43C 000E                289          CMP.B       #$E,D2
00001222  6700 00FC                290          BEQ         PRINT_ADRE
00001226  B43C 000F                291          CMP.B       #$F,D2
0000122A  6700 0104                292          BEQ         PRINT_ADRF
0000122E                           293  
0000122E                           294  
0000122E                           295  
0000122E  6000 FF68                296          BRA         PRINT_ADDRESS_LOOP
00001232                           297          
00001232                           298  
00001232                           299          
00001232                           300  
00001232                           301  PRINT_ADDRESS_EXIT:
00001232  43F9 000027B3            302          LEA         SPACE_MSG, A1
00001238  103C 000E                303          MOVE.B      #14, D0    
0000123C  4E4F                     304          TRAP        #15
0000123E                           305          
0000123E  4E75                     306          RTS
00001240                           307          
00001240                           308  PRINT_ADR0:
00001240  43F9 000027B6            309          LEA         ZERO_MSG, A1
00001246  103C 000E                310          MOVE.B      #14, D0    
0000124A  4E4F                     311          TRAP        #15
0000124C  6000 FF4A                312          BRA         PRINT_ADDRESS_LOOP
00001250                           313  PRINT_ADR1:
00001250  43F9 000027B8            314          LEA         ONE_MSG, A1
00001256  103C 000E                315          MOVE.B      #14, D0    
0000125A  4E4F                     316          TRAP        #15
0000125C  6000 FF3A                317          BRA         PRINT_ADDRESS_LOOP
00001260                           318  PRINT_ADR2:
00001260  43F9 000027BA            319          LEA         TWO_MSG, A1
00001266  103C 000E                320          MOVE.B      #14, D0    
0000126A  4E4F                     321          TRAP        #15
0000126C  6000 FF2A                322          BRA         PRINT_ADDRESS_LOOP
00001270                           323  PRINT_ADR3:
00001270  43F9 000027BC            324          LEA         THREE_MSG, A1
00001276  103C 000E                325          MOVE.B      #14, D0    
0000127A  4E4F                     326          TRAP        #15
0000127C  6000 FF1A                327          BRA         PRINT_ADDRESS_LOOP
00001280                           328  PRINT_ADR4:
00001280  43F9 000027BE            329          LEA         FOUR_MSG, A1
00001286  103C 000E                330          MOVE.B      #14, D0    
0000128A  4E4F                     331          TRAP        #15
0000128C  6000 FF0A                332          BRA         PRINT_ADDRESS_LOOP
00001290                           333  PRINT_ADR5:
00001290  43F9 000027C0            334          LEA         FIVE_MSG, A1
00001296  103C 000E                335          MOVE.B      #14, D0    
0000129A  4E4F                     336          TRAP        #15
0000129C  6000 FEFA                337          BRA         PRINT_ADDRESS_LOOP
000012A0                           338  PRINT_ADR6:
000012A0  43F9 000027C2            339          LEA         SIX_MSG, A1
000012A6  103C 000E                340          MOVE.B      #14, D0    
000012AA  4E4F                     341          TRAP        #15
000012AC  6000 FEEA                342          BRA         PRINT_ADDRESS_LOOP
000012B0                           343  PRINT_ADR7:
000012B0  43F9 000027C4            344          LEA         SEVEN_MSG, A1
000012B6  103C 000E                345          MOVE.B      #14, D0    
000012BA  4E4F                     346          TRAP        #15
000012BC  6000 FEDA                347          BRA         PRINT_ADDRESS_LOOP
000012C0                           348  PRINT_ADR8:
000012C0  43F9 000027C6            349          LEA         EIGHT_MSG, A1
000012C6  103C 000E                350          MOVE.B      #14, D0    
000012CA  4E4F                     351          TRAP        #15
000012CC  6000 FECA                352          BRA         PRINT_ADDRESS_LOOP
000012D0                           353  PRINT_ADR9:
000012D0  43F9 000027C8            354          LEA         NINE_MSG, A1
000012D6  103C 000E                355          MOVE.B      #14, D0    
000012DA  4E4F                     356          TRAP        #15
000012DC  6000 FEBA                357          BRA         PRINT_ADDRESS_LOOP
000012E0                           358  PRINT_ADRA:
000012E0  43F9 000027CA            359          LEA         A_MSG, A1
000012E6  103C 000E                360          MOVE.B      #14, D0    
000012EA  4E4F                     361          TRAP        #15
000012EC  6000 FEAA                362          BRA         PRINT_ADDRESS_LOOP
000012F0                           363  PRINT_ADRB:
000012F0  43F9 000027CC            364          LEA         B_MSG, A1
000012F6  103C 000E                365          MOVE.B      #14, D0    
000012FA  4E4F                     366          TRAP        #15
000012FC  6000 FE9A                367          BRA         PRINT_ADDRESS_LOOP
00001300                           368  PRINT_ADRC:
00001300  43F9 000027CE            369          LEA         C_MSG, A1
00001306  103C 000E                370          MOVE.B      #14, D0    
0000130A  4E4F                     371          TRAP        #15
0000130C  6000 FE8A                372          BRA         PRINT_ADDRESS_LOOP
00001310                           373  PRINT_ADRD:
00001310  43F9 000027D0            374          LEA         D_MSG, A1
00001316  103C 000E                375          MOVE.B      #14, D0    
0000131A  4E4F                     376          TRAP        #15
0000131C  6000 FE7A                377          BRA         PRINT_ADDRESS_LOOP
00001320                           378  PRINT_ADRE:
00001320  43F9 000027D2            379          LEA         E_MSG, A1
00001326  103C 000E                380          MOVE.B      #14, D0    
0000132A  4E4F                     381          TRAP        #15
0000132C  6000 FE6A                382          BRA         PRINT_ADDRESS_LOOP
00001330                           383  PRINT_ADRF:
00001330  43F9 000027D4            384          LEA         F_MSG, A1
00001336  103C 000E                385          MOVE.B      #14, D0    
0000133A  4E4F                     386          TRAP        #15
0000133C  6000 FE5A                387          BRA         PRINT_ADDRESS_LOOP
00001340                           388  
00001340                           389  
00001340                           390  FILE_LOOP:
00001340  4280                     391          CLR.L       D0
00001342  4281                     392          CLR.L       D1
00001344  4282                     393          CLR.L       D2
00001346  4283                     394          CLR.L       D3
00001348  4284                     395          CLR.L       D4
0000134A  4285                     396          CLR.L       D5
0000134C  4286                     397          CLR.L       D6
0000134E  4287                     398          CLR.L       D7
00001350                           399          
00001350                           400  
00001350                           401  
00001350                           402  
00001350                           403          ;       Add branch here that will take the current address in A3
00001350                           404          ;       Turn it into characters and print it to the screen with space
00001350  4EB8 113E                405          JSR         PRINT_ADDRESS
00001354                           406          
00001354                           407          
00001354  381B                     408          MOVE.W      (A3)+, D4
00001356                           409          ; SIMHALT
00001356  4EB9 000013CE            410          JSR         JUMP_OP_CODE
0000135C                           411          
0000135C  43F9 000027E4            412          LEA         NEW_LINE, A1
00001362  103C 000E                413          MOVE.B      #14, D0
00001366  4E4F                     414          TRAP        #15
00001368                           415  
00001368                           416  
00001368  B9CB                     417          CMP.L      A3, A4
0000136A                           418          ;       If our pointer is at the end or beyond, BRA to DONE
0000136A  6700 0032                419          BEQ         DONE_CHECK
0000136E  6F00 002E                420          BLE         DONE_CHECK
00001372                           421          
00001372                           422  
00001372  BBCB                     423          CMP.L       A3, A5
00001374  6700 0008                424          BEQ         PRINT_DELAY
00001378  6F00 0004                425          BLE         PRINT_DELAY
0000137C                           426  
0000137C                           427  
0000137C                           428         
0000137C  60C2                     429          BRA         FILE_LOOP
0000137E                           430  
0000137E                           431  
0000137E                           432  
0000137E                           433  PRINT_DELAY:
0000137E                           434          ; SIMHALT
0000137E  43F9 000027E7            435          LEA         NEXT_PAGE_MSG, A1
00001384  103C 000E                436          MOVE.B      #14, D0    
00001388  4E4F                     437          TRAP        #15
0000138A                           438          
0000138A                           439  
0000138A  103C 0005                440          MOVE.B      #5, D0
0000138E  4E4F                     441          TRAP        #15
00001390                           442  
00001390  0C01 000D                443          CMPI.B      #13, D1
00001394  66E8                     444          BNE         PRINT_DELAY
00001396                           445  
00001396  DBFC 00000020            446          ADD.L       #32, A5
0000139C  60A2                     447          BRA         FILE_LOOP
0000139E                           448  
0000139E                           449  
0000139E                           450  DONE_CHECK:
0000139E  43F9 00002723            451          LEA         REPEAT_MSG, A1
000013A4  103C 000E                452          MOVE.B      #14, D0    
000013A8  4E4F                     453          TRAP        #15
000013AA                           454          
000013AA                           455  
000013AA  103C 0005                456          MOVE.B      #5, D0
000013AE  4E4F                     457          TRAP        #15
000013B0                           458  
000013B0  0C01 000D                459          CMPI.B      #13, D1
000013B4  6600 0006                460          BNE         DONE
000013B8                           461          
000013B8  6000 FC46                462          BRA         START
000013BC                           463  
000013BC                           464  DONE:   
000013BC  43F9 00002765            465          LEA         GOODBYE_MSG, A1
000013C2  103C 000E                466          MOVE.B      #14, D0    
000013C6  4E4F                     467          TRAP        #15
000013C8  103C 0009                468          MOVE.B      #9, D0
000013CC  4E4F                     469          TRAP        #15
000013CE                           470          
000013CE                           471          
000013CE                           472          
000013CE                           473  * Put variables and constants here
000013CE                           474                  INCLUDE     'Disassembler_OP_Codes.x68'
000013CE                           475  
000013CE                           476  
000013CE                           477  
000013CE                           478  ; D4 Contains Original hex code
000013CE                           479  ; D3 Contains modified hex code
000013CE                           480  
000013CE                           481  ; D1 is used to bit shift
000013CE                           482  
000013CE                           483  
000013CE                           484  ; D4 = XXXX YYYY YYYY YYYY
000013CE                           485  JUMP_OP_CODE:
000013CE                           486          ; SIMHALT
000013CE  4283                     487          CLR.L       D3
000013D0  2604                     488          MOVE.L      D4, D3
000013D2  4281                     489          CLR.L       D1
000013D4  4282                     490          CLR.L       D2
000013D6  123C 000C                491          MOVE.B      #12, D1
000013DA  E26B                     492          LSR.W       D1, D3  ; D3 = 0000 0000 0000 XXXX
000013DC                           493  
000013DC                           494  
000013DC  B63C 0000                495          CMP.B       #$0, D3
000013E0  6700 006E                496          BEQ         JUMP_0 
000013E4  B63C 0001                497          CMP.B       #$1, D3
000013E8  6700 00A4                498          BEQ         JUMP_1 
000013EC  B63C 0002                499          CMP.B       #$2, D3
000013F0  6700 00AA                500          BEQ         JUMP_2
000013F4  B63C 0003                501          CMP.B       #$3, D3
000013F8  6700 00BA                502          BEQ         JUMP_3
000013FC  B63C 0004                503          CMP.B       #$4, D3
00001400  6700 00CA                504          BEQ         JUMP_4
00001404  B63C 0005                505          CMP.B       #$5, D3
00001408  6700 012E                506          BEQ         JUMP_5
0000140C  B63C 0006                507          CMP.B       #$6, D3
00001410  6700 0138                508          BEQ         JUMP_6
00001414  B63C 0007                509          CMP.B       #$7, D3
00001418  6700 0156                510          BEQ         JUMP_7
0000141C  B63C 0008                511          CMP.B       #$8, D3
00001420  6700 0156                512          BEQ         JUMP_8
00001424  B63C 0009                513          CMP.B       #$9, D3
00001428  6700 016C                514          BEQ         JUMP_9    
0000142C  B63C 000B                515          CMP.B       #11, D3
00001430  6700 0172                516          BEQ         JUMP_B ; 
00001434                           517          
00001434  B63C 000C                518          CMP.B       #12, D3
00001438  6700 0190                519          BEQ         JUMP_C ;
0000143C                           520          
0000143C  B63C 000D                521          CMP.B       #13, D3
00001440  6700 01AE                522          BEQ         JUMP_D ;
00001444                           523          
00001444  B63C 000E                524          CMP.B       #14, D3
00001448  6700 01C2                525          BEQ         JUMP_E ;
0000144C                           526  
0000144C  6000 01D4                527          BRA         JUMP_ERROR
00001450                           528  
00001450                           529  
00001450                           530  
00001450                           531  
00001450                           532         
00001450                           533          
00001450                           534  JUMP_0:
00001450                           535          *ORI
00001450  4282                     536          CLR.L       D2
00001452  4EB9 000016D2            537          JSR         Bits11to8
00001458  B43C 0000                538          CMP.B       #$0, D2  
0000145C  6700 036A                539          BEQ         OP_CODE_ORI
00001460  B43C 0002                540          CMP.B       #$2, D2  
00001464  6700 037C                541          BEQ         OP_CODE_ANDI
00001468  B43C 0004                542          CMP.B       #$4, D2  
0000146C  6700 038E                543          BEQ         OP_CODE_SUBI
00001470  B43C 0006                544          CMP.B       #$6, D2  
00001474  6700 03A0                545          BEQ         OP_CODE_ADDI
00001478  B43C 000A                546          CMP.B       #$A, D2  
0000147C  6700 03B2                547          BEQ         OP_CODE_EORI
00001480  B43C 000C                548          CMP.B       #$C, D2  
00001484  6700 03C4                549          BEQ         OP_CODE_CMPI
00001488                           550          
00001488  6000 01A6                551          BRA         INVALID_INSTR
0000148C  4E75                     552          RTS
0000148E                           553          
0000148E                           554  JUMP_1:
0000148E                           555  
0000148E  4EB9 0000171A            556          JSR         OP_CODE_BASE_MOVE
00001494  4EB9 00001EAE            557          JSR         EA_MOVE 
0000149A  4E75                     558          RTS
0000149C                           559  
0000149C                           560  
0000149C                           561  JUMP_2:
0000149C                           562  
0000149C  4EB9 000016AE            563          JSR         Bits8to6
000014A2  B43C 0001                564          CMP.B       #$1, D2 
000014A6  6700 0290                565          BEQ         J_MOVEA_L 
000014AA  6600 02B0                566          BNE         J_MOVE_L
000014AE                           567  
000014AE                           568  
000014AE  6000 0180                569          BRA         INVALID_INSTR
000014B2  4E75                     570          RTS
000014B4                           571          
000014B4                           572  JUMP_3:
000014B4                           573  
000014B4  4EB9 000016AE            574          JSR         Bits8to6
000014BA  0C02 0001                575          CMPI.B       #$1, D2 
000014BE  6700 02C0                576          BEQ         J_MOVEA_W
000014C2  6600 02E0                577          BNE         J_MOVE_W
000014C6                           578      
000014C6  6000 0168                579          BRA INVALID_INSTR
000014CA                           580          
000014CA  4E75                     581          RTS
000014CC                           582  
000014CC                           583  JUMP_4:
000014CC                           584  
000014CC  4282                     585          CLR.L       D2
000014CE  3404                     586          MOVE.W      D4, D2
000014D0  B47C 4E71                587          CMP.W       #$4E71, D2 ;NOP 
000014D4  6700 03DC                588          BEQ         OP_CODE_NOP
000014D8  B47C 4E72                589          CMP.W       #$4E72, D2 ;STOP 
000014DC  6700 03E2                590          BEQ         OP_CODE_STOP
000014E0  B47C 4E73                591          CMP.W       #$4E73, D2 ;RTE 
000014E4  6700 03FE                592          BEQ         OP_CODE_RTE
000014E8  B47C 4E75                593          CMP.W       #$4E75, D2 ;RTS 
000014EC  6700 0404                594          BEQ         OP_CODE_RTS
000014F0                           595          
000014F0                           596          
000014F0  4EB9 000016D2            597          JSR         Bits11to8
000014F6  B43C 0002                598          CMP.B       #2, D2
000014FA  6700 0368                599          BEQ         OP_CODE_CLR
000014FE  B43C 0006                600          CMP.B       #6, D2
00001502  6700 037A                601          BEQ         OP_CODE_NOT
00001506                           602          *CMP.B       #8, D2
00001506                           603          *BEQ         OP_CODE_EXT
00001506                           604  
00001506  4EB9 000016BA            605          JSR         Bits9to7
0000150C  B43C 0001                606          CMP.B       #1, D2
00001510  6700 0430                607          BEQ         OP_CODE_MOVEM
00001514                           608          
00001514                           609          
00001514                           610          
00001514                           611          
00001514  4EB9 000016AE            612          JSR         Bits8to6     ;
0000151A  B43C 0007                613          CMP.B       #7, D2
0000151E  6700 0408                614          BEQ         OP_CODE_LEA ;LEA        
00001522                           615  
00001522  B43C 0002                616          CMP.B       #2, D2
00001526  6700 03D8                617          BEQ         OP_CODE_JSR ;JSR
0000152A  B43C 0003                618          CMP.B       #3, D2
0000152E  6700 03E4                619          BEQ         OP_CODE_JMP ;JMP
00001532                           620          
00001532                           621          
00001532                           622  
00001532                           623  
00001532                           624          
00001532                           625          
00001532  6000 00FC                626          BRA INVALID_INSTR
00001536                           627          
00001536  4E75                     628          RTS   
00001538                           629  
00001538                           630  
00001538                           631  
00001538                           632  
00001538                           633  JUMP_5:
00001538  4282                     634          CLR.L       D2
0000153A  2404                     635          MOVE.L      D4, D2
0000153C  0802 0008                636          BTST        #8,D2 
00001540  6700 0456                637          BEQ         OP_CODE_ADDQ  
00001544  6000 046C                638          BRA         OP_CODE_SUBQ
00001548  4E75                     639          RTS  
0000154A                           640  JUMP_6:
0000154A  4282                     641          CLR.L       D2
0000154C  4EB9 000016D2            642          JSR     Bits11to8     ;
00001552  B43C 0000                643          CMP.B   #0, D2        ;
00001556  6700 05AC                644          BEQ     OP_CODE_BRA   ; 
0000155A  B43C 0001                645          CMP.B   #1, D2        ;
0000155E  6700 05B8                646          BEQ     OP_CODE_BSR   ;
00001562  B43C 0007                647          CMP.B   #7, D2        ;
00001566  6700 05C4                648          BEQ     OP_CODE_BEQ   ;
0000156A                           649  
0000156A  6000 00C4                650          BRA INVALID_INSTR
0000156E                           651  
0000156E  4E75                     652          RTS  
00001570                           653  JUMP_7:
00001570                           654          ; CLR.L       D2
00001570                           655          ; LEA         MOVEQ_MSG, A1
00001570                           656          ; MOVE.B      #14, D0
00001570                           657          ; TRAP        #15
00001570                           658          
00001570  4EB9 00001B40            659          JSR         OP_CODE_MOVEQ
00001576                           660          
00001576                           661          ; BRA         INVALID_INSTR 
00001576  4E75                     662          RTS
00001578                           663  
00001578                           664  JUMP_8:
00001578  4282                     665          CLR.L       D2
0000157A  4EB9 000016AE            666          JSR         Bits8to6  ;
00001580  B43C 0003                667          CMP.B       #3, D2    ;
00001584  6700 0460                668          BEQ         OP_CODE_DIVU ;
00001588  B43C 0007                669          CMP.B       #7, D2    ;
0000158C  6700 0470                670          BEQ         OP_CODE_DIVS ;
00001590  6000 0484                671          BRA         OP_CODE_OR
00001594  4E75                     672          RTS
00001596                           673  
00001596                           674  JUMP_9:
00001596  4EB9 00001A30            675          JSR         OP_CODE_SUB
0000159C                           676  
0000159C                           677  
0000159C  4E75                     678          RTS         
0000159E                           679  
0000159E                           680  JUMP_A:
0000159E  6000 0090                681          BRA         INVALID_INSTR
000015A2  4E75                     682          RTS 
000015A4                           683  JUMP_B:
000015A4  4282                     684          CLR.L       D2
000015A6  4EB9 000016AE            685          JSR         Bits8to6  ;
000015AC                           686      ;CHECKING OPMODE FIELD
000015AC  B43C 0000                687          CMP.B       #0, D2   ;
000015B0  6700 041A                688          BEQ         OP_CODE_CMP ;
000015B4  B43C 0001                689          CMP.B       #1, D2    ;
000015B8  6700 0412                690          BEQ         OP_CODE_CMP ;
000015BC  B43C 0002                691          CMP.B       #2, D2    ;
000015C0  6700 040A                692          BEQ         OP_CODE_CMP ;
000015C4  6000 006A                693          BRA         INVALID_INSTR
000015C8  4E75                     694          RTS         
000015CA                           695  
000015CA                           696  JUMP_C:
000015CA  4282                     697          CLR.L       D2
000015CC  4EB9 000016AE            698          JSR         Bits8to6  ;
000015D2  B47C 0003                699          CMP         #3, D2    ;
000015D6  6700 0590                700          BEQ         OP_CODE_MULU ;
000015DA  B47C 0007                701          CMP         #7, D2   ;
000015DE  6700 0574                702          BEQ         OP_CODE_MULS ;
000015E2  B47C 0008                703          CMP         #8, D2   ;
000015E6  6700 0594                704          BEQ         OP_CODE_AND ;
000015EA                           705  
000015EA  6000 0044                706          BRA         INVALID_INSTR
000015EE  4E75                     707          RTS 
000015F0                           708  
000015F0                           709  JUMP_D:
000015F0  4282                     710          CLR.L       D2
000015F2  4EB9 0000168A            711          JSR         Bits7to6  ;
000015F8  B43C 0003                712          CMP.B       #3, D2    ;
000015FC  6700 05AE                713          BEQ         OP_CODE_ADDA
00001600  4EF9 00001B94            714          JMP         OP_CODE_ADD
00001606  6000 0028                715          BRA         INVALID_INSTR
0000160A  4E75                     716          RTS 
0000160C                           717   
0000160C                           718   
0000160C                           719  JUMP_E:
0000160C  4282                     720          CLR.L       D2
0000160E                           721          
0000160E  4EB9 0000168A            722          JSR         Bits7to6
00001614                           723  
00001614  B43C 0003                724          CMP.B       #3, D2
00001618  6700 068E                725          BEQ         OP_CODE_ASD_MEM
0000161C                           726          
0000161C  6000 05A6                727          BRA         OP_CODE_ASD_REG
00001620                           728          
00001620  4E75                     729          RTS  
00001622                           730           
00001622                           731  JUMP_ERROR:       
00001622  43F9 00001E58            732          LEA         ERROR_OP_MSG, A1
00001628  103C 000E                733          MOVE.B      #14, D0
0000162C  4E4F                     734          TRAP        #15
0000162E                           735  
0000162E  4E75                     736          RTS
00001630                           737  
00001630                           738  INVALID_INSTR:
00001630  43F9 00001E6C            739          LEA         IMPLEMENT_MSG, A1
00001636  103C 000E                740          MOVE.B      #14, D0
0000163A  4E4F                     741          TRAP        #15
0000163C  4E75                     742          RTS
0000163E                           743  
0000163E                           744  
0000163E                           745  
0000163E                           746  Bits2to0:
0000163E  3404                     747          MOVE.W      D4, D2
00001640  103C 000D                748          MOVE.B      #13, D0     ; Shifting 13 bits
00001644  E16A                     749          LSL.W       D0, D2      ; shorten to two bits
00001646  E06A                     750          LSR.W       D0, D2      ; isolate two bits
00001648  4E75                     751          RTS
0000164A                           752      
0000164A                           753  Bits3to0:
0000164A  3404                     754          MOVE.W      D4, D2
0000164C  103C 000C                755          MOVE.B      #12, D0     ; Shift 12 bits
00001650  E16A                     756          LSL.W       D0, D2      ; Shorten to 4th bit
00001652  E06A                     757          LSR.W       D0, D2      ; Isolate 4 bits
00001654  4E75                     758          RTS
00001656                           759      
00001656                           760  Bits5to3:
00001656  3404                     761          MOVE.W      D4, D2
00001658  103C 000A                762          MOVE.B      #10, D0     ; Shift 10 bits
0000165C  E16A                     763          LSL.W       D0, D2      ; cut to 5th bit
0000165E  103C 000D                764          MOVE.B      #13, D0     ; Shift 13 bits
00001662  E06A                     765          LSR.W       D0, D2      ; Isolate bits 5-3
00001664  4E75                     766          RTS
00001666                           767  Bits4to3:
00001666  3404                     768          MOVE.W      D4, D2
00001668  103C 000B                769          MOVE.B      #11, D0     ; Shift 11 bits
0000166C  E16A                     770          LSL.W       D0, D2      ; cut to 5th bit
0000166E  103C 000E                771          MOVE.B      #14, D0     ; Shift 14 bits
00001672  E06A                     772          LSR.W       D0, D2      ; Isolate bits 4-3
00001674  4E75                     773          RTS
00001676                           774          
00001676                           775  Bits7to0:
00001676  3404                     776          MOVE.W      D4, D2
00001678  E14A                     777          LSL.W       #8, D2      ; cut to 8th bit
0000167A  E04A                     778          LSR.W       #8, D2      ; Isolate 7-0
0000167C  4E75                     779          RTS
0000167E                           780  Bits7to4: 
0000167E  3404                     781          MOVE.W      D4, D2
00001680  E14A                     782          LSL.W       #8, D2      ; cut to 8th bit
00001682  103C 000C                783          MOVE.B      #12, D0     ; shift 12 bits
00001686  E06A                     784          LSR.W       D0, D2      ; isolate 7-4
00001688  4E75                     785          RTS
0000168A                           786      
0000168A                           787  Bits7to6:
0000168A  3404                     788          MOVE.W      D4, D2
0000168C  E14A                     789          LSL.W       #8, D2      ; cut to 8th bit
0000168E  103C 000E                790          MOVE.B      #14, D0     ; shift 14 bits
00001692  E06A                     791          LSR.W       D0, D2      ; isolate 7-6
00001694  4E75                     792          RTS
00001696                           793      
00001696                           794  Bits8to3:
00001696  3404                     795          MOVE.W      D4, D2
00001698  EF4A                     796          LSL.W       #7, D2      ; cut to 9th bit
0000169A  103C 000A                797          MOVE.B      #10, D0     ; shift 10 bits
0000169E  E06A                     798          LSR.W       D0, D2      ; isolate 8-3
000016A0  4E75                     799          RTS
000016A2                           800      
000016A2                           801  Bits8to4:
000016A2  3404                     802          MOVE.W      D4, D2
000016A4  EF4A                     803          LSL.W       #7, D2      ; cut to 9th bit
000016A6  103C 000B                804          MOVE.B      #11, D0     ; shift 11 bits
000016AA  E06A                     805          LSR.W       D0, D2      ; isolate 8-4
000016AC  4E75                     806          RTS
000016AE                           807      
000016AE                           808  Bits8to6:
000016AE  3404                     809          MOVE.W      D4, D2
000016B0  EF4A                     810          LSL.W       #7, D2      ; cut to 9th bit
000016B2  103C 000D                811          MOVE.B      #13, D0     ; shift 13 bits
000016B6  E06A                     812          LSR.W       D0, D2      ; isolate 8-6
000016B8  4E75                     813          RTS
000016BA                           814  Bits9to7:
000016BA  3404                     815          MOVE.W      D4, D2
000016BC  ED4A                     816          LSL.W       #6, D2      ; cut to 10th bit
000016BE  103C 000D                817          MOVE.B      #13, D0     ; shift 13 bits
000016C2  E06A                     818          LSR.W       D0, D2      ; isolate 8-6
000016C4  4E75                     819          RTS
000016C6                           820  Bits11to6:
000016C6  3404                     821          MOVE.W      D4, D2
000016C8  E94A                     822          LSL.W       #4, D2      ; cut to 12th bit
000016CA  103C 000A                823          MOVE.B      #10, D0     ; shift 10 bits
000016CE  E06A                     824          LSR.W       D0, D2      ; isolate 11-6
000016D0  4E75                     825          RTS
000016D2                           826  
000016D2                           827       
000016D2                           828  Bits11to8:
000016D2  3404                     829          MOVE.W      D4, D2
000016D4  E94A                     830          LSL.W       #4, D2      ; cut to 12th bit
000016D6  103C 000C                831          MOVE.B      #12, D0     ; shift 12 bits
000016DA  E06A                     832          LSR.W       D0, D2      ; isolate 11-8
000016DC  4E75                     833          RTS
000016DE                           834  
000016DE                           835  Bits11to9:
000016DE  3404                     836          MOVE.W      D4, D2
000016E0  E94A                     837          LSL.W       #4, D2      ; cut to 12th bit
000016E2  103C 000D                838          MOVE.B      #13, D0     ; shift 13 bits
000016E6  E06A                     839          LSR.W       D0, D2      ; isolate 11-9
000016E8  4E75                     840          RTS
000016EA                           841  
000016EA                           842  Bit0:
000016EA  3404                     843          MOVE.W      D4, D2
000016EC  103C 000F                844          MOVE.B      #15, D0
000016F0  E16A                     845          LSL.W       D0, D2     
000016F2  103C 000F                846          MOVE.B      #15, D0     
000016F6  E06A                     847          LSR.W       D0, D2     
000016F8  4E75                     848          RTS
000016FA                           849  
000016FA                           850  Bit5:
000016FA  3404                     851          MOVE.W      D4, D2
000016FC  103C 000A                852          MOVE.B      #10, D0
00001700  E16A                     853          LSL.W       D0, D2     
00001702  103C 000F                854          MOVE.B      #15, D0     
00001706  E06A                     855          LSR.W       D0, D2     
00001708  4E75                     856          RTS
0000170A                           857          
0000170A                           858  Bit6:
0000170A  3404                     859          MOVE.W      D4, D2
0000170C  103C 000B                860          MOVE.B      #11, D0
00001710  E16A                     861          LSL.W       D0, D2     
00001712  103C 000F                862          MOVE.B      #15, D0     
00001716  E06A                     863          LSR.W       D0, D2     
00001718  4E75                     864          RTS        
0000171A                           865  
0000171A                           866  
0000171A                           867  
0000171A                           868  OP_CODE_BASE_MOVE:
0000171A                           869          ; This should only execute for Move.B
0000171A  43F9 00001D92            870          LEA         MOVE_MSG, A1
00001720  103C 000E                871          MOVE.B      #14, D0
00001724  4E4F                     872          TRAP        #15
00001726  43F9 00001E4F            873          LEA         BYTE_MSG, A1
0000172C  103C 000E                874          MOVE.B      #14, D0
00001730  4E4F                     875          TRAP        #15
00001732                           876          
00001732  163C 0000                877          MOVE.B      #0, D3
00001736                           878          
00001736                           879          
00001736                           880          
00001736  4E75                     881          RTS         
00001738                           882  
00001738                           883  J_MOVEA_L:
00001738  43F9 00001D97            884          LEA         MOVEA_MSG, A1
0000173E  103C 000E                885          MOVE.B      #14, D0
00001742  4E4F                     886          TRAP        #15
00001744  43F9 00001E55            887          LEA         LONG_MSG, A1
0000174A  103C 000E                888          MOVE.B      #14, D0
0000174E  4E4F                     889          TRAP        #15
00001750                           890          
00001750  163C 0002                891          MOVE.B      #2, D3
00001754  4EB9 00001EAE            892          JSR         EA_MOVE
0000175A  4E75                     893          RTS    
0000175C                           894  J_MOVE_L:
0000175C  43F9 00001D92            895          LEA         MOVE_MSG, A1
00001762  103C 000E                896          MOVE.B      #14, D0
00001766  4E4F                     897          TRAP        #15
00001768  43F9 00001E55            898          LEA         LONG_MSG, A1
0000176E  103C 000E                899          MOVE.B      #14, D0
00001772  4E4F                     900          TRAP        #15
00001774                           901          
00001774  163C 0002                902          MOVE.B      #2, D3
00001778  4EB9 00001EAE            903          JSR         EA_MOVE
0000177E                           904          
0000177E  4E75                     905          RTS
00001780                           906  
00001780                           907  
00001780                           908  
00001780                           909  J_MOVEA_W:
00001780  43F9 00001D97            910          LEA         MOVEA_MSG, A1
00001786  103C 000E                911          MOVE.B      #14, D0
0000178A  4E4F                     912          TRAP        #15
0000178C  43F9 00001E52            913          LEA         WORD_MSG, A1
00001792  103C 000E                914          MOVE.B      #14, D0
00001796  4E4F                     915          TRAP        #15
00001798                           916          
00001798  163C 0001                917          MOVE.B      #1, D3
0000179C  4EB9 00001EAE            918          JSR         EA_MOVE
000017A2                           919          
000017A2  4E75                     920          RTS  
000017A4                           921      
000017A4                           922  J_MOVE_W:
000017A4  43F9 00001D92            923          LEA         MOVE_MSG, A1
000017AA  103C 000E                924          MOVE.B      #14, D0
000017AE  4E4F                     925          TRAP        #15
000017B0  43F9 00001E52            926          LEA         WORD_MSG, A1
000017B6  103C 000E                927          MOVE.B      #14, D0
000017BA  4E4F                     928          TRAP        #15
000017BC                           929          
000017BC  163C 0001                930          MOVE.B      #1, D3
000017C0  4EB9 00001EAE            931          JSR         EA_MOVE
000017C6                           932          
000017C6  4E75                     933          RTS  
000017C8                           934  
000017C8                           935  OP_CODE_ORI:
000017C8  43F9 00001D9D            936          LEA         ORI_MSG, A1
000017CE  103C 000E                937          MOVE.B      #14, D0
000017D2  4E4F                     938          TRAP        #15
000017D4                           939          
000017D4  4EB9 00001A9E            940          JSR         OPMODE_ASHIFT    
000017DA  4EB9 00001F14            941          JSR         ABS_DATASRC_EA
000017E0  4E75                     942          RTS
000017E2                           943          
000017E2                           944  OP_CODE_ANDI:
000017E2  43F9 00001DA1            945          LEA         ANDI_MSG, A1
000017E8  103C 000E                946          MOVE.B      #14, D0
000017EC  4E4F                     947          TRAP        #15
000017EE                           948          
000017EE  4EB9 00001A9E            949          JSR         OPMODE_ASHIFT    
000017F4  4EB9 00001F14            950          JSR         ABS_DATASRC_EA
000017FA  4E75                     951          RTS
000017FC                           952          
000017FC                           953  OP_CODE_SUBI:
000017FC  43F9 00001DA6            954          LEA         SUBI_MSG, A1
00001802  103C 000E                955          MOVE.B      #14, D0
00001806  4E4F                     956          TRAP        #15
00001808                           957          
00001808  4EB9 00001A9E            958          JSR         OPMODE_ASHIFT    
0000180E  4EB9 00001F14            959          JSR         ABS_DATASRC_EA
00001814  4E75                     960          RTS
00001816                           961          
00001816                           962  OP_CODE_ADDI:
00001816  43F9 00001DAB            963          LEA         ADDI_MSG, A1
0000181C  103C 000E                964          MOVE.B      #14, D0
00001820  4E4F                     965          TRAP        #15
00001822                           966          
00001822  4EB9 00001A9E            967          JSR         OPMODE_ASHIFT    
00001828  4EB9 00001F14            968          JSR         ABS_DATASRC_EA
0000182E  4E75                     969          RTS
00001830                           970          
00001830                           971  OP_CODE_EORI:
00001830  43F9 00001DB0            972          LEA         EORI_MSG, A1
00001836  103C 000E                973          MOVE.B      #14, D0
0000183A  4E4F                     974          TRAP        #15
0000183C                           975          
0000183C  4EB9 00001A9E            976          JSR         OPMODE_ASHIFT    
00001842  4EB9 00001F14            977          JSR         ABS_DATASRC_EA
00001848  4E75                     978          RTS
0000184A                           979          
0000184A                           980  OP_CODE_CMPI:
0000184A  43F9 00001DB5            981          LEA         CMPI_MSG, A1
00001850  103C 000E                982          MOVE.B      #14, D0
00001854  4E4F                     983          TRAP        #15
00001856                           984          
00001856  4EB9 00001A9E            985          JSR         OPMODE_ASHIFT    
0000185C  4EB9 00001F14            986          JSR         ABS_DATASRC_EA
00001862  4E75                     987          RTS
00001864                           988  OP_CODE_CLR:
00001864  43F9 00001DBE            989          LEA         CLR_MSG, A1
0000186A  103C 000E                990          MOVE.B      #14, D0
0000186E  4E4F                     991          TRAP        #15
00001870  4EB9 00001A9E            992          JSR         OPMODE_ASHIFT
00001876  4EB9 00001EE8            993          JSR         EA_GENERIC
0000187C                           994  
0000187C  4E75                     995          RTS
0000187E                           996  OP_CODE_NOT:
0000187E  43F9 00001DC2            997          LEA         NOT_MSG, A1
00001884  103C 000E                998          MOVE.B      #14, D0
00001888  4E4F                     999          TRAP        #15
0000188A  4EB9 00001A9E           1000          JSR         OPMODE_ASHIFT
00001890  4EB9 00001EE8           1001          JSR         EA_GENERIC
00001896                          1002  
00001896  4E75                    1003          RTS
00001898                          1004  OP_CODE_EXT:
00001898  43F9 00001DC6           1005          LEA         EXT_MSG, A1
0000189E  103C 000E               1006          MOVE.B      #14, D0
000018A2  4E4F                    1007          TRAP        #15
000018A4  4EB9 00001A9E           1008          JSR         OPMODE_ASHIFT
000018AA  4EB9 00001EE8           1009          JSR         EA_GENERIC
000018B0                          1010  
000018B0  4E75                    1011          RTS
000018B2                          1012  
000018B2                          1013  
000018B2                          1014  OP_CODE_NOP:
000018B2  43F9 00001DBA           1015          LEA         NOP_MSG, A1
000018B8  103C 000E               1016          MOVE.B      #14, D0
000018BC  4E4F                    1017          TRAP        #15
000018BE                          1018  
000018BE  4E75                    1019          RTS
000018C0                          1020  OP_CODE_STOP:
000018C0  43F9 00001DCA           1021          LEA         STOP_MSG, A1
000018C6  103C 000E               1022          MOVE.B      #14, D0
000018CA  4E4F                    1023          TRAP        #15
000018CC                          1024  
000018CC  43F9 000027B3           1025          LEA         SPACE_MSG, A1
000018D2  103C 000E               1026          MOVE.B      #14, D0
000018D6  4E4F                    1027          TRAP        #15
000018D8                          1028          
000018D8  163C 0001               1029          MOVE.B      #1, D3
000018DC  4EB9 00002460           1030          JSR         DATA_TABLE
000018E2                          1031  
000018E2  4E75                    1032          RTS        
000018E4                          1033          
000018E4                          1034  OP_CODE_RTE:
000018E4  43F9 00001DCF           1035          LEA         RTE_MSG, A1
000018EA  103C 000E               1036          MOVE.B      #14, D0
000018EE  4E4F                    1037          TRAP        #15
000018F0                          1038  
000018F0  4E75                    1039          RTS
000018F2                          1040  OP_CODE_RTS:
000018F2  43F9 00001DD3           1041          LEA         RTS_MSG, A1
000018F8  103C 000E               1042          MOVE.B      #14, D0
000018FC  4E4F                    1043          TRAP        #15
000018FE                          1044  
000018FE  4E75                    1045          RTS
00001900                          1046             
00001900                          1047  
00001900                          1048  OP_CODE_JSR:
00001900  43F9 00001DE1           1049          LEA         JSR_MSG, A1
00001906  103C 000E               1050          MOVE.B      #14, D0
0000190A  4E4F                    1051          TRAP        #15
0000190C                          1052          
0000190C  4EB9 00001EE8           1053          JSR         EA_GENERIC
00001912                          1054  
00001912  4E75                    1055          RTS
00001914                          1056          
00001914                          1057  OP_CODE_JMP:
00001914  43F9 00001DE5           1058          LEA         JMP_MSG, A1
0000191A  103C 000E               1059          MOVE.B      #14, D0
0000191E  4E4F                    1060          TRAP        #15
00001920                          1061          
00001920  4EB9 00001EE8           1062          JSR         EA_GENERIC
00001926                          1063  
00001926  4E75                    1064          RTS        
00001928                          1065          
00001928                          1066  OP_CODE_LEA:
00001928  43F9 00001DDD           1067          LEA         LEA_MSG, A1
0000192E  103C 000E               1068          MOVE.B      #14, D0
00001932  4E4F                    1069          TRAP        #15
00001934                          1070          
00001934  4283                    1071          CLR.L       D3
00001936  163C 0002               1072          MOVE.B      #2, D3
0000193A                          1073  
0000193A                          1074          *EA
0000193A  4EB9 00001F6E           1075          JSR         EA_ASRC
00001940                          1076  
00001940  4E75                    1077          RTS
00001942                          1078  
00001942                          1079  OP_CODE_MOVEM:
00001942                          1080          ;JSR         Bits9to7 ;check for MOVEM and EXT
00001942                          1081          ;CMP.B       #1, D2   ;
00001942                          1082          ;BEQ         MOVEM_OR_EXT
00001942                          1083          ;JMP         INVALID_INSTR 
00001942  0802 0006               1084          BTST        #6, D2
00001946  6700 0008               1085          BEQ         MOVEM_W
0000194A  6000 0028               1086          BRA         MOVEM_L
0000194E                          1087          
0000194E                          1088          
0000194E  4E75                    1089          RTS
00001950                          1090          
00001950                          1091          
00001950                          1092          
00001950                          1093  MOVEM_W:
00001950  43F9 00001DD7           1094          LEA         MOVEM_MSG, A1
00001956  103C 000E               1095          MOVE.B      #14, D0
0000195A  4E4F                    1096          TRAP        #15
0000195C  43F9 00001E52           1097          LEA         WORD_MSG, A1
00001962  103C 000E               1098          MOVE.B      #14, D0
00001966  4E4F                    1099          TRAP        #15
00001968                          1100          
00001968  163C 0001               1101          MOVE.B      #1, D3
0000196C                          1102    
0000196C  4EB9 00002040           1103          JSR         EA_MOVEM
00001972  4E75                    1104          RTS
00001974                          1105          
00001974                          1106  MOVEM_L:
00001974  43F9 00001DD7           1107          LEA         MOVEM_MSG, A1
0000197A  103C 000E               1108          MOVE.B      #14, D0
0000197E  4E4F                    1109          TRAP        #15
00001980  43F9 00001E55           1110          LEA         LONG_MSG, A1
00001986  103C 000E               1111          MOVE.B      #14, D0
0000198A  4E4F                    1112          TRAP        #15 
0000198C  163C 0002               1113          MOVE.B      #2, D3
00001990                          1114    
00001990  4EB9 00001EAE           1115          JSR         EA_MOVE
00001996                          1116          
00001996                          1117          
00001996  4E75                    1118          RTS   
00001998                          1119  
00001998                          1120  
00001998                          1121  
00001998                          1122  ;MOVEM_CHECK:
00001998                          1123  ;        CLR.L       D2
00001998                          1124  ;        MOVE.L      D4, D2
00001998                          1125  ;        BTST        #11,D2 ;
00001998                          1126  ;        BNE         OP_CODE_MOVEM
00001998                          1127  ;        JMP         INVALID_INSTR               
00001998                          1128  
00001998                          1129  
00001998                          1130  OP_CODE_ADDQ:
00001998  43F9 00001D88           1131          LEA         ADDQ_MSG, A1
0000199E  103C 000E               1132          MOVE.B      #14, D0
000019A2  4E4F                    1133          TRAP        #15
000019A4                          1134          
000019A4  4EB9 00001A9E           1135          JSR         OPMODE_ASHIFT
000019AA                          1136          
000019AA  4EB9 000022B8           1137          JSR         EA_ADDQ
000019B0                          1138          
000019B0  4E75                    1139          RTS
000019B2                          1140  OP_CODE_SUBQ:
000019B2  43F9 00001D8D           1141          LEA         SUBQ_MSG, A1
000019B8  103C 000E               1142          MOVE.B      #14, D0
000019BC  4E4F                    1143          TRAP        #15
000019BE                          1144          
000019BE  4EB9 00001A9E           1145          JSR         OPMODE_ASHIFT
000019C4                          1146          
000019C4  4EB9 000022B8           1147          JSR         EA_ADDQ
000019CA                          1148          
000019CA  4E75                    1149          RTS        
000019CC                          1150   
000019CC                          1151  OP_CODE_CMP:
000019CC                          1152  
000019CC  43F9 00001E0A           1153          LEA         CMP_MSG, A1
000019D2  103C 000E               1154          MOVE.B      #14, D0
000019D6  4E4F                    1155          TRAP        #15
000019D8                          1156          
000019D8  4EB9 00001A4A           1157          JSR         OPMODE
000019DE  4EB9 00001F2C           1158          JSR         REVERSESRC_EA
000019E4                          1159          
000019E4  4E75                    1160          RTS
000019E6                          1161          
000019E6                          1162  OP_CODE_DIVU:
000019E6  43F9 00001DFC           1163          LEA         DIVU_MSG, A1
000019EC  103C 000E               1164          MOVE.B      #14, D0
000019F0  4E4F                    1165          TRAP        #15
000019F2                          1166          
000019F2  163C 0001               1167          MOVE.B      #1, D3        
000019F6  4EB9 00001F90           1168          JSR         EA_DSRC
000019FC                          1169          
000019FC  4E75                    1170          RTS
000019FE                          1171          
000019FE                          1172  OP_CODE_DIVS:
000019FE  43F9 00001E01           1173          LEA         DIVS_MSG, A1
00001A04  103C 000E               1174          MOVE.B      #14, D0
00001A08  4E4F                    1175          TRAP        #15
00001A0A                          1176          
00001A0A  163C 0001               1177          MOVE.B      #1, D3        
00001A0E  4EB9 00001F90           1178          JSR         EA_DSRC
00001A14                          1179          
00001A14  4E75                    1180          RTS
00001A16                          1181  OP_CODE_OR:
00001A16  43F9 00001E39           1182          LEA         OR_MSG, A1
00001A1C  103C 000E               1183          MOVE.B      #14, D0
00001A20  4E4F                    1184          TRAP        #15
00001A22                          1185          
00001A22  4EB9 00001A4A           1186          JSR         OPMODE
00001A28                          1187          
00001A28  4EB9 00001F2C           1188          JSR         REVERSESRC_EA
00001A2E                          1189          
00001A2E  4E75                    1190          RTS
00001A30                          1191  
00001A30                          1192  OP_CODE_SUB:
00001A30  43F9 00001E06           1193          LEA         SUB_MSG, A1
00001A36  103C 000E               1194          MOVE.B      #14, D0
00001A3A  4E4F                    1195          TRAP        #15
00001A3C                          1196          
00001A3C  4EB9 00001A4A           1197          JSR         OPMODE
00001A42                          1198          
00001A42  4EB9 00001F2C           1199          JSR         REVERSESRC_EA
00001A48                          1200          
00001A48  4E75                    1201          RTS
00001A4A                          1202          
00001A4A                          1203  OPMODE:
00001A4A  4EB8 16AE               1204          JSR         Bits8to6
00001A4E  B43C 0000               1205          CMP.B       #0, D2
00001A52  6700 006C               1206          BEQ         PRINT_BYTE
00001A56  B43C 0004               1207          CMP.B       #4, D2
00001A5A  6700 0064               1208          BEQ         PRINT_BYTE
00001A5E                          1209          
00001A5E  B43C 0001               1210          CMP.B       #1, D2
00001A62  6700 006E               1211          BEQ         PRINT_WORD
00001A66  B43C 0005               1212          CMP.B       #5, D2
00001A6A  6700 0066               1213          BEQ         PRINT_WORD
00001A6E                          1214          
00001A6E  B43C 0002               1215          CMP.B       #2, D2
00001A72  6700 0070               1216          BEQ         PRINT_LONG
00001A76  B43C 0006               1217          CMP.B       #6, D2
00001A7A  6700 0068               1218          BEQ         PRINT_LONG
00001A7E                          1219          
00001A7E  4EB9 00001AF6           1220          JSR         WRONG_SIZE
00001A84                          1221          
00001A84                          1222  OPMODE_ADDA:
00001A84  4EB8 16AE               1223          JSR         Bits8to6
00001A88  B43C 0003               1224          CMP.B       #3, D2
00001A8C  6700 0044               1225          BEQ         PRINT_WORD 
00001A90  B43C 0007               1226          CMP.B       #7, D2
00001A94  6700 004E               1227          BEQ         PRINT_LONG
00001A98  4EB9 00001AF6           1228          JSR         WRONG_SIZE        
00001A9E                          1229  
00001A9E                          1230  OPMODE_ASHIFT:
00001A9E  4EB8 168A               1231          JSR         Bits7to6
00001AA2  B43C 0000               1232          CMP.B       #0, D2
00001AA6  6700 0018               1233          BEQ         PRINT_BYTE
00001AAA  B43C 0001               1234          CMP.B       #1, D2
00001AAE  6700 0022               1235          BEQ         PRINT_WORD
00001AB2  B43C 0002               1236          CMP.B       #2, D2
00001AB6  6700 002C               1237          BEQ         PRINT_LONG
00001ABA                          1238  
00001ABA  4EB9 00001AF6           1239          JSR         WRONG_SIZE
00001AC0                          1240          
00001AC0                          1241  PRINT_BYTE:
00001AC0  43F9 00001E4F           1242          LEA         BYTE_MSG, A1
00001AC6  103C 000E               1243          MOVE.B      #14, D0
00001ACA  4E4F                    1244          TRAP        #15
00001ACC                          1245          
00001ACC  163C 0000               1246          MOVE.B      #0, D3
00001AD0  4E75                    1247          RTS
00001AD2                          1248  
00001AD2                          1249  PRINT_WORD:
00001AD2  43F9 00001E52           1250          LEA         WORD_MSG, A1
00001AD8  103C 000E               1251          MOVE.B      #14, D0
00001ADC  4E4F                    1252          TRAP        #15
00001ADE  163C 0001               1253          MOVE.B      #1, D3
00001AE2  4E75                    1254          RTS
00001AE4                          1255  
00001AE4                          1256  PRINT_LONG:
00001AE4  43F9 00001E55           1257          LEA         LONG_MSG, A1
00001AEA  103C 000E               1258          MOVE.B      #14, D0
00001AEE  4E4F                    1259          TRAP        #15
00001AF0  163C 0002               1260          MOVE.B      #2, D3
00001AF4  4E75                    1261          RTS
00001AF6                          1262  
00001AF6                          1263  WRONG_SIZE:
00001AF6  43F9 00001E98           1264          LEA         ERROR_SIZE_MSG, A1
00001AFC  103C 000E               1265          MOVE.B      #14, D0
00001B00  4E4F                    1266          TRAP        #15
00001B02  4E75                    1267          RTS
00001B04                          1268          
00001B04                          1269  OP_CODE_BRA:
00001B04  43F9 00001DE9           1270          LEA         BRA_MSG, A1
00001B0A  103C 000E               1271          MOVE.B      #14, D0
00001B0E  4E4F                    1272          TRAP        #15
00001B10                          1273          
00001B10  4EB9 000021C4           1274          JSR         EA_BRA
00001B16                          1275          
00001B16  4E75                    1276          RTS
00001B18                          1277  
00001B18                          1278  OP_CODE_BSR:
00001B18  43F9 00001DED           1279          LEA         BSR_MSG, A1
00001B1E  103C 000E               1280          MOVE.B      #14, D0
00001B22  4E4F                    1281          TRAP        #15
00001B24                          1282          
00001B24  4EB9 000021C4           1283          JSR         EA_BRA
00001B2A                          1284          
00001B2A  4E75                    1285          RTS
00001B2C                          1286  OP_CODE_BEQ:
00001B2C  43F9 00001DF1           1287          LEA         BEQ_MSG, A1
00001B32  103C 000E               1288          MOVE.B      #14, D0
00001B36  4E4F                    1289          TRAP        #15
00001B38                          1290          
00001B38  4EB9 000021C4           1291          JSR         EA_BRA
00001B3E                          1292          
00001B3E  4E75                    1293          RTS
00001B40                          1294          
00001B40                          1295          
00001B40                          1296          
00001B40                          1297  OP_CODE_MOVEQ:
00001B40  43F9 00001DF5           1298          LEA         MOVEQ_MSG, A1
00001B46  103C 000E               1299          MOVE.B      #14, D0
00001B4A  4E4F                    1300          TRAP        #15
00001B4C                          1301          
00001B4C  4EB9 00002276           1302          JSR         EA_MOVEQ
00001B52                          1303          
00001B52  4E75                    1304          RTS
00001B54                          1305  
00001B54                          1306  OP_CODE_MULS:
00001B54  43F9 00001E13           1307          LEA         MULS_MSG, A1
00001B5A  103C 000E               1308          MOVE.B      #14, D0
00001B5E  4E4F                    1309          TRAP        #15
00001B60                          1310          
00001B60  4EB9 00001F2C           1311          JSR         REVERSESRC_EA
00001B66                          1312          
00001B66  4E75                    1313          RTS
00001B68                          1314          
00001B68                          1315  OP_CODE_MULU:
00001B68  43F9 00001E0E           1316          LEA         MULU_MSG, A1
00001B6E  103C 000E               1317          MOVE.B      #14, D0
00001B72  4E4F                    1318          TRAP        #15
00001B74                          1319          
00001B74  4EB9 00001F2C           1320          JSR         REVERSESRC_EA
00001B7A  4E75                    1321          RTS
00001B7C                          1322  OP_CODE_AND:
00001B7C  43F9 00001E40           1323          LEA         AND_MSG, A1
00001B82  103C 000E               1324          MOVE.B      #14, D0
00001B86  4E4F                    1325          TRAP        #15
00001B88  4EB8 1A4A               1326          JSR         OPMODE
00001B8C                          1327          
00001B8C  4EB9 00001F2C           1328          JSR         REVERSESRC_EA
00001B92  4E75                    1329          RTS        
00001B94                          1330  
00001B94                          1331  OP_CODE_ADD:
00001B94  43F9 00001E18           1332          LEA         ADD_MSG, A1
00001B9A  103C 000E               1333          MOVE.B      #14, D0
00001B9E  4E4F                    1334          TRAP        #15
00001BA0                          1335          
00001BA0  4EB8 1A4A               1336          JSR         OPMODE
00001BA4  4EB9 00001F4A           1337          JSR         EA_ADD
00001BAA                          1338          
00001BAA  4E75                    1339          RTS
00001BAC                          1340          
00001BAC                          1341  OP_CODE_ADDA:
00001BAC  43F9 00001E1C           1342          LEA         ADDA_MSG, A1
00001BB2  103C 000E               1343          MOVE.B      #14, D0
00001BB6  4E4F                    1344          TRAP        #15
00001BB8                          1345          
00001BB8  4EB8 1A84               1346          JSR         OPMODE_ADDA
00001BBC  4EB9 00001F6E           1347          JSR         EA_ASRC
00001BC2                          1348          
00001BC2  4E75                    1349          RTS
00001BC4                          1350          
00001BC4                          1351        
00001BC4                          1352  
00001BC4                          1353  OP_CODE_ASD_REG:
00001BC4  4282                    1354          CLR.L       D2
00001BC6  3404                    1355          MOVE.W      D4, D2
00001BC8  0802 0008               1356          BTST        #8, D2
00001BCC  6700 002A               1357          BEQ         RIGHT_REG
00001BD0  6000 0006               1358          BRA         LEFT_REG
00001BD4  4E75                    1359          RTS
00001BD6                          1360  
00001BD6  4E75                    1361          RTS
00001BD8                          1362  LEFT_REG:
00001BD8  4282                    1363          CLR.L       D2
00001BDA  4EB8 1666               1364          JSR         Bits4to3
00001BDE  B43C 0000               1365          CMP.B       #0, D2
00001BE2  6700 0034               1366          BEQ         ASL_REG
00001BE6  B43C 0001               1367          CMP.B       #1, D2
00001BEA  6700 0044               1368          BEQ         LSL_REG
00001BEE  B43C 0003               1369          CMP.B       #3, D2
00001BF2  6700 0054               1370          BEQ         ROL_REG
00001BF6                          1371          
00001BF6  4E75                    1372          RTS
00001BF8                          1373          
00001BF8                          1374  RIGHT_REG:
00001BF8  4282                    1375          CLR.L       D2
00001BFA  4EB8 1666               1376          JSR         Bits4to3
00001BFE  B43C 0000               1377          CMP.B       #0, D2
00001C02  6700 005C               1378          BEQ         ASR_REG
00001C06  B43C 0001               1379          CMP.B       #1, D2
00001C0A  6700 006C               1380          BEQ         LSR_REG
00001C0E  B43C 0003               1381          CMP.B       #3, D2
00001C12  6700 007C               1382          BEQ         ROR_REG
00001C16                          1383          
00001C16  4E75                    1384          RTS   
00001C18                          1385  ASL_REG:
00001C18  43F9 00001E21           1386          LEA         ASL_MSG, A1
00001C1E  103C 000E               1387          MOVE.B      #14, D0
00001C22  4E4F                    1388          TRAP        #15 
00001C24  4EB8 1A9E               1389          JSR         OPMODE_ASHIFT
00001C28  4EB9 00001FB2           1390          JSR         EA_AS
00001C2E                          1391          
00001C2E  4E75                    1392          RTS
00001C30                          1393  LSL_REG:
00001C30  43F9 00001E29           1394          LEA         LSL_MSG, A1
00001C36  103C 000E               1395          MOVE.B      #14, D0
00001C3A  4E4F                    1396          TRAP        #15 
00001C3C  4EB8 1A9E               1397          JSR         OPMODE_ASHIFT
00001C40  4EB9 00001FB2           1398          JSR         EA_AS
00001C46                          1399          
00001C46  4E75                    1400          RTS
00001C48                          1401  ROL_REG:
00001C48  43F9 00001E31           1402          LEA         ROL_MSG, A1
00001C4E  103C 000E               1403          MOVE.B      #14, D0
00001C52  4E4F                    1404          TRAP        #15 
00001C54  4EB8 1A9E               1405          JSR         OPMODE_ASHIFT
00001C58  4EB9 00001FB2           1406          JSR         EA_AS
00001C5E                          1407          
00001C5E  4E75                    1408          RTS
00001C60                          1409  ASR_REG:
00001C60  43F9 00001E25           1410          LEA         ASR_MSG, A1
00001C66  103C 000E               1411          MOVE.B      #14, D0
00001C6A  4E4F                    1412          TRAP        #15 
00001C6C  4EB8 1A9E               1413          JSR         OPMODE_ASHIFT
00001C70  4EB9 00001FB2           1414          JSR         EA_AS
00001C76                          1415          
00001C76  4E75                    1416          RTS
00001C78                          1417  LSR_REG:
00001C78  43F9 00001E2D           1418          LEA         LSR_MSG, A1
00001C7E  103C 000E               1419          MOVE.B      #14, D0
00001C82  4E4F                    1420          TRAP        #15 
00001C84  4EB8 1A9E               1421          JSR         OPMODE_ASHIFT
00001C88  4EB9 00001FB2           1422          JSR         EA_AS
00001C8E                          1423          
00001C8E  4E75                    1424          RTS
00001C90                          1425  ROR_REG:
00001C90  43F9 00001E35           1426          LEA         ROR_MSG, A1
00001C96  103C 000E               1427          MOVE.B      #14, D0
00001C9A  4E4F                    1428          TRAP        #15
00001C9C  4EB8 1A9E               1429          JSR         OPMODE_ASHIFT
00001CA0  4EB9 00001FB2           1430          JSR         EA_AS
00001CA6                          1431          
00001CA6  4E75                    1432          RTS
00001CA8                          1433  
00001CA8                          1434  OP_CODE_ASD_MEM:
00001CA8  4282                    1435          CLR.L       D2
00001CAA  3404                    1436          MOVE.W      D4, D2
00001CAC  0802 0008               1437          BTST        #8, D2
00001CB0  6700 0010               1438          BEQ         RIGHT_MEM
00001CB4  6000 0006               1439          BRA         LEFT_MEM
00001CB8  4E75                    1440          RTS
00001CBA                          1441  
00001CBA  4E75                    1442          RTS
00001CBC                          1443  LEFT_MEM:
00001CBC  6000 000A               1444          BRA         ASL_MEM
00001CC0                          1445  
00001CC0  4E75                    1446          RTS
00001CC2                          1447          
00001CC2                          1448  RIGHT_MEM:
00001CC2                          1449  
00001CC2  6000 0064               1450          BRA         ASR_MEM
00001CC6                          1451  
00001CC6  4E75                    1452          RTS        
00001CC8                          1453  
00001CC8                          1454  ASL_MEM:
00001CC8  43F9 00001E21           1455          LEA         ASL_MSG, A1
00001CCE  103C 000E               1456          MOVE.B      #14, D0
00001CD2  4E4F                    1457          TRAP        #15
00001CD4  43F9 000027B3           1458          LEA         SPACE_MSG, A1
00001CDA  103C 000E               1459          MOVE.B      #14, D0
00001CDE  4E4F                    1460          TRAP        #15        
00001CE0  4EB9 00001EE8           1461          JSR         EA_GENERIC        
00001CE6  4E75                    1462          RTS
00001CE8                          1463  LSL_MEM:
00001CE8  43F9 00001E29           1464          LEA         LSL_MSG, A1
00001CEE  103C 000E               1465          MOVE.B      #14, D0
00001CF2  4E4F                    1466          TRAP        #15 
00001CF4  43F9 000027B3           1467          LEA         SPACE_MSG, A1
00001CFA  103C 000E               1468          MOVE.B      #14, D0
00001CFE  4E4F                    1469          TRAP        #15 
00001D00  4EB9 00001EE8           1470          JSR         EA_GENERIC
00001D06  4E75                    1471          RTS        
00001D08                          1472  ROL_MEM:
00001D08  43F9 00001E31           1473          LEA         ROL_MSG, A1
00001D0E  103C 000E               1474          MOVE.B      #14, D0
00001D12  4E4F                    1475          TRAP        #15        
00001D14  43F9 000027B3           1476          LEA         SPACE_MSG, A1
00001D1A  103C 000E               1477          MOVE.B      #14, D0
00001D1E  4E4F                    1478          TRAP        #15      
00001D20  4EB9 00001EE8           1479          JSR         EA_GENERIC        
00001D26  4E75                    1480          RTS
00001D28                          1481  ASR_MEM:
00001D28  43F9 00001E25           1482          LEA         ASR_MSG, A1
00001D2E  103C 000E               1483          MOVE.B      #14, D0
00001D32  4E4F                    1484          TRAP        #15
00001D34  43F9 000027B3           1485          LEA         SPACE_MSG, A1
00001D3A  103C 000E               1486          MOVE.B      #14, D0
00001D3E  4E4F                    1487          TRAP        #15        
00001D40  4EB9 00001EE8           1488          JSR         EA_GENERIC        
00001D46  4E75                    1489          RTS
00001D48                          1490  LSR_MEM:
00001D48  43F9 00001E2D           1491          LEA         LSR_MSG, A1
00001D4E  103C 000E               1492          MOVE.B      #14, D0
00001D52  4E4F                    1493          TRAP        #15 
00001D54  43F9 000027B3           1494          LEA         SPACE_MSG, A1
00001D5A  103C 000E               1495          MOVE.B      #14, D0
00001D5E  4E4F                    1496          TRAP        #15 
00001D60  4EB9 00001EE8           1497          JSR         EA_GENERIC
00001D66  4E75                    1498          RTS        
00001D68                          1499  ROR_MEM:
00001D68  43F9 00001E35           1500          LEA         ROR_MSG, A1
00001D6E  103C 000E               1501          MOVE.B      #14, D0
00001D72  4E4F                    1502          TRAP        #15        
00001D74  43F9 000027B3           1503          LEA         SPACE_MSG, A1
00001D7A  103C 000E               1504          MOVE.B      #14, D0
00001D7E  4E4F                    1505          TRAP        #15      
00001D80  4EB9 00001EE8           1506          JSR         EA_GENERIC        
00001D86  4E75                    1507          RTS
00001D88                          1508  
00001D88                          1509  
00001D88                          1510  
00001D88= 41 44 44 51 00          1511  ADDQ_MSG:       DC.B        'ADDQ',0
00001D8D= 53 55 42 51 00          1512  SUBQ_MSG:       DC.B        'SUBQ',0
00001D92= 4D 4F 56 45 00          1513  MOVE_MSG:       DC.B        'MOVE',0
00001D97= 4D 4F 56 45 41 00       1514  MOVEA_MSG:      DC.B        'MOVEA',0
00001D9D= 4F 52 49 00             1515  ORI_MSG:        DC.B        'ORI',0
00001DA1= 41 4E 44 49 00          1516  ANDI_MSG:       DC.B        'ANDI',0
00001DA6= 53 55 42 49 00          1517  SUBI_MSG:       DC.B        'SUBI',0
00001DAB= 41 44 44 49 00          1518  ADDI_MSG:       DC.B        'ADDI',0
00001DB0= 45 4F 52 49 00          1519  EORI_MSG:       DC.B        'EORI',0
00001DB5= 43 4D 50 49 00          1520  CMPI_MSG:       DC.B        'CMPI',0
00001DBA= 4E 4F 50 00             1521  NOP_MSG:        DC.B        'NOP',0
00001DBE= 43 4C 52 00             1522  CLR_MSG:        DC.B        'CLR',0
00001DC2= 4E 4F 54 00             1523  NOT_MSG:        DC.B        'NOT',0
00001DC6= 45 58 54 00             1524  EXT_MSG:        DC.B        'EXT',0
00001DCA= 53 54 4F 50 00          1525  STOP_MSG:        DC.B        'STOP',0
00001DCF= 52 54 45 00             1526  RTE_MSG:        DC.B        'RTE',0
00001DD3= 52 54 53 00             1527  RTS_MSG:        DC.B        'RTS',0
00001DD7= 4D 4F 56 45 4D 00       1528  MOVEM_MSG:      DC.B        'MOVEM',0
00001DDD= 4C 45 41 00             1529  LEA_MSG:        DC.B        'LEA',0
00001DE1= 4A 53 52 00             1530  JSR_MSG:        DC.B        'JSR',0
00001DE5= 4A 4D 50 00             1531  JMP_MSG:        DC.B        'JMP',0
00001DE9= 42 52 41 00             1532  BRA_MSG:        DC.B        'BRA',0
00001DED= 42 53 52 00             1533  BSR_MSG:        DC.B        'BSR',0
00001DF1= 42 45 51 00             1534  BEQ_MSG:        DC.B        'BEQ',0
00001DF5= 4D 4F 56 45 51 20 00    1535  MOVEQ_MSG:      DC.B        'MOVEQ ',0
00001DFC= 44 49 56 55 00          1536  DIVU_MSG:       DC.B        'DIVU',0
00001E01= 44 49 56 53 00          1537  DIVS_MSG:       DC.B        'DIVS',0
00001E06= 53 55 42 00             1538  SUB_MSG:        DC.B        'SUB',0
00001E0A= 43 4D 50 00             1539  CMP_MSG:        DC.B        'CMP',0
00001E0E= 4D 55 4C 55 00          1540  MULU_MSG:       DC.B        'MULU',0
00001E13= 4D 55 4C 53 00          1541  MULS_MSG:       DC.B        'MULS',0
00001E18= 41 44 44 00             1542  ADD_MSG:        DC.B        'ADD',0
00001E1C= 41 44 44 41 00          1543  ADDA_MSG:       DC.B        'ADDA',0
00001E21= 41 53 4C 00             1544  ASL_MSG:        DC.B        'ASL',0
00001E25= 41 53 52 00             1545  ASR_MSG:        DC.B        'ASR',0
00001E29= 4C 53 4C 00             1546  LSL_MSG:        DC.B        'LSL',0
00001E2D= 4C 53 52 00             1547  LSR_MSG:        DC.B        'LSR',0
00001E31= 52 4F 4C 00             1548  ROL_MSG:        DC.B        'ROL',0
00001E35= 52 4F 52 00             1549  ROR_MSG:        DC.B        'ROR',0
00001E39= 4F 52 00                1550  OR_MSG:         DC.B        'OR',0
00001E3C= 45 4F 52 00             1551  EOR_MSG:        DC.B        'EOR',0
00001E40= 41 4E 44 00             1552  AND_MSG:        DC.B        'AND',0
00001E44= 54 52 41 50 00          1553  TRAP_MSG:       DC.B        'TRAP',0
00001E49                          1554  
00001E49= 23 00                   1555  POUND:          DC.B        '#',0
00001E4B= 24 00                   1556  DOLLAR:         DC.B        '$',0
00001E4D= 25 00                   1557  PERCENT:        DC.B        '%',0
00001E4F                          1558  
00001E4F                          1559  ; Size messages
00001E4F                          1560  
00001E4F= 2E 42 00                1561  BYTE_MSG:       DC.B        '.B',0
00001E52= 2E 57 00                1562  WORD_MSG:       DC.B        '.W',0
00001E55= 2E 4C 00                1563  LONG_MSG:       DC.B        '.L',0
00001E58= 4E 6F 74 20 41 20 ...   1564  ERROR_OP_MSG:   DC.B        'Not A valid OP code',0
00001E6C= 4F 50 20 63 6F 64 ...   1565  IMPLEMENT_MSG:  DC.B        'OP code not implemented yet',0
00001E88= 49 4E 56 41 4C 49 ...   1566  ERROR_INSTR:    DC.B        'INVALID OP-CODE',0
00001E98= 49 4E 56 41 4C 49 ...   1567  ERROR_SIZE_MSG: DC.B        'INVALIDE OP-CODE SIZE',0
00001EAE                          1568  
00001EAE                          1569  
00001EAE                          1570  
00001EAE                          1571  
00001EAE                          1572  
00001EAE                          1573  
00001EAE                          1574  
00001EAE                          1575  
00001EAE                          1576  
00001EAE                          1577  
00001EAE                          1578  
00001EAE                          1579  
00001EAE                          1580  
00001EAE                          1581  
00001EAE                          1582  
00001EAE                          1583  
00001EAE                          1584  
00001EAE                          1585  
00001EAE                          1586  
00001EAE                          1587  
00001EAE                          1588  
00001EAE                          1589  
00001EAE                          1590  
00001EAE                          1591  
00001EAE                          1592  
00001EAE                          1593  
00001EAE                          1594  
00001EAE                          1595  -------------------- end include --------------------
00001EAE                          1596  
00001EAE                          1597                  INCLUDE     'Disassembler_EA_Codes.x68'
00001EAE                          1598  
00001EAE                          1599  
00001EAE                          1600  ; D3 = OP size. ie. Byte, Word, Long
00001EAE                          1601  ; D4 = Original hex code
00001EAE                          1602  ; D5 = Current Mode being isolated
00001EAE                          1603  ; D6 = Current Register being isolated
00001EAE                          1604  
00001EAE                          1605  ; A3 will store starting address
00001EAE                          1606  ; A4 will store ending address
00001EAE                          1607  
00001EAE                          1608  
00001EAE                          1609  
00001EAE                          1610  ; based on the size of the move operation Print out an amount of data as is.
00001EAE                          1611  ; MOVE.B will print out the operation and 1 additional Byte after the OP code as text.
00001EAE                          1612  EA_MOVE:
00001EAE  4285                    1613          CLR.L       D5
00001EB0  4286                    1614          CLR.L       D6
00001EB2  4EB8 1656               1615          JSR         Bits5to3
00001EB6  1A02                    1616          MOVE.B      D2, D5
00001EB8  4EB8 163E               1617          JSR         Bits2to0
00001EBC  1C02                    1618          MOVE.B      D2, D6
00001EBE  4EB9 00002304           1619          JSR         MODE_TABLE
00001EC4                          1620          
00001EC4  43F9 0000268E           1621          LEA         SEPERATOR, A1
00001ECA  103C 000E               1622          MOVE.B      #14, D0
00001ECE  4E4F                    1623          TRAP        #15
00001ED0                          1624          
00001ED0  4285                    1625          CLR.L       D5
00001ED2  4286                    1626          CLR.L       D6
00001ED4                          1627  
00001ED4  4EB8 16AE               1628          JSR         Bits8to6
00001ED8  1A02                    1629          MOVE.B      D2, D5
00001EDA  4EB8 16DE               1630          JSR         Bits11to9
00001EDE  1C02                    1631          MOVE.B      D2, D6
00001EE0  4EB9 00002304           1632          JSR         MODE_TABLE
00001EE6                          1633          
00001EE6  4E75                    1634          RTS
00001EE8                          1635          
00001EE8                          1636  EA_GENERIC:
00001EE8                          1637      
00001EE8  4EB8 1656               1638          JSR         Bits5to3
00001EEC  1A02                    1639          MOVE.B      D2, D5
00001EEE  4EB8 163E               1640          JSR         Bits2to0
00001EF2  1C02                    1641          MOVE.B      D2, D6
00001EF4  4EB9 00002304           1642          JSR         MODE_TABLE
00001EFA                          1643  
00001EFA  4E75                    1644          RTS
00001EFC                          1645          
00001EFC                          1646          ; #data, ea
00001EFC                          1647  DATASRC_EA:
00001EFC                          1648          
00001EFC  4EB9 000023D0           1649          JSR         J_ABS_TABLE
00001F02                          1650          
00001F02                          1651          ; Print Out ", "
00001F02  43F9 0000268E           1652          LEA         SEPERATOR, A1
00001F08  103C 000E               1653          MOVE.B      #14, D0
00001F0C  4E4F                    1654          TRAP        #15
00001F0E                          1655          
00001F0E  4EB8 1EE8               1656          JSR         EA_GENERIC
00001F12                          1657          
00001F12  4E75                    1658          RTS
00001F14                          1659          
00001F14                          1660  ABS_DATASRC_EA:
00001F14                          1661  
00001F14  4EB9 00002460           1662          JSR         DATA_TABLE
00001F1A                          1663          
00001F1A                          1664          ; Print Out ", "
00001F1A  43F9 0000268E           1665          LEA         SEPERATOR, A1
00001F20  103C 000E               1666          MOVE.B      #14, D0
00001F24  4E4F                    1667          TRAP        #15
00001F26                          1668          
00001F26  4EB8 1EE8               1669          JSR         EA_GENERIC
00001F2A                          1670  
00001F2A                          1671  
00001F2A                          1672  
00001F2A  4E75                    1673          RTS        
00001F2C                          1674  
00001F2C                          1675  
00001F2C                          1676          
00001F2C                          1677  REVERSESRC_EA:
00001F2C                          1678      
00001F2C  4EB8 1EE8               1679          JSR         EA_GENERIC
00001F30  43F9 0000268E           1680          LEA         SEPERATOR, A1
00001F36  103C 000E               1681          MOVE.B      #14, D0
00001F3A  4E4F                    1682          TRAP        #15
00001F3C                          1683          
00001F3C  4EB8 16DE               1684          JSR         Bits11to9
00001F40  1C02                    1685          MOVE.B      D2, D6
00001F42  4EB9 00002304           1686          JSR         MODE_TABLE
00001F48  4E75                    1687          RTS        
00001F4A                          1688  EA_ADD:
00001F4A  4EB8 1EE8               1689          JSR         EA_GENERIC
00001F4E  43F9 0000268E           1690          LEA         SEPERATOR, A1
00001F54  103C 000E               1691          MOVE.B      #14, D0
00001F58  4E4F                    1692          TRAP        #15
00001F5A                          1693  
00001F5A  4EB8 16DE               1694          JSR         Bits11to9
00001F5E  1C02                    1695          MOVE.B      D2, D6
00001F60  4EB8 16AE               1696          JSR         Bits8to6
00001F64  1A02                    1697          MOVE.B      D2, D5
00001F66                          1698          
00001F66  4EB9 00002304           1699          JSR         MODE_TABLE
00001F6C  4E75                    1700          RTS  
00001F6E                          1701          
00001F6E                          1702          
00001F6E                          1703          
00001F6E                          1704          ; ea, A source
00001F6E                          1705  EA_ASRC:
00001F6E  4EB8 1EE8               1706          JSR         EA_GENERIC
00001F72                          1707          
00001F72                          1708          ; Print Out ", "
00001F72  43F9 0000268E           1709          LEA         SEPERATOR, A1
00001F78  103C 000E               1710          MOVE.B      #14, D0
00001F7C  4E4F                    1711          TRAP        #15
00001F7E                          1712  
00001F7E  1A3C 0001               1713          MOVE.B      #1, D5
00001F82  4EB8 16DE               1714          JSR         Bits11to9
00001F86  1C02                    1715          MOVE.B      D2, D6
00001F88                          1716          
00001F88  4EB9 00002304           1717          JSR         MODE_TABLE
00001F8E                          1718  
00001F8E  4E75                    1719          RTS
00001F90                          1720          ; ea, D source
00001F90                          1721  EA_DSRC:
00001F90  4EB8 1EE8               1722          JSR         EA_GENERIC
00001F94                          1723          
00001F94                          1724          ; Print Out ", "
00001F94  43F9 0000268E           1725          LEA         SEPERATOR, A1
00001F9A  103C 000E               1726          MOVE.B      #14, D0
00001F9E  4E4F                    1727          TRAP        #15
00001FA0                          1728  
00001FA0  1A3C 0000               1729          MOVE.B      #0, D5
00001FA4  4EB8 16DE               1730          JSR         Bits11to9
00001FA8  1C02                    1731          MOVE.B      D2, D6
00001FAA                          1732          
00001FAA  4EB9 00002304           1733          JSR         MODE_TABLE
00001FB0                          1734  
00001FB0  4E75                    1735          RTS
00001FB2                          1736  ;EA_AS_MEM:
00001FB2                          1737  
00001FB2                          1738  ;        JSR         Bits5to3
00001FB2                          1739  ;        MOVE.B      D2, D5
00001FB2                          1740  ;        JSR         ASD_MEM_MODE_CHECK
00001FB2                          1741  ;        MOVE.B      D2, D6
00001FB2                          1742  ;        JSR         MODE_TABLE
00001FB2                          1743  
00001FB2                          1744  ;        RTS
00001FB2                          1745  
00001FB2                          1746  
00001FB2                          1747          
00001FB2                          1748  EA_AS:
00001FB2                          1749  
00001FB2  4EB8 16FA               1750          JSR         Bit5
00001FB6  B43C 0000               1751          CMP.B       #0, D2
00001FBA  6700 0008               1752          BEQ         AS_COUNT
00001FBE                          1753          
00001FBE  6000 0042               1754          BRA         AS_REGISTER
00001FC2                          1755          
00001FC2  4E75                    1756          RTS    
00001FC4                          1757          
00001FC4                          1758  AS_COUNT:
00001FC4  43F9 00002690           1759          LEA         POUND_MSG, A1
00001FCA  103C 000E               1760          MOVE.B      #14, D0    
00001FCE  4E4F                    1761          TRAP        #15
00001FD0  4EB8 16DE               1762          JSR         Bits11to9
00001FD4  B43C 0000               1763          CMP.B       #0, D2
00001FD8  6700 030C               1764          BEQ         AS_FIX
00001FDC  1C02                    1765          MOVE.B      D2, D6
00001FDE  4EB9 000023C6           1766          JSR         DISPLAY_REG
00001FE4                          1767          
00001FE4  43F9 0000268E           1768          LEA         SEPERATOR, A1
00001FEA  103C 000E               1769          MOVE.B      #14, D0
00001FEE  4E4F                    1770          TRAP        #15
00001FF0                          1771          
00001FF0  1A3C 0000               1772          MOVE.B      #0, D5
00001FF4  4EB8 163E               1773          JSR         Bits2to0
00001FF8  1C02                    1774          MOVE.B      D2, D6
00001FFA                          1775          
00001FFA  4EB9 00002304           1776          JSR         MODE_TABLE
00002000                          1777  
00002000                          1778  
00002000  4E75                    1779          RTS
00002002                          1780          
00002002                          1781  AS_REGISTER:
00002002                          1782  
00002002  43F9 00002678           1783          LEA         MODE_0_MSG, A1
00002008  103C 000E               1784          MOVE.B      #14, D0    
0000200C  4E4F                    1785          TRAP        #15
0000200E  4EB8 16DE               1786          JSR         Bits11to9
00002012  B43C 0000               1787          CMP.B       #0, D2
00002016  6700 02CE               1788          BEQ         AS_FIX
0000201A  1C02                    1789          MOVE.B      D2, D6
0000201C  4EB9 000023C6           1790          JSR         DISPLAY_REG
00002022                          1791  
00002022  43F9 0000268E           1792          LEA         SEPERATOR, A1
00002028  103C 000E               1793          MOVE.B      #14, D0
0000202C  4E4F                    1794          TRAP        #15
0000202E                          1795          
0000202E  1A3C 0000               1796          MOVE.B      #0, D5
00002032  4EB8 163E               1797          JSR         Bits2to0
00002036  1C02                    1798          MOVE.B      D2, D6
00002038                          1799          
00002038  4EB9 00002304           1800          JSR         MODE_TABLE
0000203E                          1801  
0000203E  4E75                    1802          RTS 
00002040                          1803      
00002040                          1804  EA_MOVEM:
00002040  2404                    1805          MOVE.L      D4, D2
00002042  0802 000A               1806          BTST        #10,D2 
00002046  6700 0008               1807          BEQ         MOVEM_REG
0000204A  6000 0038               1808          BRA         MOVEM_SRC
0000204E                          1809  
0000204E  4E75                    1810          RTS
00002050                          1811          ; D, A
00002050                          1812  MOVEM_REG:
00002050  43F9 000027B3           1813          LEA         SPACE_MSG, A1
00002056  103C 000E               1814          MOVE.B      #14, D0
0000205A  4E4F                    1815          TRAP        #15
0000205C  4283                    1816          CLR.L       D3
0000205E  4285                    1817          CLR.L       D5
00002060  4286                    1818          CLR.L       D6
00002062  4287                    1819          CLR.L       D7
00002064                          1820          
00002064  341B                    1821          MOVE.W      (A3)+, D2
00002066  4EB9 000020B8           1822          JSR         MOVEM_START
0000206C                          1823          ; Print Out ", "
0000206C  43F9 0000268E           1824          LEA         SEPERATOR, A1
00002072  103C 000E               1825          MOVE.B      #14, D0
00002076  4E4F                    1826          TRAP        #15
00002078                          1827          
00002078  4EB8 170A               1828          JSR         Bit6
0000207C  1602                    1829          MOVE.B      D2, D3
0000207E                          1830          
0000207E                          1831          
0000207E  4EB8 1EE8               1832          JSR         EA_GENERIC
00002082  4E75                    1833          RTS
00002084                          1834          ; A, D
00002084                          1835  MOVEM_SRC:
00002084                          1836  
00002084  4EB8 170A               1837          JSR         Bit6
00002088  1602                    1838          MOVE.B      D2, D3
0000208A                          1839  
0000208A  4EB8 1EE8               1840          JSR         EA_GENERIC
0000208E                          1841          ; Print Out ", "
0000208E  43F9 0000268E           1842          LEA         SEPERATOR, A1
00002094  103C 000E               1843          MOVE.B      #14, D0
00002098  4E4F                    1844          TRAP        #15
0000209A  43F9 000027B3           1845          LEA         SPACE_MSG, A1
000020A0  103C 000E               1846          MOVE.B      #14, D0
000020A4  4E4F                    1847          TRAP        #15
000020A6  4283                    1848          CLR.L       D3
000020A8  4285                    1849          CLR.L       D5
000020AA  4286                    1850          CLR.L       D6
000020AC  4287                    1851          CLR.L       D7
000020AE                          1852          
000020AE  341B                    1853          MOVE.W      (A3)+, D2
000020B0  4EB9 000020B8           1854          JSR         MOVEM_START
000020B6                          1855  
000020B6  4E75                    1856          RTS        
000020B8                          1857  
000020B8                          1858  
000020B8                          1859  MOVEM_START:
000020B8  163C 0004               1860          MOVE.B      #4, D3
000020BC  4285                    1861          CLR.L       D5
000020BE  4286                    1862          CLR.L       D6
000020C0  4287                    1863          CLR.L       D7
000020C2  4EB9 000020CA           1864          JSR         MOVEM_LOOP
000020C8  4E75                    1865          RTS
000020CA                          1866          
000020CA                          1867  ; D5 helps identify reg out of group
000020CA                          1868  ; D6 helps identify Group out of word
000020CA                          1869  ; D7 keeps track of the number of reg's    
000020CA                          1870  MOVEM_LOOP:
000020CA                          1871  
000020CA  B63C 0000               1872          CMP.B       #0, D3
000020CE  6700 002C               1873          BEQ         MOVEM_DONE
000020D2  5343                    1874          SUB         #1, D3
000020D4                          1875  
000020D4                          1876  
000020D4  1A02                    1877          MOVE.B      D2, D5
000020D6  E882                    1878          ASR.L       #4, D2
000020D8                          1879          
000020D8  BA3C 0001               1880          CMP.B       #1, D5
000020DC  6700 0020               1881          BEQ         MOVEM_0
000020E0  BA3C 0002               1882          CMP.B       #2, D5
000020E4  6700 0020               1883          BEQ         MOVEM_1
000020E8  BA3C 0004               1884          CMP.B       #4, D5
000020EC  6700 0020               1885          BEQ         MOVEM_2
000020F0  BA3C 0008               1886          CMP.B       #8, D5
000020F4  6700 0020               1887          BEQ         MOVEM_3
000020F8                          1888          
000020F8  5246                    1889          ADD         #1, D6
000020FA  60CE                    1890          BRA         MOVEM_LOOP
000020FC                          1891  
000020FC                          1892  
000020FC                          1893  MOVEM_DONE
000020FC  4E75                    1894          RTS 
000020FE                          1895         
000020FE                          1896  MOVEM_0:
000020FE  1A3C 0000               1897          MOVE.B      #0, D5   
00002102  6000 001A               1898          BRA         MOVEM_CHECK_PRINT
00002106                          1899  MOVEM_1:
00002106  1A3C 0001               1900          MOVE.B      #1, D5   
0000210A  6000 0012               1901          BRA         MOVEM_CHECK_PRINT
0000210E                          1902  MOVEM_2:
0000210E  1A3C 0002               1903          MOVE.B      #2, D5   
00002112  6000 000A               1904          BRA         MOVEM_CHECK_PRINT        
00002116                          1905  MOVEM_3:
00002116  1A3C 0003               1906          MOVE.B      #3, D5   
0000211A  6000 0002               1907          BRA         MOVEM_CHECK_PRINT
0000211E                          1908  
0000211E                          1909  MOVEM_CHECK_PRINT:
0000211E  BE3C 0000               1910          CMP.B       #0, D7
00002122  6600 0006               1911          BNE         MOVEM_DIVISOR
00002126  6000 0012               1912          BRA         MOVEM_PRINT_MODE        
0000212A                          1913  
0000212A                          1914  MOVEM_DIVISOR:
0000212A  43F9 0000268C           1915          LEA         DIVISOR_MSG, A1
00002130  103C 000E               1916          MOVE.B      #14, D0    
00002134  4E4F                    1917          TRAP        #15
00002136  6000 0002               1918          BRA         MOVEM_PRINT_MODE
0000213A                          1919  
0000213A                          1920  
0000213A                          1921  MOVEM_PRINT_MODE:        
0000213A  5247                    1922          ADD         #1, D7
0000213C                          1923  
0000213C  BC3C 0000               1924          CMP.B       #0, D6
00002140  6700 0016               1925          BEQ         MOVEM_MODE0
00002144  BC3C 0001               1926          CMP.B       #1, D6
00002148  6700 0028               1927          BEQ         MOVEM_MODE1
0000214C  BC3C 0002               1928          CMP.B       #2, D6
00002150  6700 003C               1929          BEQ         MOVEM_MODE2
00002154  6000 0052               1930          BRA         MOVEM_MODE3
00002158                          1931          
00002158                          1932          
00002158                          1933  MOVEM_MODE0:
00002158  43F9 00002674           1934          LEA         MOVEM0_MSG, A1
0000215E  103C 000E               1935          MOVE.B      #14, D0    
00002162  4E4F                    1936          TRAP        #15
00002164  1205                    1937          MOVE.B      D5, D1
00002166  103C 0003               1938          MOVE.B      #$3, D0
0000216A  4E4F                    1939          TRAP        #15
0000216C  5246                    1940          ADD         #1, D6
0000216E                          1941          
0000216E  6000 FF5A               1942          BRA         MOVEM_LOOP
00002172                          1943  MOVEM_MODE1:
00002172  5845                    1944          ADD         #4, D5
00002174  43F9 00002674           1945          LEA         MOVEM0_MSG, A1
0000217A  103C 000E               1946          MOVE.B      #14, D0    
0000217E  4E4F                    1947          TRAP        #15
00002180  1205                    1948          MOVE.B      D5, D1
00002182  103C 0003               1949          MOVE.B      #$3, D0
00002186  4E4F                    1950          TRAP        #15
00002188  5246                    1951          ADD         #1, D6
0000218A                          1952          
0000218A  6000 FF3E               1953          BRA         MOVEM_LOOP        
0000218E                          1954  MOVEM_MODE2:
0000218E  43F9 00002676           1955          LEA         MOVEM1_MSG, A1
00002194  103C 000E               1956          MOVE.B      #14, D0    
00002198  4E4F                    1957          TRAP        #15
0000219A  1205                    1958          MOVE.B      D5, D1
0000219C  103C 0003               1959          MOVE.B      #$3, D0
000021A0  4E4F                    1960          TRAP        #15
000021A2  5246                    1961          ADD         #1, D6
000021A4                          1962          
000021A4  6000 FF24               1963          BRA         MOVEM_LOOP       
000021A8                          1964   
000021A8                          1965  MOVEM_MODE3:
000021A8  5845                    1966          ADD         #4, D5
000021AA  43F9 00002676           1967          LEA         MOVEM1_MSG, A1
000021B0  103C 000E               1968          MOVE.B      #14, D0    
000021B4  4E4F                    1969          TRAP        #15
000021B6  1205                    1970          MOVE.B      D5, D1
000021B8  103C 0003               1971          MOVE.B      #$3, D0
000021BC  4E4F                    1972          TRAP        #15
000021BE  5246                    1973          ADD         #1, D6
000021C0                          1974          
000021C0  6000 FF08               1975          BRA         MOVEM_LOOP 
000021C4                          1976         
000021C4                          1977         
000021C4                          1978  EA_BRA:
000021C4                          1979  
000021C4  4EB8 1676               1980          JSR         Bits7to0
000021C8  B43C 0000               1981          CMP.B       #0, D2
000021CC  6700 0042               1982          BEQ         BRA_WORD
000021D0  B43C 00FF               1983          CMP.B       #$FF, D2
000021D4  6700 006E               1984          BEQ         BRA_LONG
000021D8                          1985          
000021D8  6000 0004               1986          BRA         BRA_BYTE
000021DC                          1987  
000021DC  4E75                    1988          RTS
000021DE                          1989  
000021DE                          1990  BRA_BYTE:
000021DE                          1991          
000021DE                          1992          
000021DE  43F9 000027B3           1993          LEA         SPACE_MSG, A1
000021E4  103C 000E               1994          MOVE.B      #14, D0
000021E8  4E4F                    1995          TRAP        #15
000021EA  43F9 0000269F           1996          LEA         DOLLAR_MSG, A1
000021F0  103C 000E               1997          MOVE.B      #14, D0
000021F4  4E4F                    1998          TRAP        #15
000021F6                          1999  
000021F6  2A0B                    2000          MOVE.L      A3, D5
000021F8  3C02                    2001          MOVE.W      D2, D6
000021FA                          2002          ; ADD.L       D5, D6
000021FA                          2003  
000021FA  2406                    2004          MOVE.L      D6, D2
000021FC  4EB8 1168               2005          JSR         FLIP_START
00002200                          2006          
00002200  4847                    2007          SWAP        D7
00002202                          2008          
00002202  4282                    2009          CLR.L       D2
00002204  123C 0004               2010          MOVE.B      #4, D1
00002208  4EB9 000024DA           2011          JSR         CONVERT_HEX
0000220E  4E75                    2012          RTS
00002210                          2013  
00002210                          2014  BRA_WORD:
00002210  43F9 000027B3           2015          LEA         SPACE_MSG, A1
00002216  103C 000E               2016          MOVE.B      #14, D0
0000221A  4E4F                    2017          TRAP        #15
0000221C  43F9 0000269F           2018          LEA         DOLLAR_MSG, A1
00002222  103C 000E               2019          MOVE.B      #14, D0
00002226  4E4F                    2020          TRAP        #15
00002228                          2021  
00002228  2A0B                    2022          MOVE.L      A3, D5
0000222A  3C1B                    2023          MOVE.W      (A3)+, D6
0000222C  DC85                    2024          ADD.L       D5, D6
0000222E                          2025  
0000222E  2406                    2026          MOVE.L      D6, D2
00002230  4EB8 1168               2027          JSR         FLIP_START
00002234                          2028          
00002234  4847                    2029          SWAP        D7
00002236                          2030          
00002236  4282                    2031          CLR.L       D2
00002238  123C 0004               2032          MOVE.B      #4, D1
0000223C  4EB9 000024DA           2033          JSR         CONVERT_HEX
00002242                          2034  
00002242  4E75                    2035          RTS
00002244                          2036  BRA_LONG:
00002244                          2037  
00002244  43F9 000027B3           2038          LEA         SPACE_MSG, A1
0000224A  103C 000E               2039          MOVE.B      #14, D0
0000224E  4E4F                    2040          TRAP        #15
00002250  43F9 0000269F           2041          LEA         DOLLAR_MSG, A1
00002256  103C 000E               2042          MOVE.B      #14, D0
0000225A  4E4F                    2043          TRAP        #15
0000225C                          2044  
0000225C  2A0B                    2045          MOVE.L      A3, D5
0000225E  3C1B                    2046          MOVE.W      (A3)+, D6
00002260  DC85                    2047          ADD.L       D5, D6
00002262                          2048  
00002262  2406                    2049          MOVE.L      D6, D2
00002264  4EB8 1168               2050          JSR         FLIP_START
00002268                          2051          
00002268  4847                    2052          SWAP        D7
0000226A                          2053          
0000226A  4282                    2054          CLR.L       D2
0000226C  123C 0008               2055          MOVE.B      #8, D1
00002270  4EB9 000024DA           2056          JSR         CONVERT_HEX
00002276                          2057         
00002276                          2058         
00002276                          2059          
00002276                          2060  EA_MOVEQ:
00002276                          2061  
00002276                          2062          
00002276  1404                    2063          MOVE.B      D4, D2
00002278                          2064          
00002278  43F9 0000269B           2065          LEA         DATA_MSG, A1
0000227E  103C 000E               2066          MOVE.B      #14, D0    
00002282  4E4F                    2067          TRAP        #15
00002284                          2068  
00002284  4EB8 1168               2069          JSR         FLIP_START
00002288                          2070          
00002288                          2071  
00002288  4847                    2072          SWAP        D7
0000228A  123C 0008               2073          MOVE.B      #8, D1
0000228E  E26F                    2074          LSR.W       D1, D7
00002290  123C 0002               2075          MOVE.B      #2, D1
00002294                          2076          
00002294  4EB9 000024DA           2077          JSR         CONVERT_HEX
0000229A                          2078          
0000229A                          2079          ; Print Out ", "
0000229A  43F9 0000268E           2080          LEA         SEPERATOR, A1
000022A0  103C 000E               2081          MOVE.B      #14, D0
000022A4  4E4F                    2082          TRAP        #15
000022A6                          2083  
000022A6  1A3C 0000               2084          MOVE.B      #0, D5
000022AA  4EB8 16DE               2085          JSR         Bits11to9
000022AE  1C02                    2086          MOVE.B      D2, D6
000022B0                          2087  
000022B0  4EB9 00002304           2088          JSR         MODE_TABLE
000022B6                          2089  
000022B6  4E75                    2090          RTS
000022B8                          2091  
000022B8                          2092  EA_ADDQ:
000022B8                          2093  
000022B8  123C 0001               2094          MOVE.B      #1, D1
000022BC  4EB8 16DE               2095          JSR         Bits11to9
000022C0  1E02                    2096          MOVE.B      D2, D7
000022C2                          2097          
000022C2  43F9 0000269B           2098          LEA         DATA_MSG, A1
000022C8  103C 000E               2099          MOVE.B      #14, D0    
000022CC  4E4F                    2100          TRAP        #15
000022CE                          2101  
000022CE  4EB9 000024DA           2102          JSR         CONVERT_HEX
000022D4                          2103  
000022D4                          2104          ; Print Out ", "
000022D4  43F9 0000268E           2105          LEA         SEPERATOR, A1
000022DA  103C 000E               2106          MOVE.B      #14, D0
000022DE  4E4F                    2107          TRAP        #15
000022E0                          2108          
000022E0  4EB8 1EE8               2109          JSR         EA_GENERIC
000022E4                          2110  
000022E4  4E75                    2111          RTS        
000022E6                          2112  
000022E6                          2113  AS_FIX:
000022E6  143C 0008               2114          MOVE.B      #8, D2
000022EA  4E75                    2115          RTS
000022EC                          2116          
000022EC                          2117  ; X+Y = Effective addressing
000022EC                          2118  ; XXX = Mode
000022EC                          2119  ; YYY = Register
000022EC                          2120      
000022EC                          2121  ; 0000 0000 00XX XYYY
000022EC                          2122  EA_LEA:
000022EC  4281                    2123          CLR.L       D1
000022EE  4285                    2124          CLR.L       D5
000022F0  4286                    2125          CLR.L       D6
000022F2                          2126  
000022F2  3A04                    2127          MOVE.W      D4, D5
000022F4  3C04                    2128          MOVE.W      D4, D6
000022F6                          2129  
000022F6                          2130  
000022F6                          2131          ; Print Out ", "
000022F6  43F9 0000268E           2132          LEA         SEPERATOR, A1
000022FC  103C 000E               2133          MOVE.B      #14, D0
00002300  4E4F                    2134          TRAP        #15
00002302                          2135  
00002302                          2136  
00002302  4E75                    2137          RTS
00002304                          2138  
00002304                          2139  
00002304                          2140  
00002304                          2141  ; Possible modes Dn = 0,An = 1,(An) = 2,(An)+ = 3,-(An) = 4, Absolute Data = 7
00002304                          2142  MODE_TABLE:
00002304                          2143  
00002304  BA3C 0000               2144          CMP.B       #0,D5
00002308  6700 0048               2145          BEQ         J_TBL_D
0000230C  BA3C 0001               2146          CMP.B       #1,D5
00002310  6700 002C               2147          BEQ         J_TBL_A
00002314  BA3C 0002               2148          CMP.B       #2,D5
00002318  6700 004C               2149          BEQ         J_TBL_A_P
0000231C  BA3C 0003               2150          CMP.B       #3,D5
00002320  6700 0064               2151          BEQ         J_TBL_A_INCR
00002324  BA3C 0004               2152          CMP.B       #4,D5
00002328  6700 007C               2153          BEQ         J_TBL_A_DECR
0000232C  BA3C 0007               2154          CMP.B       #7,D5
00002330  6700 0004               2155          BEQ         J_ABS
00002334                          2156          
00002334  4E75                    2157          RTS
00002336                          2158          ;   deal with errors here
00002336                          2159  
00002336                          2160  J_ABS:
00002336  4EB9 000023D0           2161          JSR         J_ABS_TABLE
0000233C  4E75                    2162          RTS
0000233E                          2163  
0000233E                          2164  J_TBL_A:
0000233E  43F9 0000267B           2165          LEA         MODE_1_MSG, A1 ; A#
00002344  103C 000E               2166          MOVE.B      #14, D0
00002348  4E4F                    2167          TRAP        #15
0000234A  4EB9 000023C6           2168          JSR         DISPLAY_REG
00002350                          2169  
00002350  4E75                    2170          RTS
00002352                          2171  
00002352                          2172  
00002352                          2173  J_TBL_D:
00002352  43F9 00002678           2174          LEA         MODE_0_MSG, A1 ; D#
00002358  103C 000E               2175          MOVE.B      #14, D0
0000235C  4E4F                    2176          TRAP        #15
0000235E  4EB9 000023C6           2177          JSR         DISPLAY_REG
00002364  4E75                    2178          RTS
00002366                          2179  
00002366                          2180  J_TBL_A_P:
00002366                          2181  
00002366  43F9 0000267E           2182          LEA         MODE_A_MSG, A1 ; (A#)
0000236C  103C 000E               2183          MOVE.B      #14, D0
00002370  4E4F                    2184          TRAP        #15
00002372  4EB9 000023C6           2185          JSR         DISPLAY_REG
00002378                          2186          
00002378  43F9 00002682           2187          LEA         MODE_A_1_MSG, A1
0000237E  103C 000E               2188          MOVE.B      #14, D0
00002382  4E4F                    2189          TRAP        #15
00002384                          2190  
00002384                          2191          
00002384  4E75                    2192          RTS
00002386                          2193      
00002386                          2194  J_TBL_A_INCR:
00002386  43F9 0000267E           2195          LEA         MODE_A_MSG, A1 ; (A#)+
0000238C  103C 000E               2196          MOVE.B      #14, D0
00002390  4E4F                    2197          TRAP        #15
00002392  4EB9 000023C6           2198          JSR         DISPLAY_REG
00002398                          2199          
00002398  43F9 00002684           2200          LEA         MODE_A_2_MSG, A1
0000239E  103C 000E               2201          MOVE.B      #14, D0
000023A2  4E4F                    2202          TRAP        #15
000023A4                          2203  
000023A4  4E75                    2204          RTS
000023A6                          2205          
000023A6                          2206  J_TBL_A_DECR:
000023A6  43F9 00002687           2207          LEA         MODE_MINUS_MSG, A1 ; -(A#)
000023AC  103C 000E               2208          MOVE.B      #14, D0
000023B0  4E4F                    2209          TRAP        #15
000023B2  4EB9 000023C6           2210          JSR         DISPLAY_REG
000023B8                          2211          
000023B8  43F9 00002682           2212          LEA         MODE_A_1_MSG, A1
000023BE  103C 000E               2213          MOVE.B      #14, D0
000023C2  4E4F                    2214          TRAP        #15
000023C4                          2215  
000023C4  4E75                    2216          RTS
000023C6                          2217          
000023C6                          2218          
000023C6                          2219  DISPLAY_REG:
000023C6  1206                    2220          MOVE.B      D6, D1
000023C8  103C 0003               2221          MOVE.B      #$3, D0
000023CC  4E4F                    2222          TRAP        #15
000023CE  4E75                    2223          RTS
000023D0                          2224  
000023D0                          2225  
000023D0                          2226  J_ABS_TABLE:
000023D0                          2227          ; SIMHALT
000023D0  BC3C 0000               2228          CMP.B       #0,D6
000023D4  6700 0014               2229          BEQ         SUBCLASS_CHECK
000023D8                          2230              
000023D8  BC3C 0001               2231          CMP.B       #1,D6
000023DC  6700 000C               2232          BEQ         SUBCLASS_CHECK
000023E0                          2233              
000023E0  BC3C 0004               2234          CMP.B       #4,D6
000023E4  6700 007A               2235          BEQ         DATA_TABLE
000023E8                          2236              
000023E8  4E75                    2237          RTS
000023EA                          2238          
000023EA                          2239  SUBCLASS_CHECK:
000023EA  2C4B                    2240          MOVE.L      A3, A6
000023EC  221B                    2241          MOVE.L      (A3)+, D1
000023EE  264E                    2242          MOVE.L      A6, A3
000023F0  2C7C 00000000           2243          MOVE.L      #0, A6
000023F6                          2244          
000023F6  4841                    2245          SWAP        D1
000023F8                          2246          
000023F8  B27C 0000               2247          CMP.W       #0, D1
000023FC  6700 0006               2248          BEQ         J_SUBCLASS_0
00002400  6000 002A               2249          BRA         J_SUBCLASS_1
00002404                          2250  
00002404                          2251          
00002404                          2252  J_SUBCLASS_0:
00002404  43F9 0000269F           2253          LEA         DOLLAR_MSG, A1
0000240A  103C 000E               2254          MOVE.B      #14, D0
0000240E  4E4F                    2255          TRAP        #15
00002410                          2256         
00002410  4281                    2257          CLR.L       D1
00002412  4282                    2258          CLR.L       D2
00002414  4287                    2259          CLR.L       D7
00002416  241B                    2260          MOVE.L      (A3)+, D2
00002418                          2261          
00002418                          2262  
00002418  4EB8 1168               2263          JSR         FLIP_START
0000241C                          2264  
0000241C  4282                    2265          CLR.L       D2
0000241E  4847                    2266          SWAP        D7
00002420                          2267  
00002420  123C 0004               2268          MOVE.B      #4, D1
00002424  4EB9 000024DA           2269          JSR         CONVERT_HEX
0000242A                          2270          
0000242A                          2271  
0000242A                          2272  
0000242A  4E75                    2273          RTS
0000242C                          2274  
0000242C                          2275  
0000242C                          2276  J_SUBCLASS_1:
0000242C                          2277          ; SIMHALT
0000242C  43F9 00002693           2278          LEA         SUBCLASS1_1, A1
00002432  103C 000E               2279          MOVE.B      #14, D0
00002436  4E4F                    2280          TRAP        #15
00002438                          2281  
00002438  4281                    2282          CLR.L       D1
0000243A  4282                    2283          CLR.L       D2
0000243C  4287                    2284          CLR.L       D7
0000243E                          2285  
0000243E                          2286  
0000243E                          2287          
0000243E  241B                    2288          MOVE.L      (A3)+, D2
00002440                          2289          
00002440  4EB8 1168               2290          JSR         FLIP_START
00002444                          2291  
00002444  4282                    2292          CLR.L       D2
00002446                          2293          
00002446                          2294  
00002446  123C 0008               2295          MOVE.B      #8, D1
0000244A  4EB9 000024DA           2296          JSR         CONVERT_HEX
00002450                          2297  
00002450                          2298  
00002450  43F9 00002697           2299          LEA         SUBCLASS1_2, A1
00002456  103C 000E               2300          MOVE.B      #14, D0
0000245A  4E4F                    2301          TRAP        #15
0000245C                          2302          
0000245C  4E75                    2303          RTS
0000245E                          2304  
0000245E                          2305  ;   Error
0000245E                          2306  J_ABS_ERROR:
0000245E  4E75                    2307          RTS
00002460                          2308  
00002460                          2309  ;   Hard Coded Data
00002460                          2310  ;   based on the OP code size, read the appropriate amount of data, and move pointer forward accordingly 
00002460                          2311  
00002460                          2312  ;   Size num 0 = Byte 1 = Word 2 Long
00002460                          2313  
00002460                          2314  DATA_TABLE:
00002460                          2315          ; SIMHALT
00002460  43F9 0000269B           2316          LEA         DATA_MSG, A1
00002466  103C 000E               2317          MOVE.B      #14, D0
0000246A  4E4F                    2318          TRAP        #15
0000246C                          2319  
0000246C                          2320  
0000246C  B63C 0000               2321          CMP.B       #0,D3 
00002470  6700 0014               2322          BEQ         DATA_B
00002474                          2323  
00002474  B63C 0001               2324          CMP.B       #1,D3 
00002478  6700 002A               2325          BEQ         DATA_W
0000247C                          2326          
0000247C  B63C 0002               2327          CMP.B       #2,D3 
00002480  6700 003E               2328          BEQ         DATA_L
00002484                          2329          
00002484  4E75                    2330          RTS
00002486                          2331  
00002486                          2332  DATA_B:
00002486  4281                    2333          CLR.L       D1
00002488  4282                    2334          CLR.L       D2
0000248A  4287                    2335          CLR.L       D7
0000248C                          2336          
0000248C  341B                    2337          MOVE.W      (A3)+, D2
0000248E                          2338          * Only read first byte from the word 
0000248E                          2339          
0000248E  4EB8 1168               2340          JSR         FLIP_START
00002492  4847                    2341          SWAP        D7
00002494  E09F                    2342          ROR.L       #8,D7
00002496  4282                    2343          CLR.L       D2
00002498                          2344          
00002498                          2345  
00002498  123C 0002               2346          MOVE.B      #2, D1
0000249C  4EB9 000024DA           2347          JSR         CONVERT_HEX
000024A2                          2348  
000024A2                          2349  
000024A2                          2350  
000024A2  4E75                    2351          RTS
000024A4                          2352  
000024A4                          2353  DATA_W:
000024A4  4281                    2354          CLR.L       D1
000024A6  4282                    2355          CLR.L       D2
000024A8  4287                    2356          CLR.L       D7
000024AA                          2357          
000024AA  341B                    2358          MOVE.W      (A3)+, D2
000024AC                          2359          
000024AC  4EB8 1168               2360          JSR         FLIP_START
000024B0                          2361  
000024B0  4847                    2362          SWAP        D7
000024B2                          2363  
000024B2  4282                    2364          CLR.L       D2
000024B4                          2365          
000024B4  123C 0004               2366          MOVE.B      #4, D1
000024B8                          2367          
000024B8                          2368          
000024B8  4EB9 000024DA           2369          JSR         CONVERT_HEX
000024BE                          2370  
000024BE                          2371          
000024BE                          2372  
000024BE  4E75                    2373          RTS
000024C0                          2374  
000024C0                          2375  DATA_L:
000024C0                          2376          ; SIMHALT
000024C0  4281                    2377          CLR.L       D1
000024C2  4282                    2378          CLR.L       D2
000024C4  4287                    2379          CLR.L       D7
000024C6                          2380          
000024C6  241B                    2381          MOVE.L      (A3)+, D2
000024C8                          2382          
000024C8  4EB8 1168               2383          JSR         FLIP_START
000024CC                          2384  
000024CC  4282                    2385          CLR.L       D2
000024CE                          2386          
000024CE                          2387  
000024CE  123C 0008               2388          MOVE.B      #8, D1
000024D2  4EB9 000024DA           2389          JSR         CONVERT_HEX
000024D8                          2390  
000024D8                          2391          
000024D8                          2392  
000024D8  4E75                    2393          RTS
000024DA                          2394  
000024DA                          2395  
000024DA                          2396  CONVERT_HEX:
000024DA                          2397          ; SIMHALT    
000024DA  0C01 0000               2398          CMPI.B      #$0, D1    
000024DE  6700 0092               2399          BEQ         HEX_DONE
000024E2                          2400          
000024E2  5301                    2401          SUBI.B      #$1, D1       
000024E4                          2402  
000024E4  4282                    2403          CLR.L       D2
000024E6                          2404      
000024E6  1407                    2405          MOVE.B      D7, D2
000024E8                          2406              
000024E8  103C 001C               2407          MOVE.B      #28, D0    
000024EC  E1AA                    2408          LSL.L       D0, D2     
000024EE  E99A                    2409          ROL.L       #4, D2
000024F0                          2410          
000024F0  E887                    2411          ASR.L       #4, D7
000024F2                          2412          
000024F2                          2413          
000024F2  B43C 0000               2414          CMP.B       #0,D2
000024F6  6700 007C               2415          BEQ         PRINT_ASCII0
000024FA  B43C 0001               2416          CMP.B       #1,D2
000024FE  6700 0084               2417          BEQ         PRINT_ASCII1
00002502  B43C 0002               2418          CMP.B       #2,D2
00002506  6700 008C               2419          BEQ         PRINT_ASCII2
0000250A  B43C 0003               2420          CMP.B       #3,D2
0000250E  6700 0094               2421          BEQ         PRINT_ASCII3
00002512  B43C 0004               2422          CMP.B       #4,D2
00002516  6700 009C               2423          BEQ         PRINT_ASCII4
0000251A  B43C 0005               2424          CMP.B       #5,D2
0000251E  6700 00A4               2425          BEQ         PRINT_ASCII5
00002522  B43C 0006               2426          CMP.B       #6,D2
00002526  6700 00AC               2427          BEQ         PRINT_ASCII6
0000252A  B43C 0007               2428          CMP.B       #7,D2
0000252E  6700 00B4               2429          BEQ         PRINT_ASCII7
00002532  B43C 0008               2430          CMP.B       #8,D2
00002536  6700 00BC               2431          BEQ         PRINT_ASCII8
0000253A  B43C 0009               2432          CMP.B       #9,D2
0000253E  6700 00C4               2433          BEQ         PRINT_ASCII9
00002542  B43C 000A               2434          CMP.B       #$A,D2
00002546  6700 00CC               2435          BEQ         PRINT_ASCIIA
0000254A  B43C 000B               2436          CMP.B       #$B,D2
0000254E  6700 00D4               2437          BEQ         PRINT_ASCIIB
00002552  B43C 000C               2438          CMP.B       #$C,D2
00002556  6700 00DC               2439          BEQ         PRINT_ASCIIC
0000255A  B43C 000D               2440          CMP.B       #$D,D2
0000255E  6700 00E4               2441          BEQ         PRINT_ASCIID
00002562  B43C 000E               2442          CMP.B       #$E,D2
00002566  6700 00EC               2443          BEQ         PRINT_ASCIIE
0000256A  B43C 000F               2444          CMP.B       #$F,D2
0000256E  6700 00F4               2445          BEQ         PRINT_ASCIIF
00002572                          2446          
00002572                          2447          ; error handling here
00002572                          2448          
00002572                          2449          
00002572                          2450  
00002572                          2451  HEX_DONE:
00002572  4E75                    2452          RTS
00002574                          2453  
00002574                          2454  
00002574                          2455  
00002574                          2456  PRINT_ASCII0:
00002574  43F9 000027B6           2457          LEA         ZERO_MSG, A1
0000257A  103C 000E               2458          MOVE.B      #14, D0    
0000257E  4E4F                    2459          TRAP        #15
00002580  6000 FF58               2460          BRA         CONVERT_HEX
00002584                          2461  PRINT_ASCII1:
00002584  43F9 000027B8           2462          LEA         ONE_MSG, A1
0000258A  103C 000E               2463          MOVE.B      #14, D0    
0000258E  4E4F                    2464          TRAP        #15
00002590  6000 FF48               2465          BRA         CONVERT_HEX
00002594                          2466  PRINT_ASCII2:
00002594  43F9 000027BA           2467          LEA         TWO_MSG, A1
0000259A  103C 000E               2468          MOVE.B      #14, D0    
0000259E  4E4F                    2469          TRAP        #15
000025A0  6000 FF38               2470          BRA         CONVERT_HEX
000025A4                          2471  PRINT_ASCII3:
000025A4  43F9 000027BC           2472          LEA         THREE_MSG, A1
000025AA  103C 000E               2473          MOVE.B      #14, D0    
000025AE  4E4F                    2474          TRAP        #15
000025B0  6000 FF28               2475          BRA         CONVERT_HEX
000025B4                          2476  PRINT_ASCII4:
000025B4  43F9 000027BE           2477          LEA         FOUR_MSG, A1
000025BA  103C 000E               2478          MOVE.B      #14, D0    
000025BE  4E4F                    2479          TRAP        #15
000025C0  6000 FF18               2480          BRA         CONVERT_HEX
000025C4                          2481  PRINT_ASCII5:
000025C4  43F9 000027C0           2482          LEA         FIVE_MSG, A1
000025CA  103C 000E               2483          MOVE.B      #14, D0    
000025CE  4E4F                    2484          TRAP        #15
000025D0  6000 FF08               2485          BRA         CONVERT_HEX        
000025D4                          2486  PRINT_ASCII6:
000025D4  43F9 000027C2           2487          LEA         SIX_MSG, A1
000025DA  103C 000E               2488          MOVE.B      #14, D0    
000025DE  4E4F                    2489          TRAP        #15
000025E0  6000 FEF8               2490          BRA         CONVERT_HEX
000025E4                          2491  PRINT_ASCII7:
000025E4  43F9 000027C4           2492          LEA         SEVEN_MSG, A1
000025EA  103C 000E               2493          MOVE.B      #14, D0    
000025EE  4E4F                    2494          TRAP        #15
000025F0  6000 FEE8               2495          BRA         CONVERT_HEX
000025F4                          2496  PRINT_ASCII8:
000025F4  43F9 000027C6           2497          LEA         EIGHT_MSG, A1
000025FA  103C 000E               2498          MOVE.B      #14, D0    
000025FE  4E4F                    2499          TRAP        #15
00002600  6000 FED8               2500          BRA         CONVERT_HEX
00002604                          2501  PRINT_ASCII9:
00002604  43F9 000027C8           2502          LEA         NINE_MSG, A1
0000260A  103C 000E               2503          MOVE.B      #14, D0    
0000260E  4E4F                    2504          TRAP        #15
00002610  6000 FEC8               2505          BRA         CONVERT_HEX
00002614                          2506  PRINT_ASCIIA:
00002614  43F9 000027CA           2507          LEA         A_MSG, A1
0000261A  103C 000E               2508          MOVE.B      #14, D0    
0000261E  4E4F                    2509          TRAP        #15
00002620  6000 FEB8               2510          BRA         CONVERT_HEX
00002624                          2511  PRINT_ASCIIB:
00002624  43F9 000027CC           2512          LEA         B_MSG, A1
0000262A  103C 000E               2513          MOVE.B      #14, D0    
0000262E  4E4F                    2514          TRAP        #15
00002630  6000 FEA8               2515          BRA         CONVERT_HEX
00002634                          2516  PRINT_ASCIIC:
00002634  43F9 000027CE           2517          LEA         C_MSG, A1
0000263A  103C 000E               2518          MOVE.B      #14, D0    
0000263E  4E4F                    2519          TRAP        #15
00002640  6000 FE98               2520          BRA         CONVERT_HEX
00002644                          2521  PRINT_ASCIID:
00002644  43F9 000027D0           2522          LEA         D_MSG, A1
0000264A  103C 000E               2523          MOVE.B      #14, D0    
0000264E  4E4F                    2524          TRAP        #15
00002650  6000 FE88               2525          BRA         CONVERT_HEX
00002654                          2526  PRINT_ASCIIE:
00002654  43F9 000027D2           2527          LEA         E_MSG, A1
0000265A  103C 000E               2528          MOVE.B      #14, D0    
0000265E  4E4F                    2529          TRAP        #15
00002660  6000 FE78               2530          BRA         CONVERT_HEX
00002664                          2531  PRINT_ASCIIF:
00002664  43F9 000027D4           2532          LEA         F_MSG, A1
0000266A  103C 000E               2533          MOVE.B      #14, D0    
0000266E  4E4F                    2534          TRAP        #15
00002670  6000 FE68               2535          BRA         CONVERT_HEX
00002674                          2536  
00002674                          2537  
00002674                          2538  
00002674                          2539  
00002674                          2540  
00002674= 44 00                   2541  MOVEM0_MSG:     DC.B        'D',0
00002676= 41 00                   2542  MOVEM1_MSG:     DC.B        'A',0
00002678                          2543  
00002678= 20 44 00                2544  MODE_0_MSG:     DC.B        ' D',0
0000267B= 20 41 00                2545  MODE_1_MSG:     DC.B        ' A',0
0000267E= 20 28 41 00             2546  MODE_A_MSG:     DC.B        ' (A',0
00002682= 29 00                   2547  MODE_A_1_MSG:   DC.B        ')',0
00002684= 29 2B 00                2548  MODE_A_2_MSG:   DC.B        ')+',0
00002687= 20 2D 28 41 00          2549  MODE_MINUS_MSG: DC.B        ' -(A',0
0000268C                          2550  
0000268C= 2F 00                   2551  DIVISOR_MSG:    DC.B        '/',0
0000268E                          2552  
0000268E= 2C 00                   2553  SEPERATOR:      DC.B        ',',0
00002690                          2554  
00002690= 20 23 00                2555  POUND_MSG:      DC.B        ' #',0
00002693= 20 28 24 00             2556  SUBCLASS1_1:    DC.B        ' ($',0
00002697= 29 2E 4C 00             2557  SUBCLASS1_2:    DC.B        ').L',0
0000269B= 20 23 24 00             2558  DATA_MSG:       DC.B        ' #$',0
0000269F= 24 00                   2559  DOLLAR_MSG:     DC.B        '$',0
000026A1                          2560  
000026A1= 54 4D 50 00             2561  TEMP_MSG:       DC.B        'TMP',0
000026A5                          2562  
000026A5                          2563  
000026A5                          2564  
000026A5                          2565  TMP_STR         DS.B        32
000026C5                          2566  
000026C5                          2567  
000026C5                          2568  
000026C5                          2569  
000026C5                          2570  
000026C5                          2571  
000026C5                          2572  
000026C5                          2573  
000026C5                          2574  
000026C5                          2575  
000026C5                          2576  
000026C5                          2577  -------------------- end include --------------------
000026C5                          2578                  
000026C5= 45 6E 74 65 72 20 ...   2579                  START_MSG:      DC.B        'Enter a starting address:',0
000026DF= 45 6E 74 65 72 20 ...   2580                  END_MSG:        DC.B        'Enter an ending address:',0
000026F8= 57 65 6C 63 6F 6D ...   2581  GREETING_MSG:   DC.B        'Welcome to Sarah and Leons Disassembler!',CR,LF,0
00002723= 57 6F 75 6C 64 20 ...   2582  REPEAT_MSG:     DC.B        'Would you like to restart the program? (Press enter to restart)',CR,LF,0
00002765= 54 68 61 6E 6B 20 ...   2583  GOODBYE_MSG:    DC.B        'Thank you for using Sarah and Leons Disassembler!',CR,LF,0
00002799= 54 68 65 20 61 64 ...   2584  BAD_ADDR_MSG:   DC.B        'The address is invalid.',CR,LF,0
000027B3                          2585  
000027B3                          2586                
000027B3  =0000000D               2587  CR              EQU         $0D
000027B3  =0000000A               2588  LF              EQU         $0A
000027B3                          2589  
000027B3= 20 20 00                2590  SPACE_MSG:      DC.B        '  ',0
000027B6                          2591  
000027B6= 30 00                   2592  ZERO_MSG:       DC.B        '0',0
000027B8= 31 00                   2593  ONE_MSG:        DC.B        '1',0
000027BA= 32 00                   2594  TWO_MSG:        DC.B        '2',0
000027BC= 33 00                   2595  THREE_MSG:      DC.B        '3',0
000027BE= 34 00                   2596  FOUR_MSG:       DC.B        '4',0
000027C0= 35 00                   2597  FIVE_MSG:       DC.B        '5',0
000027C2= 36 00                   2598  SIX_MSG:        DC.B        '6',0
000027C4= 37 00                   2599  SEVEN_MSG:      DC.B        '7',0
000027C6= 38 00                   2600  EIGHT_MSG:      DC.B        '8',0
000027C8= 39 00                   2601  NINE_MSG:       DC.B        '9',0
000027CA= 41 00                   2602  A_MSG:          DC.B        'A',0
000027CC= 42 00                   2603  B_MSG:          DC.B        'B',0
000027CE= 43 00                   2604  C_MSG:          DC.B        'C',0
000027D0= 44 00                   2605  D_MSG:          DC.B        'D',0
000027D2= 45 00                   2606  E_MSG:          DC.B        'E',0
000027D4= 46 00                   2607  F_MSG:          DC.B        'F',0
000027D6                          2608                  
000027D6= 45 72 72 6F 72 00       2609  ERROR_MSG:      DC.B        'Error',0
000027DC= 53 75 63 63 65 73 ...   2610  SUCCESS_MSG:    DC.B        'Success',0
000027E4                          2611  
000027E4= 0D 0A 00                2612  NEW_LINE:       DC.B        '',CR,LF,0
000027E7                          2613  
000027E7= 50 6C 65 61 73 65 ...   2614  NEXT_PAGE_MSG:  DC.B        'Please press enter to continue: ',CR,LF,0
0000280A                          2615  
0000280A                          2616    
0000280A                          2617                  
0000280A                          2618                  
0000280A                          2619  STA_ADDR        DS.B        40
00002832                          2620  END_ADDR        DS.B        40
0000285A                          2621  
0000285A                          2622  
0000285A                          2623  
0000285A                          2624  
0000285A                          2625                  
0000285A                          2626                  
0000285A                          2627          END    START    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_DATASRC_EA      1F14
ADDA_MSG            1E1C
ADDI_MSG            1DAB
ADDQ_MSG            1D88
ADD_MSG             1E18
ANDI_MSG            1DA1
AND_MSG             1E40
ASCII_DONE          1114
ASL_MEM             1CC8
ASL_MSG             1E21
ASL_REG             1C18
ASR_MEM             1D28
ASR_MSG             1E25
ASR_REG             1C60
AS_COUNT            1FC4
AS_FIX              22E6
AS_REGISTER         2002
A_MSG               27CA
BAD_ADDR_MSG        2799
BEQ_MSG             1DF1
BIT0                16EA
BIT5                16FA
BIT6                170A
BITS11TO6           16C6
BITS11TO8           16D2
BITS11TO9           16DE
BITS2TO0            163E
BITS3TO0            164A
BITS4TO3            1666
BITS5TO3            1656
BITS7TO0            1676
BITS7TO4            167E
BITS7TO6            168A
BITS8TO3            1696
BITS8TO4            16A2
BITS8TO6            16AE
BITS9TO7            16BA
BRA_BYTE            21DE
BRA_LONG            2244
BRA_MSG             1DE9
BRA_WORD            2210
BSR_MSG             1DED
BYTE_MSG            1E4F
B_MSG               27CC
CHECK_DATA          10B8
CHECK_ODD           10AA
CLEAR_ALL_REG       10C0
CLR_MSG             1DBE
CMPI_MSG            1DB5
CMP_MSG             1E0A
CONVERT_ASCII       10FC
CONVERT_HEX         24DA
CR                  D
C_MSG               27CE
DATASRC_EA          1EFC
DATA_B              2486
DATA_L              24C0
DATA_MSG            269B
DATA_TABLE          2460
DATA_W              24A4
DISPLAY_REG         23C6
DIVISOR_MSG         268C
DIVS_MSG            1E01
DIVU_MSG            1DFC
DOLLAR              1E4B
DOLLAR_MSG          269F
DONE                13BC
DONE_CHECK          139E
D_MSG               27D0
EA_ADD              1F4A
EA_ADDQ             22B8
EA_AS               1FB2
EA_ASRC             1F6E
EA_BRA              21C4
EA_DSRC             1F90
EA_GENERIC          1EE8
EA_LEA              22EC
EA_MOVE             1EAE
EA_MOVEM            2040
EA_MOVEQ            2276
EIGHT_MSG           27C6
END_ADDR            2832
END_ADDR_CHECK      107A
END_ERROR           106A
END_MSG             26DF
EORI_MSG            1DB0
EOR_MSG             1E3C
ERROR_INSTR         1E88
ERROR_MSG           27D6
ERROR_OP_MSG        1E58
ERROR_SIZE_MSG      1E98
EXT_MSG             1DC6
E_MSG               27D2
FILE_LOOP           1340
FIVE_MSG            27C0
FLIP_DONE           1196
FLIP_LOOP           1178
FLIP_START          1168
FOUR_MSG            27BE
F_MSG               27D4
GOODBYE_MSG         2765
GREETING_MSG        26F8
HEX_DONE            2572
IMPLEMENT_MSG       1E6C
INVALID_INSTR       1630
JMP_MSG             1DE5
JSR_MSG             1DE1
JUMP_0              1450
JUMP_1              148E
JUMP_2              149C
JUMP_3              14B4
JUMP_4              14CC
JUMP_5              1538
JUMP_6              154A
JUMP_7              1570
JUMP_8              1578
JUMP_9              1596
JUMP_A              159E
JUMP_B              15A4
JUMP_C              15CA
JUMP_D              15F0
JUMP_E              160C
JUMP_ERROR          1622
JUMP_OP_CODE        13CE
J_ABS               2336
J_ABS_ERROR         245E
J_ABS_TABLE         23D0
J_MOVEA_L           1738
J_MOVEA_W           1780
J_MOVE_L            175C
J_MOVE_W            17A4
J_SUBCLASS_0        2404
J_SUBCLASS_1        242C
J_TBL_A             233E
J_TBL_A_DECR        23A6
J_TBL_A_INCR        2386
J_TBL_A_P           2366
J_TBL_D             2352
LEA_MSG             1DDD
LEFT_MEM            1CBC
LEFT_REG            1BD8
LET_ASCII           112A
LF                  A
LONG_MSG            1E55
LSL_MEM             1CE8
LSL_MSG             1E29
LSL_REG             1C30
LSR_MEM             1D48
LSR_MSG             1E2D
LSR_REG             1C78
MODE_0_MSG          2678
MODE_1_MSG          267B
MODE_A_1_MSG        2682
MODE_A_2_MSG        2684
MODE_A_MSG          267E
MODE_MINUS_MSG      2687
MODE_TABLE          2304
MOVEA_MSG           1D97
MOVEM0_MSG          2674
MOVEM1_MSG          2676
MOVEM_0             20FE
MOVEM_1             2106
MOVEM_2             210E
MOVEM_3             2116
MOVEM_CHECK_PRINT   211E
MOVEM_DIVISOR       212A
MOVEM_DONE          20FC
MOVEM_L             1974
MOVEM_LOOP          20CA
MOVEM_MODE0         2158
MOVEM_MODE1         2172
MOVEM_MODE2         218E
MOVEM_MODE3         21A8
MOVEM_MSG           1DD7
MOVEM_PRINT_MODE    213A
MOVEM_REG           2050
MOVEM_SRC           2084
MOVEM_START         20B8
MOVEM_W             1950
MOVEQ_MSG           1DF5
MOVE_MSG            1D92
MULS_MSG            1E13
MULU_MSG            1E0E
NEW_LINE            27E4
NEXT_PAGE_MSG       27E7
NINE_MSG            27C8
NOP_MSG             1DBA
NOT_MSG             1DC2
NUM_ASCII           1116
ONE_MSG             27B8
OPMODE              1A4A
OPMODE_ADDA         1A84
OPMODE_ASHIFT       1A9E
OP_CODE_ADD         1B94
OP_CODE_ADDA        1BAC
OP_CODE_ADDI        1816
OP_CODE_ADDQ        1998
OP_CODE_AND         1B7C
OP_CODE_ANDI        17E2
OP_CODE_ASD_MEM     1CA8
OP_CODE_ASD_REG     1BC4
OP_CODE_BASE_MOVE   171A
OP_CODE_BEQ         1B2C
OP_CODE_BRA         1B04
OP_CODE_BSR         1B18
OP_CODE_CLR         1864
OP_CODE_CMP         19CC
OP_CODE_CMPI        184A
OP_CODE_DIVS        19FE
OP_CODE_DIVU        19E6
OP_CODE_EORI        1830
OP_CODE_EXT         1898
OP_CODE_JMP         1914
OP_CODE_JSR         1900
OP_CODE_LEA         1928
OP_CODE_MOVEM       1942
OP_CODE_MOVEQ       1B40
OP_CODE_MULS        1B54
OP_CODE_MULU        1B68
OP_CODE_NOP         18B2
OP_CODE_NOT         187E
OP_CODE_OR          1A16
OP_CODE_ORI         17C8
OP_CODE_RTE         18E4
OP_CODE_RTS         18F2
OP_CODE_STOP        18C0
OP_CODE_SUB         1A30
OP_CODE_SUBI        17FC
OP_CODE_SUBQ        19B2
ORI_MSG             1D9D
OR_MSG              1E39
PERCENT             1E4D
POUND               1E49
POUND_MSG           2690
PRINT_ADDRESS       113E
PRINT_ADDRESS_EXIT  1232
PRINT_ADDRESS_LOOP  1198
PRINT_ADR0          1240
PRINT_ADR1          1250
PRINT_ADR2          1260
PRINT_ADR3          1270
PRINT_ADR4          1280
PRINT_ADR5          1290
PRINT_ADR6          12A0
PRINT_ADR7          12B0
PRINT_ADR8          12C0
PRINT_ADR9          12D0
PRINT_ADRA          12E0
PRINT_ADRB          12F0
PRINT_ADRC          1300
PRINT_ADRD          1310
PRINT_ADRE          1320
PRINT_ADRF          1330
PRINT_ASCII0        2574
PRINT_ASCII1        2584
PRINT_ASCII2        2594
PRINT_ASCII3        25A4
PRINT_ASCII4        25B4
PRINT_ASCII5        25C4
PRINT_ASCII6        25D4
PRINT_ASCII7        25E4
PRINT_ASCII8        25F4
PRINT_ASCII9        2604
PRINT_ASCIIA        2614
PRINT_ASCIIB        2624
PRINT_ASCIIC        2634
PRINT_ASCIID        2644
PRINT_ASCIIE        2654
PRINT_ASCIIF        2664
PRINT_BYTE          1AC0
PRINT_DELAY         137E
PRINT_LONG          1AE4
PRINT_WORD          1AD2
REPEAT_MSG          2723
REVERSESRC_EA       1F2C
RIGHT_MEM           1CC2
RIGHT_REG           1BF8
ROL_MEM             1D08
ROL_MSG             1E31
ROL_REG             1C48
ROR_MEM             1D68
ROR_MSG             1E35
ROR_REG             1C90
RTE_MSG             1DCF
RTS_MSG             1DD3
SAVE_END            10BA
SAVE_START          104E
SEPERATOR           268E
SEVEN_MSG           27C4
SIX_MSG             27C2
SPACE_MSG           27B3
START               1000
START_ADDR_CHECK    1016
START_ERROR         105C
START_MSG           26C5
STA_ADDR            280A
STOP_MSG            1DCA
SUBCLASS1_1         2693
SUBCLASS1_2         2697
SUBCLASS_CHECK      23EA
SUBI_MSG            1DA6
SUBQ_MSG            1D8D
SUB_MSG             1E06
SUCCESS_MSG         27DC
TEMP_MSG            26A1
THREE_MSG           27BC
TMP_STR             26A5
TRAP_MSG            1E44
TWO_MSG             27BA
WORD_MSG            1E52
WRONG_SIZE          1AF6
ZERO_MSG            27B6
